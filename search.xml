<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【讲课】8.8网课]]></title>
    <url>%2F%E3%80%90%E8%AE%B2%E8%AF%BE%E3%80%918-8%E7%BD%91%E8%AF%BE%2F</url>
    <content type="text"><![CDATA[8.8 网课]]></content>
      <tags>
        <tag>讲课</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【考试】8.7模拟考试]]></title>
    <url>%2F%E3%80%90%E8%80%83%E8%AF%95%E3%80%918-7%E6%A8%A1%E6%8B%9F%E8%80%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[校内资料，请输入密码访问 (*╹▽╹*) Incorrect Password! No content to display! U2FsdGVkX1/Ct4JcV2Zl79ehZJGbK8yD8OCFX5QhKPUN46mhM8SNcUkY7A2EcPdixIIMKa8lHhDKx9kUQPD2vWx5ucQoFHgtWWcW0XjUtwpO3LtHMnExU2Fdr1pzed7aWbGCwMpAfREX+fpjCxyTpWtrcw/L+su0s9QzlvzLi+NwRu7BOJtrI2mJMUyME0Xs1Buj9//tuBzlXgs0sep2GbSoTLIONl7LvW2fsrUA7ndsApT8MaFf4bzLMPtAzU/aubwxL7Idn8a1SMOI79qi2hNBLlA7ZqNvlDvR1ISyzzWsY4hRVCAzw/TtnnY8dNgM0OQacKM9u9w0tO4ynzybo4Yb1gNxsZptNmjr578e05O4+puDIBQXXg2i0QKKmgrsrqGudmKN0jNNBXrGXFiJFAAl69AmntVNZEUxRTc1sJ+EoMvkLLsuTNThWEZtrv7KcdL1TML1so9orRjVUUtj3778Bkf3oEvRvgj4kn39iHCoM2SNx1xT4JAN3pSgQ0kY0Qnjv8AxANHk9FC+W0Jz+RDy3B/EXuZEM2Kmjbu3luJ+8X1l+xI7CMr2U2lUfrQoUXdGAnC7mya/8dkrm4namopVGZ79CXIgxGboMgqyWVap6XXC0DJyh0rFgxENNAusuqIkDn7qyqrex3fVxRDZ+Vu+E93onyDyPaHKiM1yJCHTF2tRX9CySOt1cHyVvOtH7VgXcdVOtQfXBdUpnzwOAGjrPq58XuGM77zUN7UBECntbWkLS5WbW4VI/B6lujOaIe8WsuEmAG+ndm17sGjIZ2iHuusqjHGteh1Bv5Kkt3DdynlVeU5P3Mnr/S7jCoG0acOBvqb06egxkEIi4yvh2I1zY3oDNgBr/oj32j6KXeJZhOpzWUKjpRl9Ky0JqUXa6ST4A+sEKkhTPl7KoyTUpCYiDaxFWaYQM6i0s5kH0X2hbqIrzkw2nmeTA1gGmAdfUeq9YjQ7AalPdTc1r67NXirsLrO0MYk9SgpDUgdyX3ZiM41hFN42Cy3btpCAzoe953fHKW5xPYZFrHFknR+Y3lz3TmBNGRxDfHLOgWL0s24waaY27+m4L40CnuhmnERMGdlcWkFEo+AvX6guGr/h1ctYUeoPMk9fPw0UAw4IOKCIezKuqukcn1WDDABH9amNL9fpHk+/B2qcAt6ZUpFF6E4qPuZuvjdXsF8mAI14q5Kn82FjTPGQH0Q8Qr80gcBXiYOGngXtPSkEvHPwweREZszIvcUTs5Qb7F32i4awx9gM7ond51b+UJZUZ5b2HU7FmdVv7vKFn+FSvZ+SwTyt+1Uu0yDyw+sMtgfygH9Ft1f64HgNCE5oYeFWVLJYQQoZ/xmrjf0nYZNiNRWAbSXbJrsfRT3QFIIs3BihtKFuAuFD0V/IrdyKkSzmtwvvF5mf5hTcTsOIvhMNeSNV+H2v4gCOW4RDG+iHRR2HjeZGw4rc9bSl69VeWJL1dYkxYg5bYt802Mi4w7t/Sc+9uDY4TnhNxMYYs1bc03J1ZoPOIjjnviV01W6AYzFelPU+IphekQ2l0QxTD19uB1REtQKKQzYLJt/0yP4oBN050327nz30pvxgUpFvJYHiQeBMwGKgLqbrhmCEkRHz/mhh538SLPYd57jz1VmlwVzcUSSCh/f0IBPbkt5SG1IdDfjan5ATN2EQrRB20B/AEUW16CX2EalqxYUZrCLneeOv0CchLTNEjC+o61aXUcrddUZYEYnH8kxFBW1cwZyw5fRCc5M7qO8SdbLaHHHEBji4r63NwddBkpy4Z2Ay99LLPMsM9LIDiJJFgYaAaN+oIK5T1ds+uJAT5VRxkEqs8/Nbfnwby1fjI8HcWkyO/+bC5naR5pD0e1ZFL+JU00Vr2tuc+mzCHdL0SiXVLt93QpCidNOsiZsZt/w34MVWx9auMH1h8PV42faT1cK7xXClAADeibtfOY0JNAS7tQpXTrVOdXcmWBeKnuLM93CHgENx/72wHY2IO4m66Kc3Oikkbeg7fcZ6aOZZxumKQgwGF0aScZLDChnTfNyVICQOHhG+nmd2AP8PAwlMnhRuCEXfKObG4uByhLAi3LG3yKs9Ufo2L3UAO2zaAxl/7lebHsVS0ptsckXyQ6SE5Twf3z2vbTXXapLrysjHQItEcQsM1S6b0LQwodUgiNTWJSn6TxOf4wTpOuCO3WLAAjcDOLIzNjiIPOn+pL2nIvNeGYM4EieKUA4MTXFVxBsqD+mtHiXNetTdZvum1LEcSHfVI9AfqM1lIi5AA0/dfBCqM8Uigp4ClpcnqmurkMrGMdE1TVnjdVi5I6cTgyNbRPWqxmtlV5MbiUAFRXVqoRATbZICoetg2c4m7BEC/IUB9CPpz/oPFuSymfchO1K9YHAAtm3wyiVl7YzEmxkqsJL2I6TuIL8QONBdCfl63E603cgnfcS/BmzzLXdZTmS8Z6U6K4H8jY7AEG6nJ4i3fcez26HYrP1UfP/PfBpE1fV+di6AOkJckuJm6jyvP0GOo8XK2dvhaV2UvZEAoSPCW9SyXMu+0grm6I3y41E3Z9VCoqjYYlvJoi/1XofBQ/LO7ERzf5etVlY9pfcjK8lCL/lGJ6cr7t/bBCJe9y6BItAgFN8H46cH+2T6p8/wFCnGzkp8N5Tb/Y1dkj0ZWMIl1CcpjQpUQruD7AsSI00QectKAqiFZTidJO3j4fHJQ91/b7GeGoDALsSpkP7zSvihovotoHpJ4+/sGC5zV+YginjIzto5cAg/UV4SGEXvAi92BBfHoxbVHVewogP3a4pbGJjHxrJ1CeEJpuc14MFJicipX+DEyTOLvnPNPPEYN5jGOPAQjwcxCQRxgEHB2f43LmSqoR2pvaKgPL+eBbfcyrKo4KYEc6Hq663gzSkxWaaCY6b6fel9ORQjJMbp0V2vjOKbd5iBFXhZKp/+GGJP+WNojZ2cVpj2uPqWF/Hk2m3Xh3e6GbkIOYDj1KGoOL5h8npGzk18GXVvutyxRNzCZmdJFFqQqFsyXFjyuy0Dz//cnYwuRyuWsBrdhzfG5kX6QM5mY525Wi5Fghoyrhlm+uGLNgYwotYFnkpG49lR38ito5dj2X92yIHkXSoQ6vvwXQ28Jvh0kI2IBzN4U+JzvUmPKbggLosDY117VkfRaB3sqfRygGlpw/kXWLpMIJEM78ehL7vUMVd+33NuLuIBOG/OMljNLZoNJ7kYHjwHIQM12Qk8470Jw5bLAtivcCoj/qzgZQAspqy62rPv5heFeC0qYjmWRB9Ahw/Lo97W9q/UaW3rIhNzPDcaqDLGngKJqdMGsyHb/NsGSCBPPKMilQBSm6NeNIcTtJW52ZR6A3AIgOVupbfpVfc8BuAsybwnNBLHAVvwGNgrZGiUHCyvc9ZdV1FwRf+tiM47WdzExrDOouhzZFnlPHp2yFCKkllNwAGdTfc420pvEcsHoU3lkN3DpKj8XY9s/cHkfd+g0H0rWKqxuIwUGXV7RpEkkS4Vbz5AbFAlDzjdKMD/0Tp1zPBxoAwhinGwmZHlP9pw7MQ/OajiaVFGFBI6dh2XGftUWwcSiM/kwUW5S9mJJ8K8q/kH8Qv/EwaNF7yt5PeUEbcRJYqPrC28eWVDrN62fno6KU4YfRGks0AW2xL6BCG/gereakCbHE6oummF0b3Wl6yvokfePJInCB5U5ZbK2svRNhGTLz6MkKamYIKPcHOE1jOsA0x32SgtLxGwdEZxhdoJOuj7wtmgYcvkEj6PrTteAP4O6gYLqRhjctPslLfRqUXVY1Bk2cPYF0MXludZfZ/m+rKMM5B2ApCXCk9BKyGQGzMiLgjZb33I4H+PmeYGH1kaB/fLw6x2K5WKEy1Bt+zJc607Bf8RKep8IwwMPdbkHea4zhnVWl9mvfqIDzVqdjRUdA/rOTyydb/ZzzJbadA13wckDEG0IFJvh8qqmNDehzuInWeGXa8lD4X8V04INukOGLBxDZebbGL6rLS3YSjCQlMzby9/f6b3jQ8ukRS8yvNLuYZI8rH3DuHfPYSFNgw5g3gbNHVlsPAhvNO5PLkI+MSckWTrhY/3jsm4ZXQlg6OKKuVz/QVT+sVcyPnQ/jNc5YVz8jKqIU04uJKShPDLjWQzYmGYRBrEPRPnpDTSjR5ddsuLy9QKjIET6h7wITY0upH2XCP3X6OIt3Ipdvp4vi+zJHdZxc44QjG0ACHU78WNP8XgcK/Pc8GQFiCqs76WdRmLiMAo7mV+6fv7b80MnCz5/7cjD+whzpAC4Wge+6RadVvXfTrJ6miVVAX8o5m60wxKCLVzlO1KsHqUzNoJ1Et5m8dzhD+ZT5XnJbXbqM4Dw3HRIBb3H+3xMXowPbpBjfee9YhL3FnvewUZxXwPZFssJWQ9P8R38iDgB1N3LLGCWrnNwZbLiYpU5VSaoeA/ljpZ+dGgR+ykp05YdCgy3dzHlWZGOJyRtb71FDPeToekLbiooVl864++O6fdEnvlC/qU1PeT7ajTvqOu4M+j0Fyejl4Zn2ZjFxtAQvCYHRG/eFshn1ZKqcZR5eK78/iAVsQZLtewSvDgt+yPYRUxTrJmRee1LuzxKIpzxSoAARe3zWeqepM+xbjW8n/nOvdoYXJ1xxUrTetJIn15rRBjscHHJP0o8wu6sC2BpdQapBMbyWAi606ZNsK7H1JpjsqUoCKv1xv3YvSYwoSGrKv+3HgiQX4rAj6yJmAFNc/1by9y18bX1nVAmvLN0sEKaC1kr6L146KFyo9snpV5EIiN4RG6SsknQRPlEjMC2ZsnghXhci+VTlXD0PKgiYHkzLSXU0kmJLsa7FNjLILzIwcwcjBXpBpWhFSuzre39zh7GKdcyesAbp1faqJtXQpsPXOs1UgOMbbUAvqua+ZEdDmOZThSmPxN8zHokPNh3MMPduWR5hNRKJI+6idlFbX4eOWiOd9cTJsFOrjJyiMe1nOsInnLgAeh0/fQ3ccgDjLKpGrjXzhUPac++KPoqcKrD1iiXiQC3BBPwgXI690NmKfoRXa/9AMzck3SQ6Bvdp24vEy320Vg0Cey4agkKbycElhS7q1xbcc+dkCM8mXKiAnCYEEJucQ6WcXdJYeE4PYj8RlWK62a1UjOmo1qraXa1zsyy6wGwSEPt5ZBnu2/prh+0b8mFHWnvJd72BWjdKn+EPpkQSuLqMRGWz/LM4hgWN9Pr0KXEuyEsL7Kz+Ca9d7hBThVn8JmeC1wCqqvSiJ459QxTxTQ5QCUa8HbPBDmBJkm+Gmdc3KcdFUCk1qkpk/ZNmChr9btG8/Da1VuN3JaxmNPviOetQv3v88/4VUuuifH4kDTBLgOkIn3BmjQWneQ0ZCnLRfhD7SkDSS664XT3u1I739fTWTvSAnL4FhS9BZ2ORnxY4P/f4EryA5JZIalz/uKehSan3I43aSdcQTDgHN6BBce/b1O9siplbNeqemm9tvhv9Yyy1lBjO4Nx5Jjd5gviMAXTFXUqNa7TzFSqN1x5PMhwqBds96ueTZVBbR+ACokcKzPmnHS42boflOa4bFHwW76uZZvGA8dsTVoW8z0aXxvO/imyxZsl5SpdNymbONTkLFGU2GeU2gvGkec7v++Yz019iW5Evkshv9chYdL+mavN+oUikWTIdwn+yT1gN9Qny1xlxA7uVq0l/WodTtkOZ6QcMOlY0wZd5NeIuB+CQ/76I00oqxHwnnIB3B0asBiB5HUeyd6NshagpF/G+wePeZO+h0OAqftn0ODqML7KkIAM0GPyynPwW16A6D9iU/RWYPBjIfNCL97vCO63Cqkz9Pp4fkMH+RatCFK7N3OfoLY4+j6NeU1yUnjd/w8rHbghSEN3o9UzzpJmm3QIW7tYhwoKltH1BV3qxoE3GcBH3hdnCOFUPjj5itLhPHpOAC5+NDFFaMH5i2LUw+aqEavzgJSd34m9vHYdyvpp4SAR0Huu75B2NW3H8XTscHHeyT3F4z1g5BBqh3MRb7MhawhfO3fC3r9iusPaCKALyNCqb7i3yYdrKHEwsGewqi+qR5zHvZ4665/aKzp95bc5Cp2uw4qbk/z4V3xe0TFZ6P9dBjxHupGwe3iFurrE+9yqMpviY/lWFSRFb1KbwcjKkfzjoup6kYSuePac0gXPAss7GRhIRuCURB5Np3X3cmoRsRC1JykRgDVikDYT/nbr5xfi7B+xv0XcT8fGd+3jGkgeqDSFONwbyIjoYw1plky71hYcTPqLsD4IhboCN4XJWGrXGZ6IebFvXwS41qAdkZ/RzcJqG5v5iY31jRkL4Tj4vg1SZN7vjsUuRU8Lkw+0V9V1pi+C9HaXhiWCxBX3f0x1FjLxKw8cLyoAETB5YMZ2u7DYixbif7Mh6ARZDH+8AZ96xqmJA0c8vPjRBH5DvWnMALo9250vyqpap0HIC+1DxAsvMVuUczMToRtjc/+3HIawVO2x3YFGJezJGz03uvi4TkelsSdOHoQnKku00ZhNd0YeKoa0y9UXODkGUyMprq/gErH3RQNyHs6tZ2hWW5lzi3Wy01JqW4a8mgSOgjnSVfOREwCAW/CcIX2D1sji5p5afhEEV6d00X5R7sSVixTJVZEz9YplKzJu29xLHxQVolavkKT8Pfr41vT8S/+V/Zv+VAF53qEulmvEA+aZLBIT8Ipkf76Nv0ZjWel/z+Oqtd6MF0EiujsEBlGZdC8EElqzvTdJ+8wvgBSrwv/sfITsXsczbat/kO8K9hVmHGNOOlKh2Ns+uTou2Bw8aFRRJiCsaVvEF6nnHsI5l6N9XOEDycVrqTj9ZvvueWAPlej7IPuPS0bOeBbYAjy+LmlfcCbOU8YG2n5/taKHTSfFBm8FxS3WhHOqD9digNjYwylrGUU3tc0O4tsxquDEfiDFmLGA8psOE4yiU6a6sVOJRwWXK5DmPVsv9nt4txsp6AbPIgchwq44a0crSUf9SSjvvPO+gENRjlr7KmZH9ZdPHEp5xY+sH+GqubrB0jejC2JtPbj6Wi6m8eSMTx+6aERPe2rdS467EJGhO9ZBmkuYAw31I+nmi4oyKEeY0I7MYX9kNSX4/62wipEJiZNmvdNf7Ma0ua+m5+XndXn7Mk7wZ74HAGS4sSqbGZ6/cm+74HqflAGCdcCOV+B3MSlp4qYStBSHhCJhOpfY9KCeYw1WDY7yoRDf8MkgMDIlgDhy9s+RLQaujQv5ZoHwpHCZkbTD72+JX95JqZkFb3iPZp9AdFTjWqk5p/4SnH6DxEnzM8pxURgIPS52dwgQXlPag+rQ76m6pC1C2hmta+wBGPbziIuao3xWSXZbZc5XutMYxnZj9BaLxpEu0/3zCnYDmUhz42OoJEr8rdlEgx3qYpL8Ck7BOcqziPb9W+wWKxgNOpB3tEI8V1M5mPZ6bip+1ASKbu7hOK5EQn3xoDhLoDr2X4zINXC4ziYa96fRmxZ9Qk8R81GswFN6c3Y4IMkIdSDpUpM1bM7+XSBtQtz99UXHbD+EjN7W7gFqwAqy3s7cRbfnFRmsvvjLJ8Alw6P6B7BEuclB2uUOBcGdJAIgbZHn2FujdORSWd9Y14oLT62CY/LIC6aRKS6BCahzsLUQRobBmviSaVmjBJnK5na1NoOGAmlHhE23IUHwmBR8gXhzv3Bkv/4TPtqbR1g3A/5A9W2Q6SVDPUlC/WyOIrpeGhApkvxbzpFreFatUzGetwklHQjY8iN/9jtz+fzzr08teYKRvj1gkiTb2iMnsYW+5r8RPFV8G7Va2BOu4yqGDfwHwS4f7O9+I7OU7alV5Vplj8YEr00OiuL7yGzApxtdkrW/FckWSecB75mnx8Os3aVaVeclbfgrIARDneRVl+G2Bshx/JrshzwipSWQsjZLA1AiIK+jOq5NObaXxYx0Bj27gUiAG6N0GTjI9deLG2u5UZ25agai45+9Olo0St1lONK6xIco6JlY42nY5XN75ujUgsgMFz0wYFQf0DKw92vvaIUbKZNfJkeo6IMoc1xkPY76/vAGjWjdCROOMqDpZjdzLLOnl7mnv950v7TmjNwlYk7AD0lqoSbgd5hsgrtFyrInwTjNhQD3ih11MI0wsWNe+Rz6XNAYYdDpfHmPNvI3Tv5+2jqBMUJxh+039+JSKap/w0b/wTNuXGRfYIdmbiMPlHiRyrkLDLV3JgOs5eDyvX45UD6bJjaYLdDy6Yzt8e+Eb0rdXs0XtNi47l9UqzP+MordeYCbyn3ZkdXF2JYqms0D8qgMs2dXqnrwSufGhxPtEBp1HA9EPnfyloUEVJKfn1xpvdxPme5yD+RcNBbs3QabBrpZ8FMv9qgMO8d5oMK1bG598e3Mrsk3ycoVUM8Vg3kZOOgMrZY3fLKuS+j78o4qeYuUPMOijkUjc50Yd7EkC6Vb7VGF/pyvGP8xOxcLXRTZZbwo1r+Pwgv6Twf0lcCGiy0ApdBQNK0jXo+PSvMgCyfjuUb8dXVjPt9+MBMt/v/67ETtqjyTs9BaDp6qKfApTwPh+NR34rwr3lyOJ/W1zlNLnbaPfs5iitON+fZ1Vex624N9Su9qURQcjd+DLpvdMKC1Gwm0/F9Mq6WqPSnmxLyQLQYNhjL1lu/JY83n3TaQK5itLkXIdXIcl7FxCdEOa4x2ertky1OstgfEseKvuBC/rUqQEUAeaMROD8CHpoPjK7MYNQBUhNRFcuVwAxy/0hlmIEdrblzIXvNPB2VHH1GhCYOiEh0NZsRy+1lJpylj5qtvvPoPmqOiCJ9EChsUiIQBjOE4zypdHHPOSfEQurjzbQd4dCtJLFDOp9r2FJiikBXqXP2u3uBlb/Yke4n9uiHWJmV6IqjA/iVclhxoCdCwsvNc9HCGy97BzdFVV3VE5uwKkJ5vsKHuXj/FrNqMHY89tMGfy7lqUdaF+wtgTN9OlpjawBpXpjklGs3HrHNOOgJxj5qkNs7LtbCHE0FM3356iiXbmkf7iAVvSsH4XCWla6jlXHaetreYhk/FsPcTPrce5i2doGGiOVaZ8wF4WCcVSFqNLT404m79pIWvfoCTaEtDnjYoABAI9c8IVVJOX/k8oAvmZF6SsrceHNElKhl0nbazlOf/7kRJiMGmtyJLtQ7CqQ53AWh0waXSLO5QmCy+IrM1sXwPpxyJAer83geYMuVbO6In2FdzBbxA/mHydLHGtsG+BxdAQ7XYcHL0/NUgO8bKD5yE1pHY+hy5EZYs9+7epCLbB1fVbZS6bMFsaP3N7XjQi/C8I4neef0dN5olpIGRdyB6Fys9Nk2DEdMPPdvoMRBTUfFAuo0bSPRWw0NV0UHy4+Lu6JL6Blj7JZdYrg4OcItdarebqsj5m5VKw1Hh9joPaCj3qO4hOVbnRtp0f0a9IsVJ470LVusr79KEF4jfp9c1kBM6F5dE7b+76V9HvGNPwI6OptWdlKB+PZP0eWoVqNtNrCbU//8ctTcWEuuL2yKndke0Floai/7+Om1BI5ncS7sPKmYzePy1ippkOVUTNJlc1LEiEyYMEk8L5BGmmfXRfqDaC6Z1r98m3/RgtkGH8IW4NIxh6yisarpeDxbPQQkOLs1+4u7tdo/Vb3AVEDY81iz+Asstcz3goybcq54J4ynpv6hiJUy/lZKubuB7R6TV4+z0qM/JZfx4HkPdzk/KtNU/heqKAyWbgTUr2Sd4W+9bDR0/iE0i8YMPmZN/VmYvdFOzgQx3ETcGRMiqD0GMJ0rtzIcaJ6xoQha5O4cG2pnrnVU2ljh0Sx477NDgcIy47D1KBDlKVpBPzngo+d0Xn1FxykaTwz0XlfbRo19JSfU13dYmkr8cFmrgzr8QTLNW5F9ZyfsbiobqA25MyyUdMCovreHUwdY3ERgDEyQI7nfcthtfhT/H2/mNvJd/r94dlgs+yGcrYmjsKiDv9ogmB5w8VsZf7Ip3Qd4wCN0r1qBMwbXN8QS7RblLtjx3AePIM+P3+7N/AxJaTZlgdlm0c2Sbyp9+Wk+JPTI/o/xWeUp2Qz9nQPSB/uX77fb6zhDWTWWxSEcru/y2WfVImsskViq2/j60iILLuhrjDGjel9liSOEkq88/bMwdsNCCf0HjOC4hjBDDEUZCkPclh9mhyxo/Wg92lYeemmq5lqU1IP09n/cH3jCXZTU41oiMd9Sb16B2L0ljIRhpA2tbkMy7ZGHXhBG+199SCaCZrdndWv7ct2qun3g/x/KY+J+ms6BspyFT8PuTSDE0BwbkVKSQHF8YsDsrJIztmiVsH7Zk7NM0f9Yyo4rI/nnZSPApJEt5mg9HWJxsHuNj5dHMzESB4mx+gprJjox9H4GI1AKrOEKtasbP8ABqw3APQzh61PVZYZPQmwQm/1j/XUBa+qM30Vy5PNvpPIXnDhDneXUBjvpKfYLe0aJtpxNbDo8LjMIX3UQMPPO+sYL7mR8P9rRbk9rLngOFGss+E5f32sefGVvvRaQruMq4qhbZ18417Zpr6Tj2ecGLZO5sZb2z1+llvKRW0ZfEDKoFVwHkDr0/wr8If3SnnPAHoucHkXmXuh7eCsDDIWvVsI1ET08AXyTx/1omzk9rCEocSpIN3sohwhGXntIBA/J10ajtAyFg9ueKyWs18ZnWRRWjBYtTns0m3DkoDwRP/OG7FRepTHJpzlLrvF9b0RNgQQ8elz6zwDDBlrrjsrhQMdgPeQipJt8ZkrPyNj+w0rZzRGHhl4ZRc0z9ipKBnZtbpgNBWKhAzdeL8qpUBNK1lO4WW9yfU30k9mxvvWGJCtST4ezFFjszuzAeAg6S2OOkCqm3/689Dw5oxc2fk5jy3BVWLW1IbPdZ1asgZuF0LdZpvvTIzeZbNJQvd0bPAHsb0KWPOzzenS5B8+LiPUl1+xQ21GZ9t/A51kKiWbu0UlKGtmW+LRUhfehx+5TkCfcSY8MMffLxmaQNBWpr5BqgGwQhTmdMRTHFm1GMULIwtMnV/+fkOWUY8TBam6wbLEPMK0b6eLJ7ywflpn1oROHIRUH0liU47a1tXw+yW+rzZdpOdKpVP07W72AUtAICyOYU8zlD3DrpqdM8tBW33s1MoL0M2PiLDCjxxKvx7Vt41HXq1hiKr73X+SKC5DLYP6XSwUptdTte+H9nsB6eLKY9eaKK8aKbxgjHaNW63qlz1lmgT2V70/ieNna0AzfS5N7rKaHJgCODSW5htycDVwZaYp22rk5Va0rlI64ZmQZgR1HpPbKR5npTSaJr+huTawDmIxoo9imU5ZElEB7DG9VA8M/XWCrVTGOKeT188+lj4xD7ebDSDYGoPithY49sVKGpmPVvh0su/Wg67JYGcoFx9FcsaBD35LU7N5q1OuieW214VKqM60C+mYUCTYcM/oCUIjOUskVLhCQJmRnit5rLApsXVo2hAtq93CMMXKveb5yKc45+SV4gSzgf9U93aUNebOCet9KUre2d1Q61+tlmG5rhNQP1VzoLHhj8kExP+2GkYvlXx/C7A7qjjikHrETkLSPU/3CuT2y71nILovkRDkgwdQG/YPY/Ga2eehBCvHYWOlF5m6JKqIiDUWkDuvyrrx9V9MJOLBVBHV0BTZkIpmj4fIuR3N2J4+t8fEycgkBPV8IpcjMpFoWihL1x9hVdardwWh8uvlxraPR+J/Lg+yY8SQApgYbQGWSIgHVapPHvBggbuaT45TBd0alHJC7Cl+TqP35UxapPdpdQrgH3V1oesC98xV0Z+W5D/CoQn4NOce4501miHcX5ow7opEgV5ParlUuvkuGQ8mKi81Xtq5rk7g+LiFa+R/+TPpV7Dc9RlbC+BZ2jJo0s1pO+gi0iWKkRuZjysLrav40U2qIvjrtFwApGmDluuI+TdRwjQbfVKYhlMizvNECbwu2fkk8NfSrHRU3wI49RLQ+XwE14De6Y4R3ygOYTrjKGoqFT4j387XeP2agCMaEeel56syT0lqD4txmRBABwdvRnHLJUBzSzNcpaB1OLK5gOEvVJuaDEzdJjOZavtUhTMlbx5w+o6FbDU+e38JD3Ofz7CkEgMrdtIHDvDaEF8Vn8sDThM31PDocADNrkn8id8RJVFsUswmsJ1MTyMXEWCBtq8nJyPJYHVBa6DtCf+Crv0zFdJ136VKXL9Jl0hgBNpKmH+hgYw9FQhpfx8dfcFS1KfzVyxCidQZAjMTf0XLTooa4acqvKBrvf5T38uyjedF1qcvybQh2OWYfkc3Odz5ireB/B1VTR3qQlyVhs8MA0obKC7C6oEJZ5BVM5XOz13v59ZSGzUXjk+IkXoDlzLUd97iy53pgrhw7bdke5eFkDzZ/oMWX8ZKwJex5qEtKlU9tuoOF311A+N/mXAZU+Jx8MBVd2JB2BoC+VK1XkbTwfVJf2rIMgECAwPdOzNwPIquvdC0aOGGUjUDE9CbWKXZU9Ra64mPIfe/QeM681R3rhDiIahUqCe9hGvC+inp1fdw/KXBehefiUw7Xf+nTwRdVO47CUT0yXAs1N5VWNJmmTRWvc4t+ZxJHsA9BzxnVqrFd9A2MaW3g4KgHnXVFGkcdDVISU9PHUsSUw9H3wT/PvNe8N7k+LXZbAqwRML3BfDpW+bURtzGOiJpP6mxbFqjuHmEhkxCZ+Iaa/GUfHr7xLZ9jkn78OAkcWOYucyvuMhigw0i0wBv27wWL/Zyl9dDqXHnE8XFvCPO9dzjthPQWA4/Dkx4N3+VnJscUo33/Mzt4L2CDp+DJd3AW4HQpGbVril6AEYZNp00bIW7O0PQfqOwMF4zeJMc2D+WqAfsLq3vsv0Hs2BmUgiNXq9Qp0B8whPqmtHOzgIY95802NH8uUgG0EWftRiBgCqlhCqFB1lqB2Yyn9/6c2NgkBwiVE5MkFk2qzLN/UatjmSx8UkQ1kRmQkI9pj5vA0PMfO1bXi0iuVSmKtqWsiYYr0W7WMuSCbZI6KZVz6rRIqMvf/DCpzgyd2SEOHM7fI2mRxTKgYvPLaprPuo+1jUeBFXp6zN1K6hrVjkBh3A3dCyFaIa5KSWdMy9Pdrbu+zYw395wIpKDE4NsRWKue1oaJiWaXIzdWaxWdp8DawWvglmxI2uBGmYrKNq6eVate9UXiMpW35TDSPXAng9Df5/XYn1Hl6nqMagp+Jomt7lPnLKI5L7vIDIYFHZ8h02WQZO/0lC6DfUyPFOCNSVmQuo/DfD/DGNiZH9S6+tPTHNivCxu9Fco8coCcLFyKzcCKsn859h+nwbKaWQWtyalQzdJ6e0XkwcgOF22zEjaVtDE2mgpo740sdvS5F2ox0vzVjxQbnuKZlgeUGteTbNuaaQGF8DinduxCNoQg1J8iS+Hph+9uhqaTFhjPuFIqAh8L8HKSkpBEzv9mOjph9WY6kqYPSqa8PmZXEGYPrZV1mseokWGwSM7t5eurcL6g+rKiuviZoEaClB5se29ng8APv/feVWjjSsmtke//oAjGWHg4S7EcpYVcqfVDeUMC1wAjlACWmCAjXjBD01pyARfBXcbsSOsbRe5vvJyzQWgju/EEqSO9dWZWPXG6ff7g35XySF3npHvYGW6EvmU6MS/k2rUztECau5aetgXBFaPV6ooUuv6yD8x78ry9HxX6TEWTomrU9VFx5qE8LODnhC/YdbDDYurHfTpkNB5Dl3Mg9UcwS0S6xLa+o2B7Dpr654tI85eaYXO39uiI2uDB4DuOotuIEoxJC6IyhAZTGzVMMrGZInjIXlmifLNUX8zzdhoEoFn7cBPXPCAlfU7/r3XlE1DifLisFFN24NLR0shpg/O1O1uoxvKfKog/7G/cY8wOF5qiym2yy6fDxBF8uyd0xA6uoxEl41daPE54WcBZzvLrtdDKEf4Ui/xqzP4cf3Oyf576o9yQCr+8SH4yXrLkVpvHZQGknek350CVSvQRg8YknzwxotuS8PcMO2pNP+94NL1P6BZqN4dY6GdFcE3/sv2XxxTW9tH3dedbMvvBhPKMLVLc628lWG0B+cDwweG039UFKwOSSgFef2v/NSxWdTffUj9Hz1JnuuPMFjS0qR2ui7AHX0iuvsUE3juEQqaMBhlSpgGJKf1fKwlKNxTQkmdPQknlDrim4nlDlK1/9zO4T/H0m1EYMa0wEXepegXQy2NZH3hLyKdMXNk1bpYtlwu9klw1xRMRMNOp44cJB5S596opm/+rzV5c+Xa37N38HF7a7FZO7y9a3uXXyTOzUMb/yrVSxLn7qniON2vkQWmTIiahSoIDtkTYLZWvcmbUwgKOcU3ujDTZTk0epid93fo6xp7yjmT0xHmV2UAL4k67EKUTEng0gxIEFvx1vRV3bvANr5dgsRSbSx9gzEDckJLbAcae69ot9k/wn6KpK7AoTRvm6mZzSKj8bEUr/nialOpwgQ5kz5uQiXN+JvbP2xi00BMTAI9/fe86Y5fta+cmfxr//+VdoTVijK/yVJs+Ajh+Iu31v2RoskuI3W5g8cmczhhqjOl13ipoZCCouIHvendRZ3PEshBAr0towVS2DwHHxLN3eBbJ3SyC5r/x0Iu7kw98CZIAK8H+HcBE5WPXSjN3Wbc9So6H/QO67LCJFslVrgrCIlraIMetqA1oeRRvpmbgDklJ25CQ+65gYB1J3Ikx09e/im7gw2fgNinnpyGJ7EX+L9SovSI/UzjpNtskeAHigPmXtpp4hcA2SC6lGuRLl/Fj/NfHWT+rTlGjsvnt4EaA1aD7ZV5osW5MP920r/y5VOoCiT3YOAJCC8H/RzswRY3+CflCSFcxTb4lrrjp0UEfO6BuVGhR98o2ZxpR3QUXqasfksIMhJ8XVLU5cZ6rMb+8GRpOEHJ7NcE8wcbBulcVHlXTva/n+nRs6jjkRKJcf+C/wn4AeebX0ZKU0y+baT4rLRS4Csg6Dj1br5pg5jOkOt9Y35LPA9o/Toya6nLz9xpphjsuzM+WyXbt9dQ5Dd88xsrCSozsqe6eu07V0zZTlujolQ1aJVtApYHDPzEpMj9XlkZ0qf8e82yCxuTvKC23x7ofx+YyaF7ePnCxLaTPb8DOBVI6n6yD+FM8QeZAB4JvG8IFh2P9oeGOUbuv6UA9Pqv9uT93mUwVbwzY0Gd1ExNm5lz0MN8K/YVZQRCs+15qg28xYYHVEanjXBMbwJw22xq6GCor5SPMe6TYU/HXZoheNpBGbDyGOIgBHBS8a0a0ELvlFIz6fm4xQgbvUom0RQY2Xaf/2AXModU4vPCWk8A/PgYze3zIFrgiWhCUgGEfSygeXFDVmGkNzRA1TNuS1GA8ED3EdRyiMITGfr4UQbL/AGtipo8dTk6QQydyOKEg5HPwE2BdrDyeDs/GeebIf91EXKqoo1WrDZy/3WiZxn1RAM2IT15sjFOzE4Bg9T7i0iQKsv6vyOFqIdHiVZPP/iWFmqbkYF8Vk+Nuf5WRA/WI2wB70taZpA7kAagaiS6hhxYZ5M9l+pfnzkVMMOafVMjPu9dvzDJnVgA6Paer/gWJ8sv65Q5ohM3tbmELLXL8ClpnZiU9JEFCKgL4NMGRfJGL+LE2N0ay4QmijSnNzxsthBWQk+wgBdDqmx5tJbkBdKVVHjaiqRjjW16p/tkZ+nBrkMJXZFndxH4opTYvydEGVP5dfo2MTrABQALDrtDb5NtzxcPE5nNV2mMQnPcVkPbGxD91yRnX+P2LfFC1G/QxKhIkxNYkZTh0d/ZyUo0eJacneKiHWIDnktBSfAPawG6yjqLe2XsGYOr65hFNkA1+H7XzAA4YK3XZaUlX3PCJ73Apg87CJXRPOLklf6Jfpn6ET5SWvcnxdN+7qLe8KtSjI/PDgu+GYy0q9Dc4iDxYKVCYGDbykzQ2U6dz1SPb9yvYrUzyN3Jkav05QB1yybg+HT2lmq23lwrI30yNs+ON0GFfo3p1nTmWcYhs90cn54RuzBhtUkaflalnDpV7ePwk5jQEC6ZsXsARpC3AisTXUa+pAolVsIkn1KSB5MWVGy7LiZ7mvFJnpnmuuLtFLzpys9FskIBhvzJlmKLGi8VW3XsNc4xgJxTSwb3KyUJ15tsYlLGd1/hbxFecGultU0//Kng7bS4WHk4lBBC0Sa/1La7nrB8UUykFRVgMeWdXuPypwk+al/1iMHVMYnEISbmXmczhDMRlJDXtji7cuqSSgKOguQ4TKXSpd5sCdbERBGqppsyKvpPe8k1F8CO0ECAvsK7oXlLg1ZtOo3nDLI38+5g16J7Ip6xGA7nKlxOEqaR0SURQaHt0B0UT1NnKZxBMVdGPG5umuAAffxENPqMrXqYltr9k9zaH1blMnkk+oWshyv7bPhlPsTG2wHhA5p9xXvAnmBwPYSqpPM8ztQZRYT2Zq538fFEIBpOXYQi7E2TS27SwGjbTj1wRYH83KVu4lFaV8T6fB+AeZm3iCdJFUzYYE9VjPniZdDW/2lBMwc6QwyPx2lhkDK6ISgg5KfAW9DqT5PablD5eZsUiUw4PfoPpiJG7d6X10yP+BNZvvGFnFIDwPK3Gm4hEsBekrIrPqtT0PdxYE8wmwt7Y94UDg0pv6cJqqRoVzxNHDfsZZtsR6qnTV8/UfW6DPS3m/g1/stTBJF9HdCZgQlWafl/osVWgAqxG3ND2kcG3tN28W23b7g6A6pS6BLL6UtD3ZIJFmumGIxomYI7Ee9fsvws1BbNBlezi7jkaUpfHHt6T3OA9NvvGZ0rHvJjmySS8c+MAUiZqhMy/XWc5V31ZdDizbQo0Km9Wd5Rbe5FXuoL0I9zUvoBii+1+Hdqt//4MeZ0DOYcZR5mrQ8jFMxbBGTRPOaN7yuWg2ouy+gG1Zrwo3VUkr7Q7K3iO4ATQ/aDskaVrw8F8KlaaeqZpEhWGz//kPwu4oS6F9wKABAivKplNNPI1+tPjzFUmHmTNFnA8W8wGpObOnObConbdFIO4I+hAcnjeSynDiH4i5gYAGT4FXDjXHZZl3XK+TXTXDBdXAQ0qb2PBCd9l/33Ix59n1gvJE6pzIZzj1oY+ejSsW2f2UBHMLHJRS8Jcn2x0MI+Ymecm9kE+Z9kLj8wy/aAYqAZsCGWRWaVy4CFyPOt86cfL3XiiLLt89FjafC7HIGMTUPnmljR1iPeB2pwdNqWN+BH/qif3cD92Xl7OCqyS8Wpp/dAvJqbC5UT9OXYWw/OeI99jEvJCqP/AdPj+ulMRAI1FGm2cBX3OACbxj3QUDgG0Ur9OuxUyHK7h8i0YdeMLzm9CZLy0wE7o1YvNR5q2RmOMQZmMZt5GIybTSfDQ84JI6q89lFczXbZvB774FAHaeMf/J/2XBiA3PSn2puazAJzF5mSmmJX2vIh3aVsbhR59UnLiF3CIqDvCBqC8NAb2zFlMIMO3Q8Td2cDH7VvDTsWNQ+k96AuJUCdVLSFK8nBVmrqv4jUrZXX7Uagsa7DkTsZEjDIqcjR25F1ziXSP42UuEILnH8v4AP1ZS/ZJFOYUx8/0xASjiea5HkUg/QbgX94T38kQuWuyc3kOHGrHshlHtSquI6EuyI/A3qpwTrjMyytlM9Rey/AGd+fSm++TgklLKHlB5kWOjnFVfQ12/xGNbC7MPsJO4n0ovXppfaIIEavZGw13lgX0hXfGdSYGWtheUwsrE4h7DbUhMyiJ7LKwN+wBhiKu6VBV28YJKk+0Cu0FqLV6/ZvoRcl0Zmt6frFWKrJzSzSvs42BBz2/ZgOoTi93xCvS2sfO6UTvwYqfkG1j8o2noBvT6YnFMOf1VMVy0M72YpB2g33X5YEsG9ur3xLacvpVZ1p/FM8ugqLo6fhaxdmDeY7NdRQkxDSsk3VM8NTbcWH0ApqybOBkhjj8KLv4aAaVrLGrR07f7N8y/mhjYrZr64foTOz7cV6jEp4pp1xVELeLMo4+6DvLFyAdJt7T3GhIsNqRyOuqDq2O0fmvw0A2irTPIlVBhBANOVljiVvJzWXRae8Lol15Cxoze7BeQ5LGfENhrgF7X4rwf+mSlrvutZGWxMcs2kpNRbcJ4XebvywJDE11o38VEScyLCZRo0C1IEeoVm634JPPFq0qX5u7+rswuzFweER6keHWMvXYqvw+AUzn2ogN6K2IhoX/EsOWdpSO0mgX+63Uu5G29Yh6wZRoTvp6mGF70oi94w6xQRW6eqdV8lm3Z4v0Y7iXD22Z7zWNp5uFRUNBc24HQzGtVxWEwFDGqtlKs8NIKZZXO4FNZ2CF3H4fIc4wOfzSR4mDmPqjmGjeSM0PGKGkPhv/IOqxNA1dWr2FUoCMSDQ9clM798ALOKTa3ebyKUv6op+6mqKJiSXys3/GazyCH4vIooFshJ6elmlrtvX9s1Umx5tczUQP1HUlLw3YDEBq73CQpH5DxoxR4p6xgRcAX4dIr/d23DaBQG1har9BMgw0otiErxnvy9+YV1cZanmJNvzQSshKmcl9JRBfEl8xQVEl2BWl2tZlz79VyV74uHp9A0QZJFn3ShNUIl72+WLdav9i85GCocJeQThnelYEg4ByjFEUbWVt2GO/9wOSMKM4AO6KTt04BenjcYWtGqqgAm/ORoymxFi6raJeLOh+OnBFxO4fagzxMQyfRQ172ZivR6I07EKLrSJkiSTsxQ5VPQptexkZclu80tj504MqAz1bcV4oAcdSFnXnyC+Ka/WUOiyPMTa9MWhPX2W0lm5JfvSw4rw6haWBl66f0PLsWr42bRe4rTym2N8RbyxH11xozOl6egtVcWXD5nsf4jYp/RauDfm3UzCVOffr4Z0lGF65OVKYNivxTy5Os8+roJ8zqEGdn0Ri6xKQlsOXBirL5WgFq31c9LkA7JeT338h8g3iU7aP0Am1Rm5w55HCoE4mqh4r4T5uHJ/KC5016mnAmFLBl9XFcJrFSudM5SPB8t0cUz3CASNUKVNq5OXjhkct9FnlacBXYge53z29F4W9nvW3RZlDJCVKqtjdaAJVFWqI+7SxYnRiB1ivlwbK1Kpa7wF0GniQzEO8dztq66RhbqWN6z+B9W3OtpkkEDBdz94E2t4ZKMNGAzNpGDUhBgR9lMRzt38aXaI9AfmK6aYJu6fL5bLeNex0GpWIFaEg2gLOhGfVLUc5eXYvMCWQ3jq00VSChJKW4rzH/A+Ys2gDjAkbDRojgG1YoiJQsgRH9LFZwr6TdHiJdGHCux4EtmkNNSuxv47vJVCOVxigvmT1PHBmGA6a479NGa90/lZVxGL3OCQkIIkZ1WZV9Y2TcU/btzRL3naMaKDYk2tkCtrvUyydXXAuC2tcviXCuR+4Itt/0yQ5gpA9Ysos8rYlHuluyKbcSKzAt/pCNiyfQA679NnX+lGDSqPYp6Tdx0Hvi+hgByL0lRjL2+pkazi3UHi1M7v1jIX3cKzc3P2S+d9pmYXrpo077NK4+lsLruRVAMlg0VwS7HtI8WhmXNABguxtTNZUEi/mbb6FdUMhje/lsAP7nPHpc0uLLBsfHm90Y+vPWcDhzwuIinvtknU4/ltq/FgI1MDOVjQPPBrONhRGNHQp92nypoQe2OT5sfvdGvMw8j5ef55sJchoSxx+5Z2ixRZGzezdG35kQ/e6hWuwXk+6Z3ZWnK5IDwy9ZOOU75X2OpgF+yw4Hs57Coa0fBV1BLDAL/8zJHBPq1Chg+b4w1UC8SlRrWUyGTyOEOpPCyS+opsZhosofFbyFv2Hl0c8Cj0ezMkT4GeftsbgThVfIyNHHg9DcEeN8nEUTgZo/wTVn9aYAAsUOl3YdLPIiohN6kBeL1b5s0IiL8WPiUkAweYnDP0vNj19iTJj03PhNjiBJfbyski95xGvX0nZTM2N1IlvgjEYDauFF1Pu73IqRxn39mXeln7c3Z+SwnpR9YRsCuofOKE/HmkdzduG3ENH5qcwDzOo9Bl2BliN+Q7tLnvUdbUjcO4iPaf3rIjJNgN5bnD04kUaBNZuXrZWxarJ/XYB8N4+Rol4uqmgzZIoNuV/HMBbctd/iBqxtZOAZQpgl0Lhz/WyHVgNbyGJRnMB9v/Js92hkpwknadGLq8eNY1wgGYFHmwf0OLcJfcrC2qm7n+8ccKUuxa+y2aWpL5CJy5HLxGeRqvRhelMGnHZst71H5TVn6SiVOcbb8p895nRgByjWkAcpDEwXLqUzgJNoGtr5Dzoj8yELy6rkf4XRaVcUcXS6xglW/TU7nQ+wLYlE1RIrR7DkcH0hsd93fRxYi3jIacm1oJzHdim2j2gXUWuGegl15liXkY1RLm91wIO5miV2eZqJVGSsC+iv5jXfcH4tzGdzOmB9wLXZwSBI/hJoflF9t9s+E2g5fDLsdlhjQJnzWSirCzmKeEJj4SouZrmEYf4A/tPL2JPLFYQzsUKQxd7//i63P7+QRbPYG32nqW/fcdlwmnriLjWoEOeYTm4tIZNXBszvigHnFWxh2/BbG8GkzY8XLfuf8K+lhRQga1cFWWSssrWB5qnGhzeLOb67t+/Zh7GjIVagHcm62zm9RWiiFbNGAUMAxc93qGp6bE4IBWWFKnMFCFWKPjhV7plvCjJJ695W70e+k3uO+BvMor3bbH+ZboLeA1d2fGu3tITAfCXXapVlYbhuW4Vbs9yb16zQZdumKr7N7HPt45XbzFaA45U+HI/tS2ATMCGyvDhbfXTs7ziHZ5OfSFCqXRw6slnpGKOgCyqK2ZKY/BvEK9sss0ZqxDs3tAw3UktroI/aXITTMzgogK8DUA9R3tWxdt3LsgSj4w+UsDMy1uhEY0RFMLtYWQMupzsUooHYPqpgeOo6yLycWUQ9mbPETXkbAcR9PN8Zht1LgZjAZCU1GCZERBmGuAzQss4P6eFUUEzorpwNdF/5bJGroX0wdLdlxVHQs+yTiKzWx7mpoCwS1pQ1LMPdTtP36oI2nJeKZIauVzhsYFKxv3baZnd1JrbwnuMdc7jXrj9of+BlSzVbXLK+CLYqLDpFfKNGkrfa2zFu7OjKDVVlHB23eM5NZOySds1TR3JsUwBQRxsLwxj2CO4y+dW0VLFVplFkyv22SKbHYxakxsegURQmZgFPznmcq2zYLRb7NHo2x47F+tg67oM1p2K8Dgdk6yk6OcDZ8rTydmyJjsaEdHyRdRNFXnQoZJzTzCUwNKulU8wL6z+yoNL3ihxwM2dqO0moWgspxhv6Hlm7gW5cUmis18AsdwFIeOObF5TJsLWt01xVlD6MRUjfrX/fAUjklyKCerX+Y77RBU4i5xWBDM7kD1az3ud9VZC/EO+9RJ3lXA8w37NoqcDcs2TFACYoyv2QOcqW+HBo0R6UtQolDwN5fpmkNl0BKU+xkX/jEHmZQHr4/m0EtjwG10I4eGtv4WyxQ7j+xSVj7Q48xpRlk3eezGolxakvrjYARvmhCCrAl3WbdmKPSCKEuZ50nTcYoh+AcSlLyG9Pio+3LIhmtwJubYq7T2kbml9joSKil1c/sLCQq5YPivjvjyLxbpRb6q3yrqpPax8X2nYoLmCvrcCSqbQIQjJYL31NmTJNa1CS78lo1qakrFbD1AeGMTv/1MQHZh6ntGKQ1oL4PWR36I1DfjqY1bQmXNGObdcXH16dBKHywPCBJ/H6WxQasjrpMv1ofqDKD1lZTXJC1NuHlZvvYJPu6LumeY1u1wdAO+AqFN1mIcl7tagh2O8PbFFsm5JeJ3gAgM4fA1wPDDY2L3t5Va0IjLagwW3xiP8zmAiT1Dgn38htNKU5Ys7EevpvlPQ2FkmoB4Bd7kEn1iXMvxib9P1ZHWo/XvSYO6znnupNhJqZovdheuMFy9zgWEBylMdPlAYCTISjSgfh0ruVzj3dxDhWGNrrK6pJJ4o2OpwojTPWU85njc09Ugb297NFUYdUy97+29M1+9UUNjKNVG/Hc5J1MSJ2E0GMOAa2WkiEdcAFcbt9Dresr10FH7/ffRxx/yHTwhgG54O3vIKMigGTdKoB8p2TQdgS63nAb8W6XOdH8X/6YoJk/0dVnrT69WTx6/QZASQmph2d29HXzJhFG9rnw2Tor3K7tJ3W4CTYAYnefPmXC7QZ2vE+QqEwJZLtOBuWWLb4/VQfTNWQuaaDJ9Cesz709lJ/3WhVixgCIPXszRtCylJ+6smzeufUk9+6BRAG989RPgITByjd90hnWIB8/CVXK7DMdFd79Xuad024qs1TDjHOnIB7nS4q7Rvi/MZ9/tHgJEca/hmZr0jrPNK3BY1Xj1o+DhuvMWZ3cfqSMpN5/p2/KyPI2gAQwjgfgEco+pbsDet8+jeehb0gOawpq62Nxwyiyuw/YUHJvqnCc6lr/9JQgKxrotMGPNvl/TyN5R49nSICvFrd94e6JbNyI2rGsc5OJlwAxmC8p1aTniZngk8T3lOaCUwM5p18Ynzi0q8hnGdHWdcCamupcWYOiCeqg9tjLliuiTBTsBMJAyVPqp14hAo8+Ds6lDKcVkolPkHJfEFqoOvWOu3uOHOk8VSpzGebMpccRjq+eLH9s/7I4QLSzw2wrVWeijqycHRIyKVyO1SjBh3G/lLG7HGWwqQvR123cd1FhOAhGCot8+2YRDTobx0mbEjTY/9ciPcvidxZL0eNUEPrxoBEtIqkKajD8kECXunxl1kmI1uNLHbtuRN4NLW7nIyevDTejWmWshmfuGJsFxr0FMaL5ab9wv7oQ2Ce6vBVQ9NmoNYImw3rqOR1Pr6LdLaLvaSYDUqbbEEjD6IdcyG8GLqPKmrDmYmusBTyD+6KM7zuw8a57p46cx9VIP19F5KQHU5AK2mO6HpbhrdTG+bPUuG0SI5IEphQ90R3gzROJPrm5juG/2kbPNC2NgpRc/AdegZuQQJYTT/WIscq5p8C/vmjLL98FsuCM4iC0XWh7RlgIKgsABiN/HYQ+ALc7/Z2cb61fIDhG3eRXTdboN3q9grRfQfA21ShMjRndR/jUhA0p7shLEqqyuhgs96r266GUM1Losk68hhdC5W7o97fWnUNUudjpUVjYX9A8s8K6JuDtwjqDo8iwdtaYysv7/I6fdY+d2od3tVn/mRPZj91lV5XLTfN2Kz78jbDrE0aKAZUR0dgSc6dayimRCmQ2RYDgTLXck3c+Brx4DHLPCKUTLjBON78jXxXH43SkoSgmCIkj6ALm4xB0VyexPif3nwwxXPwWHr9K3jRt2cah75+etUKqUsV9YktqmlBuW6lUDzjZvmNlewBBZtPdL/pEGAjHVZiX6qeDzCoR6Ct3DiSrKoqFWNv3TtzPVTEGU+/RaBzNNre0LgQ1Ksk1+O8WqJbrLlSwGFpyO5NF/TDj/dQ/jHBwsCy2mNJBT7gKy2TDHtUT3tMkS2PBWTfaymEXoPxOs2k8JnhtLTpybM52NaIQvG+BOUz4QdBqyki86J6bKRYfFML8uS6mSkLwbM3Ex4LkrA8YRgsELRxTO/SMQ8O2sbRne93rzar13WN1nBNzaHT6r47ZDtRChtLXriDw0kJJUIszngP8ltZiuTssd4b6cYLrAvBnsLksHVA+NLRzym0e4P1aGYG8sYaiUObP3kcU2WD+MGpQR/o1Dnedi0Wk3RyBwefiRRDqgKRubXaLfbAJLDZf3+EPZnT9Sqg31w1z5cRE5s/ItBVsdNbiQVJkAdM3AGBw/O9/URW28aWfrPHUD42wGhl6Ld7kkR5pGf4KfgJ5BwWUVR+tW8rhh6n4KXXRGmA9niuQIWU6S6id0kH0hBfTfrvaiJ/QHTk8d8ez33NjM1/4rOQvkvBkYB8X7PaT6KpVDbVXWmu2/KbOzsC+RWk1Us/b2EkKv0EDAimlHrdbBZ6X1uwiMKMfORqqp4WHurmxXaOMvg1Y3hz1oJOUimKw2Q4AsRR3rPQtdXHmv0/V1f2RS3S9oyZImbfKyBVCtJd6/qsUmR3fgEPsNX6SHmbG88hllGqbEE4ZHPU5uMNNwIc1Ha8NORRw9KzwrnTzptwWkBIhioqPKV/lt9gAI2cewqbx3gVEVsauo+hZRmjxi50ZeMNKYuJ7isR15fqv89wVX/70B2cLAvW/QulVq0hEn+lS7kohvkyuLcIKOfetjZsrAljYj9/sQvgMapivFdrzBEWfx8+uHEQ7LdTDLHrTqX/ebwaENdrIgPJCwM1YbAhRKxUrWeMgncEJnyS9wUyWiITGmsRmaPPsV/e/LOWucxUEj9jCFBlTj9QAo0UPPMihhw43CtgtbhiWjOAD/stSdMNNqijU3d24aioFTfdNgmFm+xH4ZaxrStR40jgek+yJ8lTBpLDTqCoWdz4oqt67vojmBZr/WtXm1Ow1uIcfgH4NzOWKxeBU01oUrrL2M4OEDkUgMlTqoTLj3wGSH5yCHtUbvUs1LUKlZCHtK04D3jc05OX3jJvHxKkPg//EZfAm+ULbybczlOBUOUMOgPYw+xRiIp7E7gzYpP24VVlOhtTrW3n9Eqi08V24b0alM+cKZsK+qK9PaAxSOUTHQKXkxTcuCeoVEzOIz7wA93ifUpee/d7KlUiMKq3LTmMpCLdouYPyXOOuBadA+xa00+RBa+eXm0N4w5A28ew0zzzlzekc85WmniloIXtWJlSCIZWkNsmC2Up94EgbyOSY+nBprUGvmsqVvMrFruMqhXNwhjJ/AT1qyFIrGpyGBTVAnudGzbUrvHgKnd5/ehehjqIdUfHVVWqfnoD+B1zQoektPCfOLPu79gmRxRN6VOTx1kS45Niv8VBBdmlsCpQkMSrqjMNECCEf22Y/5QvrUHZsc4DbdLoSLVWRE4f1St2wLHQ1geV48rHcMZkoUQ0yT3ovnKOmA85NUBbyM0b0LnoCj5kuveMDYWNYHqci/8u10I5G8Y1iZ8te5+LGK5B+vtpWyhzPy0BEGdOxwMj1IK1vMtgUA69rewX3NIo/cB8M7gVLN9EZRlwNYsJ2Tq1gNIiMGKnIvmRER6t3j9CHtMw3+ASjrnEYI2esZwi/898zJf0nZAh7DwGjfIgYsw5xm0x79cV6OUJbrlACKyH5zHB1QpzBeyE1pVefJqwSSJPNQpqlnTzUATpeInMNWfAxFQS1TJPXvnVG7u8erkiiPyDpOm8HGNXrxtyWNdd2mZoyLQwIdg8+C988XJooG8sQ1q8q3JAuLonYdzfmXuwLfVnsTdlt+uEJ9RmaG2WUjN5pOzV0F0TmeTcXw19V8DLNF/viFTXP1Gk9AzfBMlQcnnqijhg1r0319kGl7xY4hlbl14Iz7cBclsynHCIxlvEenneXETtXQ4dAjZIZtKMgUTXygrzIDGExAsXpIEzBLcGjskfZ1+6rjfnTw2yuPvRihP4L9eC53kLAwngLhfpGrDCGP+ZDs6UlEORm18XT5smntrfOrJ0vbamw9hAh/mzxAmRDXzrDM4odP0r9khREonYKprJ2vGN3mz3Acdpw1xLC+BVv9+buO116rrjFkzRhUi0f65Nbuezxpt3Bpa6dKU/s6JuFNABuVl4g4AFwGafoxSvYz4hgi7aPX30tmKjpj8g9lCvavRiWD/hRnlfCg3glZMhEqgTp38qW4JwytIrL/H6kXt+tjwgzitbg9I2L+TC4sOf3pf8FT1zSwGl6kBPAbrqwC2I1MNVjKaJuV2cERF7/G48f1EnVT4p1xL51itgUL0oyFaucYqolN9jfXxXQM3K7RK0RquWHNBhQ4eKHcQ+ZbSSsQZ0aTg3L3P2RcACyuREuHkldzyu3p+/y4w6NQ/j9tCVQZe56fv8Uf4TgsaLCv8r1s/JHMqlVkgtQbb3fPUaXngeKIbD1ZntmBr0fLMCvM0vQUgr9L7GUswXHrfpyouDiF0oU7MsKaNiZQTmy+iskp48yXcHbMC7TdRvX5ah02BZHslMoakuNMj2shBHx0ZChfLXgaQxMMKb53kdj8CxvLZZPaVJ2RPdHi9LdjUl/0iAGdsM+EdH2/HFUF3FL3m23asQHyWwARtSYh3nymeMgQRHCSRWdS1PBRUVfoBwPWLba06FrC1ajxhBpNvYRCB7PKNbHuzHhQu/BkkLSxzsPNwojZavQOpbjiaoTf5p0BNT7iEugsZxIz2QmwZNz3s4qAOtO7GikI3Ih6cajlK+R6jDTdH96Dbf36mSXAUsg84z65HPhi1x/tE1UXEVqk3pKCEat/JeEtvXNE/Y9V+JcMhgLIMuott/+dxvOk+NwIQfalDpZqVCDRC90YYUfSclGF0uRk7JBG3ySDE1sObHn1sxw4ZJBFfBhZnzdcz3byCp3cIcztzkEyaLJLCtYNMsHgVJ2LqOCE1FTWqrns0esXw+1LqOUyFuTpDz0ooLLtG3809B5L+2TIGnVuj7Gci0qRo2+JVnZkzu5SWrEhymPHoUDL1Ag9CfOI2d8QEFJ6qxMrBuPcBo0W2YKCh5gfpr+zifBqSuxN6/D9fkVyhDZCU8kdjiReFnEO8V/bAg3JR7ykCjCgvrLgX1YppWDGEhLiGLPKncQiGZZkncVWP4Ud6KUb+cxTS02OdAF2VUcP1GFgiWDR4OYwlzjJmFQPkoMIK6+CTaAERWFbOn1GGIDk+qKKLWD7K+P47jdDudwbLjSj8T1LH4s0U9i8UnP9Blih6T8WIMpZgbpSAQxPrUWvmKQ2gLQ1k3TaI+4bWW2uKiJz6gulrm5y8OCWWZX2kktvELTiByFhB8/fEizl5BAZP/BrYgp5qaUe3s7Rj3kML3jl/YwmbPt8wyEMMdTKghja5TP78G57bnngMHNS6X/I2bz/YjuMqHzDjqavD/aP6EhSlSYMIkcASQN3R7SoGqiZjYMjXWvj1RPra1Wk/yp46+CHBof3FmgCO74C0zBADOF0vp3Cen8JC80jag+6vTnAkjY2BzhOFpDsk/G7+1XB3yzKfNi1ln3/+3m/iN2iGoOeOAtKsn3THwY0KlHzx7QWB5aM3X9jVXmPafxqp0DxUbhmV6dbqguonKPDF7Dra7QV/fzyq5odk8R+OSqb2qXOnK7ozp6SYQwHyoJHV8C0Fd2Symw+81LPcU6UkphPMX3fhZD5CwgHyGuxHTtE15E9w1gewJhCvhWG7GkTGZQ8/eo3NORaTat4p5D69f61fTJoWdeSerGl8yBtNMQD3p1L8tmflqFcOCGOHG0CC/+x44HMHsTvffaTW0kSoJ2pwLkTp6F9G8LpltbGe0RsWQeK4fQhG8Og5sAkin3mIN5NSIAOlUB4H0/A001JkB+qWHbmfdmKtGPf1aC/dqZQlQ7SpQkfs6mxARZoUouHHg+8Vg1d/B5uxAObPaAyuqa48KLqTDvgDV51toRFCu3XFuYZYUbslSyIgQrkavRDu6478mxEwam4z4dT4E3gxhXBno4Y4oYF4XGF7kKmhqjKcKz6oZlqxJ17iVvReH/vtu15pkBkecO34i5ODp8H0QmBIfopXhrIOut0DJ+/OLYjlCmehoXUhStSrDcSJemwsn+dLsARqLTpKmJQ19izDHb6L/vPei3e+hlF5lwFu2e2rzp88c3nzBJyUXhUCXktDHT0w03i6HwIpNkZH+4zcXxckJEu6SU45cZtMpRvdimWuoyYGT2E8ZC3LtlBtauvo+oErW2y/cg1jCudNcRqFoUBh5hwrImPUu8UanDe78sY3zTgBBPZEMwQE09lQ87s1Io+D/FSrstuSXxyISVYEfoEYQMY3CVwRO++JLsPNASuEPplySD3EV2JQg8v0KOXCXv7Shfvrs3kjOTgFmymfhNoYXe0UOFMB8GzM6+7m1IdEkmzF5TkOwt1adr/38e1IBczQ6+mgcNx+m2daL++Ai2WhVbfi6ztkbG8zH7pnMBDQpuz0ZPTUxAc0J4IE3p74PSpQVFB3HWa51LQEKCHzQDc+6Unzqvmz0Fc8N82p9M7MjZBVJ6uTUGgZWPYtu7sE/7kVpX5PRAGxtc45c/6toR6NQ1FBBfFO72vDas+d+Rcm9TzbaZLdPNdeieV/XfQgxeQG7hlMu81k7t2+nFeF4HLVSwFs5YueAp5hhbzUVM2RUi84CDweqetnp+rXlZqMy4wjFwTz9Bge0uyiXVOHXiueJtn5rdLQcQfz5/hXJGPFJwqqiXjHJTSuOaK3hVh2jh+VWmsG3ZITqtJE5RhUNBYYasawBltPw9BTlZn08GiJsZF/+TQPPQBeRSvd+GPPijPQCASfJCvCnfa+oQ0W5G5YNG2Pt5TEfmmHc3j+r1t/tVzrcpqnQ3RbZe3w3JTCoH4C/9Q3SaCv+surpmtlg5Xasbkkbc6inBnhOXEvyU4gRn0tMszdFOWpbakq3WTZNX7GmA9Z1xoJroLItIP+LvqzMvsp0YttPDgM6tYuAFit5eGfJwdtJqnjGQq6gTSEHgwlDGdJI3VAKl7ZiBppXXHLX+HQ3GMzFRmRUsXPHjKu4vm6TOXX1vht3A0ncHMpB7CbFlQOlPqfBBgWwMpsOD1YLzk38n3Cv79K3dv75zymHCfxXJ10cb9pIBRJvzlGTxN+0P0rAQeBbtyFPEC/83yh6b33XxTS5SNVES+YBW267cv5FdIeAfz5lntWxC5XnQfAzzApZ+PQ9SMCD3o4X9S3pY74Wk3Bt+Q0x3i+Ik/CJRr2ErQxeezcboGqYUXdgsqHnFbvDQIOYXpyDrYCTP1Gl7lIcpbuCBb6PGsd4N2JDPW5S+3Hcv2grZGltNKL7Uj9XMuAVoLIve/fj89/WCScY9nVcMx5CVZxnD3NK7CpQGDSQpFaoDPuzpHfBymoRLiw4+Sfi6BuYrpIa9KExSIxfig69wHkAIKwF3/QVlqQN/y4wdyk7dxRmTnRPqTZWnY7Cap1sRK+i8lON/0n+wWB/Q2TAiMc/w144P++tnOSCZ6Y7c0zIQUqEYH/1OrdHLvRcafIrKZ5UyBzHLi2gn7LCd1N65hrQdlcI2oPtuSwECpn2DTOBqmu1hkuKFhByPA845hh2WbPYdA9yQx03HrLXGeNbI3SKZ0GuEbX9ydz6/yR00Z+1GSSW+pOY6phtZHKaYw/7LAWv37ZvYqiq8u4VLiiexCiB/32dF8W9nMAU/NULtG9jXRLCcUwJneuLb/eNttnH6Mna1vu/H7prUc/KpCzSSG36stERuqaBkOL9x27zb5gMe788kQIrSYo+1vxIwo9DhqI0qEOOBq663cMiGX0tuCKpg6bl0b2DhOD0EpZWXl1Fdf1ghpIVnLFCnfXcfWGWP0tVVB5t0m9F69GgTqVyh3PBSy4p0xGoGb+9SP4aW7iAhH3Xs9OP6xiTSEbPmhs94kEN9yMB6tdwj4Tho8eTqJJH90HbAgRUG3aUOy6wHLq64+V46/Li/cxxKiS9AQQOxYHqxoGqgyS9wV8/YlNIkwq4EgbrYU5v+/NPDKdJHfR3qNlBR9967rJY/HCz3iPVkCaVa6fDWqqoqQfbcUmNXrIhVuc2X+9xlqA7JnwfA8iMhvfhxdPIcLv2Kqa+o7iBl64CCGVI0mfoqa6RUXdXJOx+GzjPEhUAxewaukXeyercGpYkyACX+XVR8mQ1AEQnj1vvwzWKPaWIqokGfjQO+Ty+P7Cts9r6MSX38f9aMnFxh1ZrbdU6iyELUSe2Sa9JQEJycJVYH+aeMLRMYZTJdFwHRlaZwlKMHB++HLMtpWDBrI4V6PibI3jN4EV83BzVWaIgkjAniMgKgCanioxFnlHKFvRmGPVOJXTQiRcA8SgB+tbJgXsiUWqQWkAV5tEjL7AsfRQqP4xkVTiobFR/AcrTYQDQx9kilFZiYzJvUTtZC/UXwcu4bRiTmSyiYz1u6ysUgFkVO3eWRnHzKp/BBvEwbV9gjksH1dTmuv+b/TAVuzoTZseL04Etu1GLulIcNypVnw2wHD3feXfV2Yyy9y7giSbZ2NU7d9VKWqfeKnwAsGBrQyXZJqN4KOhVoYfgPxKxdzHI9PvEdySTC7FMI7qc3wMn/O59zo8OSSsurrsktkwKx4Wxx7UBZp/1E4zVAIoOeagiUbRmKAIl/F7O8KPsEokJjSRzL5VVbp23SWAZ9RAbG9HijDZSOlAxoCFlq/5rf/wzmS52txnu9E1G+O8Ewly9IVDV6n24zXz+Pg4F8vLXg88G1Q2BKEQlTCr+70QRhrVVU4uFJKPbpDpYztWIjikInlxw79NqJah8GAr9qoiiO9JkKKAkQBdHDCtOmXkRqqdAuT34+om6buBPlOsSLIZpWjbfeMSoSFiskQx2xLvV0sz2Grlpb9SD1LYrbLbAZnE3Djyujt6L4HaiYCeaYGEIZFJyv2wer9C0AYZo4pubEYGnls5/2EqRgvo08E1i1E0+w8UWw1brRUQ1G4BfJywphJj9w/RECFUVKtdXYEu1sOqyn9jQggJoy93NPZCQth4apSEKBvQEX5YMBRe1ei1utx7sgtNhTQ7z5AJS0hNTwIRtHKEC1MZ/fyrjmASFlliQZ2PwOCIhmnnWbTRTCQm85ZZf1w2ftX8ydTtW99I79v1h93zovFHM8+VKDDt15jptcO44rPYYU4qsYJHxS0np11oFYEPg+/T9FWP8E2+tXahlveCagArgzZeWq0r8yWlKVAIHJocuD/umWr1AHBV+abrvhUbHPQeEdie/33HI9SDxv9As24+naaJMKyR6n+fYPTcIXz0cszkvCihf5bIR7Y74O804uw7mt2Sxs98aYdWQB4ECxIqG9i0/+rcaND67JpVywww9qP0czvd4Pa10xSWAdh5For2MNpaYp1S3Qjsq0m4e71wNSNxUNMUFzMytDt+dcfRB+jtznyaktuJaExLEq5XOO0iigJlCZtNvga0m12Zi5+RTEkvfHkc5Bhc11p4AHHK7K7FMRCOMVNErFk5j8GE2XP8ZQNswHX1CcxcbgSUTX6ppyB4/NYFit9wD9j/eIIfSGNZWXeAwdGhXXgHPgudMb+N6wFakASaCZ3UXKd7U54ruEmJVivVbHzqS4J61xyaJY8oDdUAMeWlUz4QzISM3Kz4uRNPl/zAEiQ/IgYhx3qVCV7nIx2q8IraVQ7770tKu34+erZ9SgENU8xMW1MYdU0/yQe+CE/WbKjBFJX1Q8O1aqmLop7v/rhKtJ7014h87+E7jjDM0G4uR2CyRSF62zDySfhwhlNAOvHW5ThQ8YZ758yoWfa+ptAGJ7s0TDk3Z+QJ/Ld86/z9m6YglaT5umkBu7LdQI61LmEe67j1mvd7UkNHoey52MReugbZIUcpb8Qd0wLJ1ZzImOaIGHFJNSWAH2bTr3+zgE+EytkE5cztuxDtv0bPP4mlNkmqSeaJBIYDbAO5KY4uU8NoZ6TevFJsGVff0FbkI2sJVlbsKCo7dYQOljsj/jykoIDopV/4Y7G33RXAOBxi8HgQw/atRtveex6AavEWuQlyjZy1pzyd0JunDIfDCY6jcd2LoyzJOJAJ2Iy2+P3YXqvcl5fH+eUqDm75Qiy9NOfE4+apmQOhv7q73f3BEXiCflGAQcWoThFWVrvucJpp8nzwVyglEVDDQPRpeGfVj3ulB07OUD1bHITrVhka6Du21ka56q1IJcoZcalR+Gm+Na9Q3kPSb7toMNwp3voiNUpntXLGXhVC7jm4RCfmFGJPGnWdSuSVPWHi+0IhjzD6EYp1xrbEUlTsQF2utZysOMlFyzgNBH9UMQW6RnIowsQtuwecM+aoWcTNmJYDaB/Oo7C53fEbcla2UUqCjyKTFDIPV5lLKX7H9n7fvlJ54x/aSzmYp4J30oVEa+bv46F+BXGN3UGmH39bVYMKoarTP6Iga43lyA+hdUxkG7pc4rYKVV7EGbQ2gy7BUvcDZQ+UweSjuGF0wDNhl8XN8jYIsxca02drff5xPKtnxXksp+gTU+nu8wUC5QPVhg7JorEwO2Mr3hMBDr1/ryoywBJkkawboANCSiC78lrYOnTvDFtsO6PV1XHdou3qTpVVzc7SahaeQJGJe9LYtgDXm//ob/N9xG0qdOHoN0Ti95wX55G+wIWMf+Hr0IbgRjQ53LVZISCc6eMb9Tidd/AqUpo1FPOBtB8UqiAuOfs4fgh38h9VawTvotq7G7KGMRVI3PIdFUf6Is+mydT8rL+ExbB2ilvAxw/hQN/xH4uhf+Yp2gJLbf20M11ZRC+gRXnLZNQ22QhnLkIg86QXStxxJAvCaDY9na28G2RWtQaUDsnWBoUCIPFqVu7SLMGZbW6O75yMwLmZPvuD6Ro5NE1JKOHAjX0NXffithLT4rCcJTYC1eyiZdOYoVF8yhxJLlYDunDmTIPt+4ktwl+4KT2BSSDhNLYls6pZDgFx4MmRjvMyleyLOxgFhDxRtdIZUJMNupSCQrojFIQYsFEEF0Nmu8TGrfzTAKCcss/PddRmRtmVNoxh9Vp2/u7fSQM6dRoWVwtdMn4f1bHic409QOWL54iduI7AceNtcLYInAA4Bex3HjCYclye8KyVdlkwXVks+0ItTzPR7+9dOtGmz+2QkSbW/IoN+1PmGVqowDvZVLdOw6RpKZsPqjqqxyLRKGUY0qpXJoM0sE8FWSR/AF7ap3uj3VL+FgWTcv2DU3VY/sSUDeZDWSJhXLs78B6GLP+OG1SeHTnUiRo52boiGB5hyxpxmMJvl+PXLapVr2UzW6g1EOp6jUTFzTVGVy9VpRLnBde3Cl22wl1BGIrCNL1iBYvPWQnbfx23EPgnpVNFKiscXlBkukbPcBwzVKdEsUCa6tYq6iIgtM6N5w/E7HBI0kVhUjSla26Oe2DyxhjRO4DyeoaBrNzIAEH8qM8q5TEAJqlbgm5RtDvmCdrYa4vlkimG5iflGLBDU96KrQUDGdVdk1Yyrxp5VWXQcjIrGxRxp2iLjK0M4E/JeRrxk2cVqYDqtU371Q62aWcYq/Mbm65u9NVZU7X65V9PDyNe8/9Q/pXOkUhMRarkrvkf96o+v2wLjfRFBj+6CJp/gk3qi+sXUtgd5uuPXJGNgd4zn7y2m6oio8n1w8n6k6/e360KDRR0aLJz/zG+CNi6JJRjLQFHGf5gZMOnrdkKErb7Vssvn/ShZbcArf2BApIkJbRwF9bYe8NBP4ATNzvnN63AVCP5cyXFrCjFJWW6lZvKWf0JhQNNakZl4qFwDBAOSK0kP27J0YNim0zMi+N4yi0dUd/PFt9NvOtpuQ/5dqc8zugQ4xmHaK84fr7Pz951l/KogVVlp8CUrOsbLqp+s6TdIxCq/Fu8J6xhGyPMYL8V+U2Yy8oybvZoXOxoJ8fPVKaxDjfPKMAZQv0V00F0DasBzCSGEIlxt4vRo5GNG91QtbREWF6fxHOH9hZ28d3Xa3Vl6FUKwUBrsCI698oPoutOT1tDb7rlfyoy6HzVVd5TnKTvgz95v9Qd6Ho2XwpR7+anMI5o6uLgsRUtPDMP/heQr2wxaEBbP2wpyZUfUkcAjDNCkRQwE5TdNM3gLgdMNq07xqmW+n7wgxazbOKO8maGkRMA4/iZZivevQOwUs4HFadMZIzr5Ud41Aj1Pr+Jwinddoo7N4Pl3tsvCKvRh6m95+zzKzn3aL5AQ0qzcRLqDbdoqAf7NlX9b+Cb4a2Sr1vdOtIYq9jDkSqme9HE7WDsQcgOzqTuquWXU7me0xLIFXwrwhqTT24SCOSJ1uaxtgx+Bj38TYO4EmdQ/rAiYN3W86g9+9ckXDgXl3SgBzjdmWNnFwK/JF5U9e4KDV0WJQFD86gE0NEEW6xDR8nqRGtkx/ipFNq1aB0QgqnSn5W2en3dDcMS6ny+gWUHHhHTzYcJ//TX7X45IwwIFKIh7okO/uDJgXDWVR+0mpvGcWxXbte1mVKuHvKI2T52Vsl/4yLd590Mix0wqIOEaQlH02DhycS32fGjEXzECXiQocLuij0D1j55SiHqypHc/0z/XSdUh5/JL3L2CtuzqK3ZzVxF7Ltyua2nKoKQOOS/O02Ym/tMOIg/yUHYNxKoJOLO1iJLVH4zcmEl5fLGUeLnKmv8zjHBN7FLFDpByOe0zigE+LDK3Em5lgHATbdEvBmu1K51WVpwJop4IUMfg5IAww+C9zPVt7MSOt8Bi32FkZzvr/6FFKSg6f/9u9PzOsWROE3eBLKw+d8hz1bJRAkwtBvm3y9+jFfJztCKcNdEdW+utWRHDaPTEdgKOfNKUoMx5LhV+WatEcKKXqGP8IvimCwBi8paj+LBe1SDGGCNtC5BA71x3S/HywJ26I2KHeHjNXCjrPw2xt+NVl13meubyYu0PlERcNndFMDV69Z6oHnGF3mk2wOtrSlxYiJQvZbZjHx0645CVAG0YDPtaTaWPkzDdaTV3uyEYT28es9QhoeMxjmvM/naEGRjaCsImmNHNLuCM60AF5Cb/fTXS9kLTKwa/p7LNnR/lVAssSNcJQ/Aj317x3mll1BNv/hcX/AIPE9E5HUEPnBI7TBxFPyL9j/ynH4eJFamIfekBcGZEZOjEFZpoN071hhzY19NjAMHJNJ5UTHB3pIumieakSwPeRkAxi+3AVVipuHVw2aELX38HaNQPpilfqTC80DukH4IhwOG2j6qUXjKyFepml2+DC0X8cfXMSWOmhNypAC5o5SpgID14bE3Oaw6k107WyX8VCYZ7EmXd1kQdHyGQL66ZMYnywe60JrtKoz8G2cammioDzM0oD9vgNQkVlJCYgVd0Rg6BMWU356a2KjwyVbMwdjxzVVrMs1o/4lE/qnwn7gmP2n5te7/ISC3eurNvzzvx7Nxu8XrZ/0Cog4ZgvMFxiLd/mGSue+591NKejpbiuUsbOd6/D9ymUb5NOi4Po7QqKPkaGM+iCAB82IeP1Cty4UFFJ2TGd36re+DW/WjfLcADIrjSFUMVXftPOMwEdbpxphC0scRCZ0liz9fBffrUpB0nfLRT7+RR7OrStnOeD2lf3Ul5vUDRQgqBGxP3l+5qhpf0ey+mCr3JjfCs/HoaZvm2b2AktEQoUlKp3hcsHxPzBZDr46pE7AwTxKGC0x0yZNzipL61A3TrsmutOoE83ghE+eod/xYiI5px2+CuIccC/zKUI3RmcWOTq9UxktutpoebNyO7y4E/qaKTQP1bOlv2JnXVL1K4AlSae08aMNdjAFurFeGAWpQFauFWuc42RittoSkOpAzoN0jVvfL6gS9hgU5oRRhDbwVd1p2Jy5UksqpoxaNGypEg2dWhBGEBGtXPgJEuC1FQkN+Mi1Q8U3jakVkWHiFvYFmA1m8BaTSe5V/mzgL2Ip3buuREXyHSDjiWn+ZkX/6uLe6wudUMdx4fsAGysuYEiIy6gzKhDZuQbG1PVLXXup1kc1Zqv5P4al5UuIj3Yfl3eP7WK75V073c+/z9IUoMAtv1A+G68J5fV+u/BwFk4zcg9AyyUec9Qf+QZhcFgVDYF7CUiqx0F3w0DFvf5ZG5LEcW0LSfKeZ8fu8ld7S4j2fzZ4SXPnt2ctKQUlwlRRQfYPdIp0qKCr+7CRfumd2oMHdThR9uDBv1PqDUEYWBcY1z9FzFyKsDV16JkgjMsKCyvA916MJvwHFK9aoSOJ5Qbbzsgt28ZzqWEQYHwnknb7upFLfjqMeTvxPdeigZcSmlPtXJMaDT8eYtQEHYunym1EUSgk8c9ijSJSCNX/lxiS7lIbhRZ+YsCPndL/K2G+UOTYh9D9hMepH6O8uqX7hKMbiGEkua5GQ9bBCkrISYzQjviCMy1BvpQpTtdszxLD5RxBkPsmRuBhYoAcq2dJldgj9zSgBcUpgZ6dgXi1uFAI5Wd2qkzo28/peuXXxng6sUkggwDi4YjIU3Ay8Y4E4BlOmbZE2bZy4FINV1cUw4x0iKF1ppolNqqrufcwpZbgkm5rVXeDyD+Ei/dyspd3mODTo2aHXHp4NuBDmd8r6J3Ri9mAvaf1iRnFEfFXb28eRlH8se9civA3tMPnFLti23zC+CTbgUkawHx4IXcBX3cOm1pDCM490pKJkC1TI/LvKWZ/PaCKnx8BxCmlzfrWmyS6vULQ3wmINqANzzLDqyMMoECpCz/u11DTpZsZw9M1CjH6l6ycIMUegNAT76cfzRrCCjqgXd/2EvO6y5OH73sDmnys5EdhSc3bYhywESUF4B2ij54sucaLc25Ivp44RtdGdq38m84+VoLx5XfXLr9QUHc8LpCqCqBg6EtISfSWjxk/YEsPtyipt0i4OwZocmVJ/yGa48uoNWKxbmlPyp/cKheUa0izZCA4uBxXdq8cYC2zB7dY+97rmaP1VNyl8xCnDBYF2dcfTgLQ1OX1fmzl4AwvBatDWu82Ul5fus22vPKeOTHpr2/FxDMzVXaZA4g0Kkq+Ll1Jbw0cQFC9C2udzWKHwO05cwI8apP3+qlNXJMoXHnApzVsaOm6koUDqohtO+l0QAQTQZE0FZ1o0+71qoS3P05nhBSzvBwRJsfdOxz/TwcsM9aX/eFb3gAUx4QMMocmGGYG2XD0z338YWw/aoZcUXppGRy3DDVNykA0D93T+bSszzv6NDx3cMaFF2jsXmxeV/hVA2oRilcNeA312CtJmK8V+QylevFL/k3XWeLyQLuMaKhky/hmcwi0HX0gcbZX0NEQqABvrrMDx+Yr0I5uZ9cvQ4zhoMkQPkGivbHD0qraUMbrr2DHIa6jknJW+0lDPwC9VqUJliQDRJzsYyfVMjLQ/ZeYZeI5yaeB+jGGToCDSOd2B5Tn44HIhuI9igA7+qPChvLgNDZ6aoshgvngDr26tWaIdpBrxDX0BcutyjTINteuoyZA6hb4EBxalsHPSKYCeQAGkkTwEFRr2HJCdCr70BiIsJxL38kc+hFfe30HVY7qV1M8I/YqHlkTjcbNUetHMO7E+Z/+4T1BwvGlZPC7s54vdLUHwu7eZnGmYKTWFUfKiZlZyh1cpduk1rx8ZsdR106JCfdpf4Fd7n33kaG++Q4on1q+5skqXVWirYDXmNt1nShiQb0b2VrHTuRWO6sE7oa8f1OYez9ljULK4wKo1HjwFoaDX2rSfVQotcay9kWjdBUL0G7WxNbSkC5OSNkJBYQkS/VddAPIJ9YJBOVvKnuGCJtmK/skYRMjf8CzXY3m3r5WlD993Q8p+mZCj88fkY12VzQW2D1BhMqIvLRD3vD2nYyJA/diNQyjGp6+qr1kWTgBMCKR9OtGA5tLDATaBCk7YYBOmg2rqroKZKDsrmsnNxgHoyK1o7mvDZNR9K/X1fM8UTTOQesokmcBpF4hfnk/iI6VMx8vgEEfY+ZwgBv+xFfDwJP3YsMr6YaTRn5umgwsug19H0VEV/tDu5c89cnSQN03iiLPZiF6p+lZNnkOmmmKdKXyZ0YcnH6PSJ8PG6kusnjxGNDEZSMGO78AmKCxwhw+0YN3MoWuxurH2DnwDnGXo4zgnwN07ubWuKEhMh+YycIbsI+xFSoG/Cah27zVTLs4PI/2DKLdW1KEMwTFf7cunaPvmYKXPBpmr0U6UUL5SWcK4ZbP5x5AyQL3tcjer84YXlgP9E2XSBZX7r9XOlFCDSfo6QpEAR6hEJxqS4k05E1YdA4PZcXgtAF8b0/Z1KD/AQnkdBMNFAzi8LV1E0x125FLsbXTZ8y85acBx67ehCA898kCfO69JFSQaUWqtjKUyWCkUzChATEzLVQG5BnVqdVhzXo2eNuW8VlZa2QKlElLN4A4B7cltRlzxwBUtYf79D6xXODD7BUpZuEfac8PUv+qFupcR/kyQ6ku4gbnlfXTBjDANLUriNoFA4E9/AGFasO36SX2oJlwN/B+TGTDw+CsH2AVC+mFcK79BzdyaEuKOI5c3b3NPc0ed4T1BFW/AmbKNk010BrJmgYD/908oQoPFNoVPYBb6VPKwW4MAJIjYgN3hzkcfYF3+ejXoK5G4+4lZ2dcmaaxRf2Xx7k8iFGO0cHxiMYAU8vXRqLp9KdWHWvO1TqSavVQXj8jKqsa0Ta5d9o8pMZ62X5t4hRiJ65sMSG6I/TJ4H39lNA9DXsdwdSj5EL3iy/n3AU+gC05sL3sOTMs8RXcG9gMnekuUlwO2L2p2FHAxQkeF7WvNLWSPLsgibhKNlskpK1DJcIFqMyGCd8jU8aQy3kzzQHY40Ylu3Kafk0xTbmJNxUOzFwJhQpUqWmU+yyNSL7D1vEDYgGL13txK6+cstDKFa+keAM9IPKUJtrnPZsFazpbIE8Ll8W9UAvc5Teo1YkJtMzCBungWFuTxYvx6zF8GOPiogXk/9WnU1CdTxDnEFbjtEeRnA56/+onmeYu/9r2LmqEqrWbSkx90LRS58CHoFRheM75R6S8NXF2oGybN1KA3Xz79Tu0CRg0JvbKEDGPgsYF5wy/6lcSi53A0CtvS2VHcw9O9qLNIyTm6ZSgS6M1XFBIxBxzJohefkLQOVzPSV6t7iGnf0denEYJzt8BR0iPMXdh1K5iXhlBv773Y2kSrsQuTYZPI3ZLyJWtmS2a6l9RkvXMr0bHfPUf1fOpElLh2MwginQV/h8a4Yc6KtUHR2DTXej6SKfiNOilGWqD/rxeg1TTlGHm2QUn5PoY0I2ZtHDQ5Mnta3Ab8+D5uBfMxo9n0jV+Z0AhS4GupqTUlcm/TArB+5n4SY78TsmerqTTbQ1E3WJI0giKHKKvfuOW/tqA26PWn8xcg4GIHa4oDUuKSDwJiOlZEYteObQ237uoG0b+Urv7HO70FHyts3ra2pLTby78IEGvo2fO3WX1jbfChM2McjscEzpCfgxqe6W1N9qN59mRrRSsvP21pEzwgGPb3eOVEaBqfQs2idKgm9PszyxaHtpltzeu1N0Hb7p1+3ikvdZ07SG+zQYNolrpSKhGS0iWCSpbmuvhjud9pvB+bdqsaN1DQyPRSlYxZKPBQGt2vWZ7fqhxrtsw2y2hR08xLHEAsa0liXiT8AWeUevqq+lQTaErmitd0Frj3pMTfZjfOMaDZxgNr1Y+VxAHloTafi94C26IDq17B6N3zNu0CNMd2Kx23ekpM1luq9lm0Q0cmmrlmNlAlqMLj4vkArK+PYXVridbWDbL1NTZYFDLxnv0vK79L2OV6sPgFtVbcyO4N+S3LT3Pyw4q5e8BZw7ldrNscN/aMJ/aR/MekzgyQc9RgJ163sxJ7c3jFFuGFhtVpsWB3sY7yfdKXil6RFyb0vrxpxp8eK0d3eCHZPTKtEwr5wvTCVs+4tFzL/NJmvcTM3UHKI+dQO1g4AEeFASVrDT2V3bQrDUACra3O9o1jsBuW9pAQG3YsUsNQOqxTpeAL/Lr1SsflxNmk8jSz8RjMlz1W3CYGoMzQp+tHsy0e8cGUh4TuhSKjhdHppgSEuCU3l0CS8bPhqjZ3+DDJWrWL+rMz1OxVTPfa/agFXY82nSLyuZMngryOuCRtWfO6Anla3rqqDdfbazj8hyIHvoB9xjdSxSnSLHjgfNcOkjoj+9ymeZQ05ZciCxNyolwC+0/Ck5OcmaD2UXSWob19z5B7PteqcBw568HkI1WAwfe+3hQX0X4H0UmhGX1uGtxIwk7vEnb2U1c4yd1wjwDVkMSP9CanCOo4/2Q0uwE9z/eKw/uhUOtEBUxSURhs7cINN+KZccaF7uQ1lAIy66yx4cH26KQinJNGR9s+9zk4B+2FuShzzlGUCTggQZcBQHebW38PWTfKWtMUSQbqvBR5EGn5VrZRd+SYQRuP3h200B7oEqGMQ9sZ71vgDMPd2+c8G2N+qyHComU28kxl5XTYSiNnxCxLuN+igLDXfB6UNu0WQe3H8DaE8+Opw4c3DcgAQXxBHKSr0Jpf/SalrfyzAo75IHqBM62/44Z6MdNJXGdi0FLDfAyoUoEpE7J/Z1c9IAYclTB4q6KnliGD8LwDUQ3kRSSjcMhN0yM2HXR2XU7zlrI31T+sI/XPhFK/tuMVvGi00916e9NrFXo5viHK30Kh9sMssJmmV0IANcWBS9Mnqj2/PMRvO+vxnwPVRLz4T5Am0NBCfFtX43PGrZzk/j5KgltdfuwgngOkdPEparXTWVz2HJdqCMdeq9nBFjYQX4If0qhC+nsFs/ExQh917wLOlT7cYQXtNvH19JN26qpH351Zvl+olxRqGMvgbEJXqPz0/SHm1YIBnrAmXPYgrecpLRhQ2WyXGMPIC6cEG2w5drKFgwErkEhyXtQwAy12+eLGxAAWfEYFZeZ5W4v32bUWKJ0MTJ1Kd9zeG4F9zMyWIgfA/7mWp1Iq63aw/6RA4awFHFBhF90maanGazwYr6TpMwZOwHbWgi+uzVb7RBoJL6ZPw48t7yAjfR5jFO/xjZLYHPguIU3F2Bic3AxakCT3gUajxpNKxfOpIsL0v/qZIq8QHjeYb8qRu8pvbaUZeANpSkcKAIJRyX4RfFzwxfoIDQjUokb/K4Tc7zpwp0rEYstfubiWugh3weIleuEhXasza9TYBWzrsIYQqm0UwxavyVu77ilEkSWaLmrXCYlNWJ0jTBf8pjqWxeIUxFCZgqfsCm0hbSJ5tV+bft1SSQc+/+DIKA/W0LJemCAX1grmocSKJ+BfOSJbXy/hVarq8xtz7ehNly0NQg9R+HExbjx79iXpoLAME6tNEhQC7uLw/geHMGjrDD2uS+mMz+fx+SE1d6cM+pm363tLMCRsNlNkJ7gxqi5puSq0OZ9OrbjcgQDWwSKFMv5c2dJiI4ZOpKdSqxZ06LIPb7dN19R8MmJwNll3JmntKqkNJK1IPniytjpglKjL7cCJmUz411o3W768N/KuQ8Pt26SkBRyRZWVSfQ3iQWNqAyM3ACNDpUk5vy02QzaYi3rYDjKdZ9vnzjpx2ToBz9CwKPbT+iBcOjZUJ+meLXUgWy26jAukaOr6KgvYsK2nUbjOneYsX+Q0HnmlMlPHKaxEYxmy6SwNAnSvJXfEeWMZrI7+U2S7hWrkKYBt9KHiikgHsFfBvUs43VLdrVFU4b+s5IvV0siNNBCX5wJqLEnZnzWxpOSVO6GrTgFPI83E94p/8+i8MhES0WccV4xxBkTohHA9uw6rNRyYqxB8xR5YeQ5Guqa++8BS1RxRwCcCAS7ZvkUUt9zo9Fi8BPeZyxLl/EK80E9jsLjC5u3vZZbGe4TYtQ4fzdK6Iixg7PHdT5jDs0TvULyGrVuCCZMgk2eOcDjbKLAgWkcrH9+lbMesf9emiVbvtUdiSc2yF1Eyuwx4yMY+PoNrK18Z04vYZKu86x6ZyIHjPKHvRDG7pNMKWbY3hdICR14FhfHqAokwOPLwSqWPWgu13oFUV83lYJqwHQbkx0PeosxwmfOAGkYKDdqQsBhZGN/furQtfRyCsF0j3KxFHxP80nQ5CBvv1gwz+yBYFil2UrgVzOjoywSNw1dPeg1yk4XUupgKCuv8frlQ8uvi17PYgYk8BAMcf2laznPh6iL5B6I3aNQU6r4S2iwZVV8Ifq4+4QxdYpgl0wk5zOqIwvPr7CetTwC/x9qVilHRC7V8Iai1XSC0GdXVB96fd4dftg3nLTn3cn7bcmuUktozUzX1y/vl+WLY02Fn6+F/vgwQQz3zmHfVoB8rS4Rq45R9hbzcTOebJmE9F5eJ765c9ZtuYdonkZu4+acU7jvot9JKO4X+nkK6QiWAGUoIWG09QgIFxyv1nWCEbIxkKx/aWhubTQjpJl2852ruRfZHq3fFCDFB+cTv1FMt0Eljb7RsAelKhjuHGT0m8Hq3+/eY/Ly95aODhN5ppS/TwuY/iEoOr1uW32DykvVGvDo46BVquS6rjf4u5C0BhVZ4qUz6W4g7XNHylWg62YZCH+X6667ylhrMty8Ckb47x3lX7qHw0ibRB9/E1f+7R4JfDhR87z5ZBRx3waZx7PSuvovgMP9Os+WWGUxIzTfv/igVZcIVS7L2bM/K4sz1cteBAxKaR291Sum7cNzeAvk3cTyfiYmwwJmB+feIhzOyo8Fo/gBFaDHGD9trAp+1tzjIm9q+A6wGA6n21yZrGquuqkptLtwP7Fgt5B3h5Icua+bFTf6hvRyIjjOeC09WCB4kv73X6czwyFAidDJLc1OClewaxwXvEK2sxu2yrM5Bw1vbPGsdrWHnxT4TSwIGfANE5fQ5Xqfy+BEjtlEyUg/0bkmf6lJvMWcbnnDfcn+pgMhab35VqkkJK8fnPGjA63u5dOXF0AV3wLCgB98PFVB4HhOEDTr7lDiGn7rgcyY9pjrmHK4FyeiVt/20D/v8TyfcAcOP8r01MtPc7x1zFdET2oYWK9T0jSQBD+nQVf+HNFtRV4u84vc9Wc2aJD8p6S6VEGwWEFpQwMJZsS8WGGzTsZp/ncGESnzi/HCDjPKeYwlHypKr1W++lj9Gp7Cr1XZrwlYw9rn4xlw3lUBwkt8fIt4aBWlJcWMEgKBxmEY+mFttmFNQmJ3Li1hKK6I6c/FOSLayMO+DjM7zgnopGWbANoJwZWAA37zahf/kVJvvbJ27P7jjxF5Zy16Od+tXL3/Qm2wwSS0wzUFJJweLwEh++hsaLG3qmXLDaBkdUHTwDVExf6Oh+hAhiwYkvL4wnkLFMIX320lcavetXrldX1wD40Ii/ApdcWDlbjwzT/8F4oo625BR0qyKf4VrGR08T7MyXyrKJYc+X1btlIyEO1wxMQgopmBzv8ySQb35M2FgbhmP6IavbMDfo9NxuGLoRq4dcxrHej6NI0QjafmTRH6NLFF8gZFccnRwlNOorJdf9r/HXDEvSAjTtcemHastDYjmbF9NRrUYesvuw3yrQ19MpA2k41CjfG6KjtLxnHUihtmcuzhWyQKPW9CPY4Wv0A6FP3yrsQJJrNcTgQ8FQnak1KaZQuhQNr8Y15DUk53/492N4KVlb6q4xo4WXsJgIuNrNgbtakM6qHGfyLt4EEmSJLPubnndBmucXCIZNcae7TdRxVMatduwlKLKMPnaH4o0+bUhYqVjVcRbFr75IcyKeHUGvEgdnpBidS2heI2S1kfodcXOVt5FQSV3dMu/AfiyTgaICUcEDXQ5zVk9an3Jsf3PQOVwQf6Ywpi6eT9ehJIJLp2Q1ZxbfgAy2mwYSaCEg2EQhnyexc69tzzIDNB3uxWk2g+wOwA6mmGJVxInMkBk4oh20wz+P/CyU9P6hl4sYrTy9uSyObzA90YRgqWonzRoCFjoygRNOYzJTIsDisjLBUp1hU3XjNytOiZOsKwMZgVzNlMr2URn5jI+6xKe/QuoQUnvkWaFfKyylj3ZHg+GER46hRdhrvfWjT/oRUV5EwPPr/Gh5PIpfw+aliy4c3GnSpFta45DSol0yWi1pO3vPJ9tJ+LmtC3EalwenpUXJ7fq+R5dLELyOA8Zv4psxsB5eCHHOC7rIpYzMYcmNeEGgilP5aOzmolACNluJkNebFPQJy26Oc3DHDiIwmmLvD810ggXNTaMedJqaO8U/I69r/tjC/OESShNwfnKVeHl9PM5mJwmLilowuLZ9mRdfwJvsXNOVgHQlsa4lCOjeFmr5SQnczk3nWbD8Rqt0AR+juN9AuggFNyOwLct6ZkAgkUhgVSbp2wLnw5HfJIKnqHbPFco5F1PSidIQun2H+6jzgSkWXKIwPbq62erfdf6E/V//SNuS+9VnHRuqyImeGmyXlFNomOmRflc5+GT4vo9Ynivagwy6Wtt1b0JdhuzegbfztKPTKDCLQ8sTMV5WEm9RQ67ACNAZJPa68XGVNZ26m2CmoA41mryf4jg6K1rrb+936//sH2V27ryblXTfdHjtcIfT+fbZluFBmrvywwsfQhOrW7etmKQ1WVxPAD5+LvyIeadrxqHyJO+sltE2Atn0p9koeUzQdG/0jsFQyzTXpzKVxbUjbiHPhmx4pj5EArKnG7rl/0UBEOOUlvV4SCRAYlpaoCexEveKR+Iwk3SDOCNm/e9bfqACeY02Ve8Fx9bQOdBL587VEP3SQQlM3/e1GymBNuQubkw2MPE/3Ni5LeMgv7JpWQrkSgbNVPDCzVO7lSjjUtK6XET4tGtQ14nj1iscP9nVXSMMoJB6USQGAjSqsinrTto5gF+iT0Sv3bTeoLqRuxulYlO4pB2/F0vMHkLPEjIM96zVPiPS1TvSc4pjJl6AlI4auBRyj1PTSaVIkfmZxHw1arhB2SCqzEGou9AU3TDJkVev0yhGAboNvlxjofYMSk1DUl2nIk6qNNHMH83A973utkrecY6UybGEmYy/MT8DCTFfgKmxPtP7MHYLP1wonXoon6lzaHu590d/TCbE3yRKcTFSaQMjiazam2VPzmgUSidA9MddymnPyvYdZVz6qnrXZ116dJ9vLfCsRiR1OAU6rtkR3CHeBYd9taZhuYjr8nODDZippmbGpMs2HnzWYngeQMu9fpzbZ/I+6LT+4QZ5yOkRox9a3O7+K47fzaDUlQk6fwFhpYDfg7DO8ySM1QcYjkJK+5pwYrHtnULE0zUn5ycNW17iHND18d4ZHcmKu51Bpm3ElSojJ68z3WEolPA58PkD0Y4nGrErdq9Fhq9tjWyuF6Mjvl5Qq/r7oqvzSJHmQ/KvA9/IpWoVmRv4sjgrtKGw4c5tCxvzaqXp12Wu/Rz5cKeyIr0A8cJPuNAyD5EhkZrlrkZc9QbltJBvGTmqYEtlh2HX0oJH1BmdRliZ/0DoH1ncUhl44WQZuGGMxpaHd+JACXq8+2rrWhfjD77zDhIywn7mW1zlRojQlxpOr6XtenTz8OUjhFV+Fx4TWsut93k/ckNDCAE2zweO9r5+qxwW6RY2RygXqgZASAGd7QO1J1hZTFSqqwZAsWEMoLTttd7BpyQ9dd0ETqtt0VGS71PD4tqz+aqBTxLrxcStz8TmYaB4OUKPbB60ucqcDFOFLEFdXQ4HNVOLNIAFOYEK31mqqOjcixYO9rwttk3mARmF0bBSnOvUQD8ndQTva7fvbiK/HLOKF4Q+WhsiSojSlKHdEr+hwHtBPIT7js3n/wSDVFhztInfypbeGWNduZZE3mgYbHksPLyHsLhoH/gQ0aJROvD20/c+jgTOJDMtwaua1XfKEG5Y4eIXmFXSFcZiQYot0i0d6l/Bre1Bn9oOxsO4uSaS/FEMLdApk/KDAVVZFQdUsbMgXcZNyfveH/ppaUJnC7R8dHdJj+RqX5RT46YZngRGFEZer531BDeoRTQI4neNLi4Qc9GUtPFtrYlOYdM8n/RFceRsPJFUHd9VRKwSjjjSFivIlYdW4X7CMgRoafcSOTwrHm5kNtF5Pl3Lk5+a8GFdNELr98Fv5XG3tOJ/8mAAWERaEkyY4Mlo/zSoTokF/OM0WLrzjz6xpRislfgXVMPewdi811rhW1kh8x9fjnX74eXU3R4lyDdghH/cKihE6RdXASWFUnbd14F/mazYCu218cOD2Pei5WdM/mpELPfok7qDA7vR0gtJIoBYxFYLCmvQWfm23MGkAGHfnpQra0MRCpVGU0n+nNY1qm12M3VC7gHhL8wOWBsieqidekJP1y6jgyHhJzleDhrhRPjTS086kKn0K6n0xQen/ODFFiYpGdrQKE9tAsGvBtx4tr2KPvGbkZgZb4NXC08yNVHWHxHR1ToX7GUCo0Z/1eWxJNUaPv5aQc2TvM+hHtETUnrBCCxjsIyfpDEfWG9NtyEtgZeZP+FASVBVyfkpM+Nr35cqkfIeVZKu2SMxxQm8JQy5lgDSD8uNDQbKxT28JENfxDw6Zt4dnJ3/3wzKUTw1RdgaKyTuO5YZo/CuIeTBRmVXpl+NOBvVxBhSK5HmUe8X3jVfDuCGSHMOk3RDj2U7t4iCVEfxaWPIjGc1Y4axnlktdwLDygv19R5PDDfQ8lUxwTrUt6GgzAArMFG4kI/xPbn40ASd9n54e1sRCWytzvUWn0zTw4d8ohb5EpgjYYv3qZhmJ/wz4QRXlyjWQ6z46LYlIms3e+AlAb0OnwqeNMwh7W23buRlkNHnqnO82VZH8JynQX8xI2jwskV1DP+C4J4YinZj7F6p7ZNrmT0E8SjVIA0+AOnyLClzYdKg9bnHJNMM1aFLpKA1h/odaCebIeL8TWeXa7rLA7M4pXkzjw47i2jb1PvG40X5ubZu69Pv80kGbLNDY2cdglpmf+URpk+NUDFE7w/jU72BohKIjkmrP4Aq5jC1q31sI0mp8AKp+c5yFyVZWwuGO4+v+0fYkhc0rMUdTLiWN85w0joI9v5xiNf4NhVDEhY8uWx0SVpb91jl51KHZqiIJs3S/rXHBLIFkXzo6aykvBq8cOT7MgFX2I3dtBhxUaX1Ax/qeMFicYtma4GD289hIpIAtjNdfJDJRKzwvM1+YBn1D00Dvx/GGzxOs6amO2Xqcu5qxYHGEIQzkv26JfJ3eCJwi26Piw1ruAX4tRTh3VjIuER8W52q53yZcN3Ut99u6t3kNlqA/QGTV9jYJsrQ3hbblWwZSEnlduszha6JgYDRyhkmPWAVq0kaSrnb4kkICHchtkXqOB4k1MWoF+jL5LuFez57hG30Rwx6OJj66jN/z4BSDLctXqVmvFL7mUvzptshNU0n0IV6cB8ibzFisuCk76mfIfaarfJUYxl50pgFa5NAC8DeT8chIS+sjDZin2vrchysmT/UN/tfcieZtGhFGTQUyBcDJpLOn/YqxdohR8KdeKU+n42EqDSSLECr5pi0fZQlSwa9hI+fvP3jBUtZGogld1qRoDT3xqEhXn4OGgd0KKwoQeEgUcWzc4LDtU+kV6fx5yx7g3WzCxILkf50M85vPnR9DMXSh8GVwtyVgMY6AS6pO81F2KgZs0IsQKa9RYlpIKsHdB3J16eGNQGddb4Vepu6DOD+oEuVARNUzz8yRsQKkDSwpn4/E14mxSKJnyRjcOCL30W1ErTCMQnPWkcYE0a7RJYk+V8vwWipWJFPMd9McA0dOtLTflitaRfIVGszQRgD+AMBl4HucDgaYn2jie1o4LXc1Z6IKaWMCj9wv6+uuTlRlhTOihpYYYuQhume1v6jSwLiWPzkXttF0jjZ+Mc2GK2PR1C44CcKGBkRWJXZy6QIyF1FHZUOZKUts2KERRBR5b2WwdE/I3Ue+lqfmdPm6VYScnok1wClLpvzGZf2BWfyhbMhBHHRaDgiDmwQdtSgZO+HFpELDVqXvbMMqdvmUPGNhWCEwxF3/j6UtZtg6IA7B1gmI9JTipbOUxTHISCKV2ym5B2I2xlTWWbizEnOenicBCWPqplif47tZISgX3r10R2Q5I/Y20CEvxfMcTXfpJl7Hzt2oFGmbe5w6IjLkhWzP7anxtSKs4P1pifJOscHBFeOTVA7BQxgL5/K2NAovOxFuv4uq0/j3DEV1NA7ULcoYr1cACzTZhYiqVggM9ZLARY/62FYaoLCv0TDvijFE++Pzbk1LReKI5fxfsNrgPOSpLA3yO8TMOP/h8ZmxjeIOnshrIgWypl3Xxpa2FyXqYYzPOcsUnPgXaJU65MrUBsxJu+7ZliQzPAHiR+DYzbSVU/3BbmFby27QX4Cj+2oGmvEehDxBcc2QVV7y2pUdLvvS/o/hUMFVOVlm/7Q1FnC2DUF3GoOpzUkw/UDMx32gShE/+Zym+Q4YXS/KJpt5D4agyMLBxOzE5bWxxxnTjPgbeuV2eTddeeqYU5TdR0ypudeBoXOB4QvVuTu60/D2jik43B3wp1+p0PODVbqZrqpx7RC19oO3W9kK0Ehz+LZ0aLl45pm5Tl6bGiIJy1GtMLWJO07eYQjGDDCaFy1GKY37pi68QSrmppV18ANe7UDdISa4XRgTRab/pJ58OfbwNQIwbtnA5uZqX2BtbVC9dqGALV1Y+xhhYH5jaG5G1AF96NE4aJu14NopxZxfKN7enbvwExQ4thb0aOuItpyOEu/C2zFXMRk4wJjA5EK/bU2Hk+7Z1B3x1MpSnK3/E4AdCgx+elVBHW3u90SVnJJqELwpgK9eepqaEsy8IXMMAdn/hECgdKoiATeysRimQvyM/vHGgaUvJ17ZfKNLY2QjOVZ7dntzIMYRIGqp5J9YhCXGF9qO3Q+NFKoafp2UAelssxWyXq3pN/RbDpoHxbs+YISVBYZFITmxgJM5mftzok2n1s95lVYCPAV25n4DW0OhRhu653HWu43JvmGcqDHyMVgrc0vorLD3TmEfy+xKFeJ0M7mAd5hlnqrGq1MbtLPdGBXCmztEs7dFUWD3zT33/cJRDEoOmCUjO9cG86kdCKZ+SHR3CGpC7ANxR8ZZCyoM/IsDHEd0FJn4sE0SRWb2lgURPE+3RrAw8nV+RUHlcd/5PZDsaLk1PT6pmCOz1vpagBQPz1uhmKwLDekWZLvPUw5b9sm/NFuUWkSLAhKaiMHVpNcqg8zMPKLNB7yUaOcd9l79HjCxBxVP2ZOhJ37/QPSxQ9QUsYEb+lax5N7u1BklBlSTClDkXyucsR8qSJCRyJU02CuA68H2Uq/vh0UpFA8HXwrYFGYdSO/zTxqsHdfakfY5VNB24liPD47R3rpumJxkqNmWORAsTgMrG3lBtm6erTUEB3ZjO+eaxOxqsx4UkNgqwJP13nCkdAtzFlPVUiYadgjbaK5DR7ku2UJ/t6jGvGi0nGKspYi8HluoRohsPXxiDtTWyZAVjVV1uqHhJ5oU1Cs7cwtq5lMi9NLfmkith0yrQ2fdQzflm1X7eC3NqTUiqUN4GTXALOpi0Ozk5OOoOFbHT9uWP6sXXoJV593oO1Ne7bWArpxXY/VbK/+MscmWqnNYr9TnX8wVj1w6VOT5oC7ON/XXmvzsBxS5ZfbjcJ8o0mLQdUGryaZNGNSDtV1pq6JJvav7GbpNd3D+lKkUmFO5E3UBv0m5N97j2NT0eZHOICOe+aZoC7Z23c/lwPEReBY52oLk0Z3OgyiKvhaAPBXXM7g7yvLkKTeqUDmJ1TAeDhk4Abi4u9DdkU13bK4D0IsGZ2G+jXiO1AV/smKclvUqRXbxtVluX0YNYiyAh6hnrG4VKOlxiQ8w8b+27mThM/7cYiYDLFes/VDbe/9AQfyzH1h66P4RZoLfsUGLCa39u1gwB3PsVkjWOj3NJbgD+d3rCXTyOI4Sprl8o5z3cNgH9UCUYjmMyFEUC9YOCMnLZsK8mzX+u/TnTn13Ap7kycakXidoivvs6RDfWkAOh1ewXoasxAvpvGusrId2YbfT3rFNk7lTodqkf/tBYvYwzhbcfsPTtmzB6LphQvVQEoohL6t/lX+iOToO8gSoL4l5QhZud/4YGEv4mHmEZUpSqRfIIi+tnaWFoZ1jrJ8KUJ5z3HPgoZ3SlzqxU5eLIPK4n5rhn/8jEScGbSLC2CeiFq5iu2p1k1GABc+vo74gpTATiTYc+xEwx1umSh0AIuK85JUO2yWTjpPZ1H9cZ0RBqm+8D5VYpkmCNQT75maSCmTXDNrXXvrX816by0TjcbPlEcuCv9FHXI3FcCZfxKjqlg2rYSfO4Z+01+iGO8NVAgrcX3Aw9IEnBJhKvGExhZRlnuhg6TFwpAacupK4juZg8WBGGVYviFMsm5iMKDTlIlo8S7VGEpD6hzKB9Z91FM0zdnKTNX2Ow/MyJA1+FoN0shfH/y5XSil0j9bfhnT9GEt4WXVc68ecZ426hkvbKIJZ+mEcK+6c96ffMIPSs1Z9C/0vBgN7wAh5Xm8TU2GK5HzcFgFU/XSOiNeBYQoRCZx/bOXaAFLEsmECPp5qkHk/iPwTA0DGQfgJu5i3+oDd3x1Ui8KW/GeRcMz5/FE7ZhOQ+2YFYlWD0OMdwugBLR9UH0nlX0n4h36xCx1xtiI8pGamXphdt7BGxiKDU+mvsD0U+/Ggd67O89szDVhUX9K75GpPz24KCmz7nl6Sk9GAmkRj74lHUOCTmb3PmS2BLPx2MiVyXLzHN4s90o3f53wWk5MRf2wLNeXj5NjAWC+FcGuscEhAUEymfwOoUpaozc8XWWbYhFQ4fjOtGJGrNCOLD+7rmsuPbgRn8H2LrNay9FT3WyIDh0mcxbCC9VDvOx08qNG4mgR2TOBSYKctYX22vQEm3ZMAVLuZPl8XS5Zwnp9CT8VIn83BYmnmg0OsdQQkG1Di2JBIyw17JDp1U7awgqQqjerhC6DdIgIZoS8U5vZw+D87FRoVDA7YV3k2qvxW0275WGhK5BYRWNbFpZBW95wS8yCrRh4/XceZeaIT3OpohvpY4k5ztTt+equny8qjkMlk/bqBsrjx6KZAPToUZBs/RI8/vIgip7fcLYK9tVXjm3TOYvo4xo7K6m3ypoFw9ruHgRToqQ/Cu5eUHog534cmxVwsdCqRLMwmkGVBFeUqeKnYZ3AWGPI6TPzv0PpGDuK2hQsvLn8RVXjNiQla7yf2w2KkBUaV/7xls5uBefyOni8FzNHdzdDvww+NN9bZFQOyaBY569oEKzmqvoC+iP81OT3JARuEaN8uTai5ltXvolIKXxWnlDte3CdREhoVBDxZH6BG/lYc5OkVlojY69QrHv/wDZySGmV0+tQENoSIZMttVl67AsIFzWu8CuZuyliqdlC2e9sLZC8BOY4w/xn/KS1XUMPR0Fb90Y+9rRKoUzEgoldo3mtCXtbEfxe2RKk5QvV0nKY7WTK2yU+XbcD1U1a6r7bcD5ItqQoYCEbgrrQ0XPZef1LcZOzIKeifU+zqDizn1lHupb6J36d9hYum0U/Gp98QZfDNt6LlJMznqi59mz4Clw8ic3FRSW+1aryMyjVcrddVHi+SaL93Thh9NC+K/tFSXa8ygdosAeXBG1P+smG/4gFN+BNBdlhXWRqqsKgFppen2F6mAPVDQVvcgptV62IO5uvBXWeUReQhhGZLBxTP/HMbLCfYH2M7LAZtMnw2XRvGWg/MTRLn858Ivazheg1Ss84EJs3EhM6nEz/WepE6cw0UwxTf+ppWS0zrz8rntiAdxGhk4lNzVgw93K6TDd/vd3ZuEkV6T3tZwPVkqFJtULm3rU1ixw/4eEr6FqfZb9z8yrRaC+aahP2A72nHwgLTqaLvD4GYU04Kp46Bk4F3WPbN41Vp46T2p3OywiNpiNXS3itstb6wT6mR9MkT7PlgruiDIrZeyle0FNgCmWvaHS4p26UaMYCQ1N4hFJXG7eEnWzg6cdEj4e5U/b5pTuLO0HNPqrWr3yZl0/YfnEFWx4vLeLucQ7GReHc8jOy2nBdKelb71V1lNw0XJdXTSlcttBknI+EIw+aSzkeT7oBS5fZq4PC1aBYgH4Is9OnbW8ZctfcQh1SJ/rzD5ZzCiAJhQABbogyaAEnyIPlOY2bG7iCThHMzlv3EDaddJxotRNI/FIUI1DeJ/BQ7DK30bCip+yFrH+z517kqnYL8dpEe9haNu4BRbul0fyaocyPCflJO9xSH550vGE5YP+yCsXXI12zUAE+p6AuBdgF+Kdg9idznXjPAyipYWxcsEh3p+aHW12CwFmp8eN8D2EghaepNaxiwHR46vFcXMzAo5iEbYeQs0qr5pEFXOXHLn0XgO3wdoQ3W2jqkhRpza9Qil2RzB/S7PvpPi5iOcfAI85d/qCx+EkWwkDbm3g4PW3V60FU3fTP1WWg8g5REW70HYvv6v9q/Uu4qvV7u7XvodeN4VfSEQ2jv37oMdo+OJTgQebYvwTi56ljMDHF/cG5LUys14RjfCWLZfrqkxp9LMUJPHpuHwCVGY14MJVGCQLs1DaqyPOC4Qu6i9mrieubx9IrPujLH1QQxBv96d0mQfnQFzkkvgvbCA2WVLVHUhgEhs57sNOT8eUFpO8bhV2Iqkz0QMBNog6Wifh7lcoH0W8Cn7gnbAet828PGwf7zJj/KxZlp3wiN9GxSGv2vjZyK6lem6xc3Pyi3kL8WAgskXsg0xqH5H+AzOUQlkTgi3DB0+XQJJNkQuuwzv/uuBmiCwrEtwEUi/916NJ8hAsUO0uIe/BUbkM8A6HYeVaxtJ0gf3i6qfpNbPBG/T1WJTQR2Pa9blKGet18lJa0Pgdn0IS/R6sn0Uu6OToVacPTEBLThP51q3XioGiQTd15hAtjLpURcscXY+32aNE5cjrsC/lFFg2J2ccLnOxWjZiJs/JgM/fw+L1xj4RXzmTknYVPDatLUCQA4CpQSDHiX6ExBQ6CEHnPorCnr9KuA9QM4SqkCXEX41A9wGb5glXT0OwM5SCOvpVSM/8iF/oQRDvUz/C2gx0A5Yi0caevqnY+3ZD39bAtFw0KfZVQWRDbX4oiqCWoOZSqAUAvaqd5ZeGYSi1tCfPQQ41QghBijf+iL1Vh+WmNIY+IXga21M9/l2Gv8fKwOLlWzW4qh2j1xeg7U8ROEDrwlv+vI9EmTJNsF/Q9/SregRLOUm8NkGODnHRdCLRT8FCpcT4Sr9v0oalO/8zAGTf5Ycgmz4ChAGfGBesXJENT5tymCLnuHVRmr00nvJP+FUT0bu6YUkG5JS0nreWLCauM3a4fAuceuiG7nkKH3XwrLdm8S6ll+1l78qrjoE0w58QfhNfALCUEzoAbT5KbehjIkWlItvmziIdy5zOHJeyEUJ7T0lEwfC4zvSSAnjg3mcJGtDTB7wU7NL90g2iQ+9WnZm3yQVOI5HPj+fn/AxGoP66vP5cZZNfyoi65EgtbVCvLlxNi4aLol7YpL2UZZKR5cx4AK6MDDijB4WeU5OHpHooq+ulUypwQnWqyy5DfgyI/mEQ0hWCCLNUJK95QYXkIwL4ZWOFh4RNms7w2C7s7+qSN14Dwl9jn7EbsYuEtj+F35ZKa90N+ho2HU322cjZPuRdiqR485/5Nz0JmDPGlDKeSYdgVbifzFFmzP7QNEFxlSm88Bpp4E4TbJglp5jd1DHxiyHDwEIxDW8U8QaRvrm9SXsbaU8UyOOnzbSGmIEcJtya2Ve8nPCt1TN+YRlOWHqTuFzY/GS/eMNNAFHM46pzD1p+UE+/xCB2y/uzcAiWFYllGoJMSwjJdw9sbUqztIh/D/6RkBudtZKAIPRl1LsLhmmntW0OLf8IVxPELjYjHWc1L3v4/sBkuyQhsLFIn+/nVnTwTjkAiSnI99VjcVpQds/vYtwtPZWzXUYKota+RD03UTlBU+howSCTMhl2pPZcbYlSK7b7QTGbI8/OSBwV1CV+V1xF7PzGX8yFrVKmFKSlErSL1I4QT0J5v8UnREyCWxAsrHKd1ckgdzBGYIb/mkz7cAFQKim0pkQ14EENSGVtwRGAHE0ifhtQnYfApOYDsJ/fg6Pqb6sfGCLkcmftjemkKwzTHJuhNZq2foa4ZABu1oYJbOq1KyPy/31CHvkRKmS2iV/G8/AELx0M/ckwoZuSi5i/oMhiGg5hVyrkweZTE7EfBRV4WPogkBAWf2FXzXMRWbVZ+ft9qjETgW4O8+5GOuwwJDs7vUbUdO3ul4VhlR2fqombT/q9foWklCzAmqsE4+UdZXtlZrDiYB8/RHI/ofAAxByEdOyHnrdGZCe7bKD0PPQJgndkqXkB0hvblyZdMEyFh0/fxOgnhT7qNIHNaMFm8fRJlKGaK+S7tgA+BB6zp9E8dbuUa1brwO4iQoGv+Gd+UBpFyZ4JtnKTNd6Y9ebEa0NLz++rjT418gPtjtTeacR82qiuwmbRQtHc3OHPNDGWqXgpDJIH1oObOgFywT0UElwTB+2FVFMOgWaPglX/LTSc7o7N9kdPKzQ/7FGXoh7+GcbhPXmbRP0nTKyBnvipyi5/lrm29Z1JXYD6lvpXZfQMxbjwqs9G2g3IOzBgxZg6E/yR4PP95AUkjpv6OiEKxoR415JmFZSgXxUWyaACXAQZPp9xYLsacjSNnXwSBj5VrlUqnIYLByoWJzSnPi4bt/26cCheUSCAbREdfIOAXNShdagGstle0XqmLN8eTdxXoXAYx5oG1fFU5wcLAc3irP6jHwlW2Cv+xUwmQs5dLT5/TOfcx00kmSiKslWErryMsGm+/5BR+uL5imtOegbHxcIFsh+8fQRtpeHVkwammoQGsc3FFqNV2B3Hcdbp5BPwYHkXwJNQkRVChizW98zVJsksurKOPBtlcO/WOmFl+kLka4jn84QEIl4f6HjuN4247udj4cOtVjcbn/u5Wx/B4t5Fgok4GgNj26FCvlv2X8w2zVVPwUDdn43e19zUuYtHmhduc2EavJupJK3LfkEHzgqDEtkmthYrwQ9hGhoHIJzciF1/EMWwB3PFLqJdf3LON3VEj8fswTaEmLqD+0s1ZcKNMROXPMyoTtZ6LViz91CNFSlglqJZUpSYYYjwVwtyqpNbxqUj0NTjURJCtQ5cWsV05hJoj3+eoCfZ+QBzRIie64Jik2+GnnX5FYGmqi8aYIQhgjUQbldsbbxn5BxOqP9t90a942w+58ndfv285Sewuyd/wt7pfnRvGWPXgvpmrrhmY5cGPZdFjR/FrhWK2/a77IZL2URfOcn+9mCygrcAuXKS/xx2FsO1RDE5DSbUDDkwQjRQ1ZIoPzO+Wx62KgDQa41T1mJHa3/J3DpBO7EsGFiUqgFeXMXEQbo8OFOK0b+z3uHpxUaolvXHV76QwCv5MHbZCKo/asVONcIDKNYsVovrgsrFcczwm7Ml8f4iyUlEy0MpzzpISN6WqmgZIgcVwMmd1W+5l8c6rALh4xzvnhR9VUJqOMO+rxWdh5Cac3/IOgVQUxxApOj/OCww1ULhyh0DlmnSyV80+nvtyFlWjpx/I1YrqgB9vnFKrcngtdx7dn79sV6vnMwKccnEF1Fo3FQcFZVyPMUcg/xHDKv3vrrarpNwyeD9n3vGGe8TjFTBb9uT3J4LYHwQqNi3hsR3W65S6DxC7RGzBzIAZ69TN4Kv4esL7b3DSpdtXh80QULK7l74jX4p1yhqlQXnkjDye4uyq8E52xxDdAvRbJKnQF5WQeAEfpUNiRm0KUNnD6esTdzYdD7bvrI/foDQVLzN2fnMzqshtbHbicx28Xtu+GL88JFo+ULXTOaA6tyscHZNKVt14F7qjB5GPHi5w0kl+sKbLTqyOgcR2/q16p38RywS6/EzBt+0pMrpqKjIhL5GbowYki3uWtKMznLFj7Z/PDoxvBDjFkph8tv9lQ6VBIjooL0Y2y/gIY4LX3M0NVDmDrKXkUhEWPt/pRbrrqoLALxx8Nd/p9t2dwVTQ3cw2a+BJE2mPJTbYrDMqfxD5QRC1+jybGTYdna+gtsELGhtwcAPrthK+zQfjBsU2f93zPx08IL/19S+w7POToy659a34ojmpordxlbgia7oEgk31mqNzcbtLQVDVOi16r73FAtDKs2+jYGs8ZV2MhKPDSiwTyZcr+8M3VhwUx1qtQw3YldK6T3m08ulo4qEtZIA6K4rsJbenRjkssolrqPl6Ph3pXRF/Kb5kU1JsZ7nFhfPE0yoY3CH9kv+FfjBZjNVrEO2zylfP+c+DVsLrRX3uLlEW8WnmHV/+ixefuqcSj3eSTPGtEsBQY8RemnWBWsni4IPjeUgDtunEt9yIrb6WwfkDB2SbqOw5+3IvObwlH4GFgyyg9lmxU9HmUPLGnkBoDZd5m7YDiipznhqGZS/fHL7hP+m5RIyxN7KzYmMrL+24fkIiUYMQu+ra6AvnBhJkVSQQLTn3MRAmZiQvgrmZDtBkgoa/UfrZF7M+gBRkArF+CHoehok7HNtFcH9v1Rgg0F/tRyLcResTHr2VYXyMIEzV9PWHzrgzB4S/lRIazkhe7YBSTTsV3XZqACdCCKPPObC6seYCZsLB15am5PWPJuPlAj4pdOKQo7Y6d/SK5ABw0gMRwWzqOBf8RlHpGNCUmDkeNHT1RTCZ7lL5lySBZYF5+8zM5uR5tQlJfrkq/atfLV9/w+/A7u1eu+uY2oKTncQ+Qil9l1bKPpmi/JAD45XumgQEKbZuBz9XsbU2PtjrINTM6bGBt4RolIpQh83cDBgwM72nDex7Q9QCIA2TMZAuCXuKpmre4G+sBH8Pv0xoPNeDj8Rznh88HsUxcEm8liNbjUlKxGIz9dGaI/hD3JeIid94y1/QjK8JzdCH0yHm5uENih7a5tz5nyxd1L7lP4XwPwVlJpOFVMc1+XYkYWIG5eGpn3qReIcn7IloJGCejh28iOVPRtxmyM9JMfXEFL8BL9NeVSi0gW9D4d36H2WgD01Ewyf0KNvNnA/NY7YqMp03qVKnB2+9cCa9XWUjkgmIT4N52IJYs+xqq0cS0Qpl+GELU4cF0fbI/vU600MpD0+ovlPZOZP//Yw5oEBKuoTCelnEsr/JrenPjgyx2EgPsa0EONKRf8u+FRKomfJM/NGyfooh5kTXkgoXcnIHiCY3OJoVwQgznzAys7JPKZ0F5AKs29ov9lwax27tlNFo6hB+CmenCD8hadQ5zTQnDvWjPeZNAf0XGaX7zWCjVz7V7j7zFdjvTtzXaydmmpb8Hk8EFUhSW/QFB2KiQf93zYpVOhtbE8UR1W/sIkddX3FuKvvJsNvqCGzpJwlK8cWSH0zE+ZckObpQ4XduDWU/vtcYJtf7BUtB+RVLDb5+WfqHyV6oiAh+uwJVpsZ7QYW1Pd/xdBuT0SF8+WDM0MJIzHrpG8vcpfaiYHwLrsFwkTiQzCIkUpZN+igK02zkcYfHD0ear0Zs+1i7yw9u/agJUPur+9zLtFCRAieuirQx8851mjSlO/ltsQ6sidSbzEuKnFQrY5/8PoHmJgFswnIJORP+zu2XJq9QPcmUIiber283UQHw/BKYhRe1d6bpEze7GGg2BYTDAhSdx6McjBrDba9f+7d3kVrD778+B5jfy8eip+jrsGg6xMKHACvWXxeoxs7O2/vX3k2i0iDfiCZWCSx/hQozNH0fARwr+JHVyB7GJaBer7c8fUwqLgHPktf62Z3CQvvyn9IoFM11yBg2owDGYz60ZdbwPMoLgWMpLtpf6izcdQkrfBYHy6B2wdQou8RQuMS/6uk7u9AeeC3Km+dxmSRF7NifQqEWgVaS5ZeTFyDTz6ZGraU7yMuviwyviyA1PPknrx1iZ+vtZ1ddvEtdGDRz0MR/8xCETENPGXaYAnLQZZ3BV1bVVL6pj7CEuKTfr4PQJoU8b5WYjUy2PONQIyRS5oqVvSB7WQioTfJ2hBkG1XRy5xxdTOPYrWUFCcPLiQrc7qgZ/UE3M6QtjZXTijfbmAVSe3+c2ynzsI7lSw9ti+7BZWqbXhPSlztc/jnUgtkDHdiEqGlUBvjlOOwYcWNpRleojDA4M0dYT6FtSlybGQkQRHMMNbLLFaZ2e5SWMICri0nR1AyWWxBxfCW/hA/rYHDwMFGp/mKjjNR+1EZuxUghsIVoGkMOnvllbon1P9V7MlhJ7KNJTSwxGeDygcFC/JbjlX8elgxIcSuvlMqxolGyHmhkfOS7cgwWs/GqFcooFpbLv8CEtuvHo0OED7L1NZHJ/L+D1s7Oqd0iVIEFNeZsNdB22l7rGtZoyWuGy8CtL41BQSMMvQrMEUS98Uqv+Tv5NcjlG5ZwCVaBsBTKc1lLxh5T9ZJknydcRoXJEV7Xy10/gGQxy3idAE6YKDK/FDelqm4466fDjl6YbSVDQBgKnj5zMPEL1iTMmMFoaxougU85uNxhlW/PtcRwQeu9YBYuP2r5+FX2rHHVJdd+XepxrQL1cId+YAkssbXp71C1ZFP6tkYOsqQMt2k7pXsWQDCu4WJ65fQbE1QUvV+SyrW6HBhqDBq//O9m7e53UKyBEO2uD6xvYZlb3IQPsjPAGBjDb93gIHgnMmJcHyrKV4cN1sHSgd/PdPse+JodWrj4u8SzbB90wkxKI/+VCz1qe9B+tEDdoBEnieJZXPtHvDXu0t/GidRouQo7ffZTO7g7MQHb1jTdQRIO5zLRzOPDxyoPVU9T+ZYB0tozYwYa/mBP0JlwaPlP//Q4C6U8pOWErTOx1e52y/yJaIIjK3nhzl7UOtNBGSnuJC8ZScDBS5ofl6Y3jrlIf/8McuzZcK19GMtIzyUFB5nr49leraGMecICAgNX3bThE1LEtbUexAm3u5E+BDQQfbW7Y3XiBKhVmjFUsSXhbDBXj8l1X4OukTO5mwtLrCSuOZzjTADkO84t8W8vaLzKhsiqhAXl7ykmxRdJ7q3zs0Qmv8rlMbq9irSdwtYQMWO3E5xm7JX169FjTR9CYuTYKQXvDXEEFeb6hIqH8qVnWxEug+S1WCce7PodavNhpL4C0CKVga7NF9QyH3rKYO79rVyZuoiD3QNFcmY+PocLOBJOYHp8SqSEk2WaRlOklfETcqyZfUaGfZbFvwfN+kResZ9w7yIXroKaGh/S3LouxUtvzbVF39WZOi4XZp7wQLHGqov8oHRWGAfVo49LNCSDtR2UF0cdbnMZ/EN3Q0ATBabOFnJikY7Ihk2n7J3yUmvexOKoaKEm9KzMP6JKS4K+ccPexfPGry6zBqgiCzJEgCMQBcLz0AiwyNfjfAsStjPmJLcSAtLTsJgkdC3H1DZCX7oDfq39dX7MlV24wdWxW2W6VoVCk40rU4sw2jUvV90GAdMjYZ5HtJNhyaJVu9colRMNnDLkjiNDbwk0+WwIJ70Q0wHi6NKXVo1LokXCobldd9UV8E8iLMzvtc4lfH0HXdzLsjg2U0czgNLDRyb4AnuADLpo/T44QeYKCoD0/xG6iYcqUMXFy8PQ7HrDaCiSo+RDqBMVPfW2NBEJXRGvG6Leu4jlnsN9QQEkAYOXZZqahQeDLAp2/oD3C8hXXiTlmEAqO2Rwth7AC26A1Kee3E/aRuhsCzp6x9nDErWwHZ4/36CorNNoPruLHwzHKioz2FKFovSR2GPlDKOqOrgREFbu47L4g/dlIIuqfRfFFCvaydonvFnxhKJlhHCjCS7nNrKB9TVVwNrbsYgVJvgv8MC2oMmDhHWRQbB6hXsRhhr5u9JGnpmCbPjTrunRq5cM7Q+7aFcXLQFr3gjSoJ7PrbxRcYjuFWpmffJ++u9yFwCHDRz8M3sGJoehQyW/9IV/pF5Z20gh6u4XXCzYRF1uQiSJAF607mT8NEX7uT8ESBO0bVZLRtpBC/saNPuD6r1kc8CL8MvrxSGEdXxdg9xk5xvoMyesjSh+ESK8F5S+T3zImU8Fwq7jhrujUFrxeElemzPBcUQzPb6ZcTsBFhn/QE5Wo6DYXwrt6lwm/8XnZYY9iaPpPnTljMka9WIUHCDX9anYXvP+SKjZQ8mA5MfoN22Yh3oW7Vfz9OmnRRgKyryhgwxLTlEcTv0iHoJmUy/vSUxmQcKT16layc/R7SO4/Jdx898e6Ff6igfvVjMkQbVd5GVp9TXfr+gsF2+V8YarS6NUBSnGG6YwwclJUvTPGbRCayfQvr8F1+J2woic9V41vwm5MF/GV2vVFtYQW25rRUiNvf+PgYHy4RJ+K/gNEXGGlKDyBio5VA3baSu+2kSKv4z/i1g3xUyw2W2Rm19BFUIL/BecjIth3n1bQ5EMDL7/yLO9+4MxZUZko8WI0COPToDUqhzaj2AR9I5DGGVf4JYc5ShBjnp/pRFlIsZWN13qRGZZ2m63sbFUeMkaZ9UWc8cT3gvYfQE8TYZPATgqpvJ/0jWcLJ9rFsLTqUl2DjwGeLLYDDdsAzPq0NGzFb7CmxtYKNQkDhPQtL3o3jZ4ZloWgIuUtALsSrUb5TG684hPAvu2KZ+0dAq+XWZAI5JmQLmTdMKPG8AU2dekRTOoICkUHvHjTYnITOAS/sytFPpVAMNSS5XN53wZoUEz7ui/QcTk+tNdIUmHehbXDjqJHkO37pPtoZvyFu/K8izzZ3mREDNge2QotS1jtjGJF1+hJQTUoCOxGNeJgN/WuuOPo/MyVMYSF9XHQr+0XP+9rCFcBRgjqne5kfhbJx3mY72dHnM2uPqSoewfW1jZc1/MsdVhBFthx7WheEeLxJb7hd7crkMJ0KPEASUCNlkrcbQ0QiXlRMQTtiakqVZHpBDPK81MRQBIiZvrM2zne4bbYvxxR335ZJzZSwgSZUV3fSdUjg2OGc3m0zo4qPwQn/4D4zlkZXJtHos20FQyima5jkJc2iYMKbysEJSWUFoqVAneSv0a05CGNvL4edfWFItWDUnBx6X82yWxBq1ocpKOgqqeztCrUQ8OCl5ogxG5mkqKYiwuNA8O8x5bIXdnVbMvUlxFnyzeAC7X3qlxgFz4+rwxto+K55ZJlwc623cDsZ1NkHPvfxA/6BQPWZvytAQT52p3CaroGVjLjRzrM/ObYx6SYE01n+uD1bN3uBaPTGGn5Aa7H3aM395Fz/J6u5/zwjzrc73gjtF0ncdVP88dTV8q3pav51xUoCOLQYVzCSUzhMBiXS09EWtjPqBDd7qSHinUD5Q6UgiNp6Aedlg/cIgHM56WzCJFlP1aCIQEujDA32/6W4qiZtlEfTHxrNRUd/qEIBzoViv+z5MaaQ89x0N1lo6ImeaqH1ErRygkT8U4UWURrbJ5rDVPaRIg0XyuajdSEVd292q0yTbZAp95yRDTZwYciSxadMZ9laCx3A4Gjzy6OMigMizaNLUXR+bOyUq5pveX/G9bdCsgNn8KmjGOOdE5LdEOn3moqOH8NVQttzS5uWhq5qeEQIDZZNkqLCtYnIxREQQR6tjeImdKMFA5xll6ynB1DCykr7Ge2UrPhXogdZv5iTVZR2m+N13WwzJGEeYOk32eCTMgN1rQiZLt6FYGW7w6tmnB4mBeGF/m+4TOyW6LrIruk+XnyVYyOE7yNVAnQF47ybyqlW1T9v61c7GGxHhf4g1kHfgKrnoSDkmB60to4XKTZrACU3JbkSfE7a01xXj8yf5e7wpnLaGded/6uOE79GV8Emz6TUCyZrYuCnZw5Y5xIQorMZR946Bf7e/bqwKBV9Gi5Yi9W0od2usj4p1eaibO4Z0noujuvQxlroIbppE/PBlccPzaLuOlzVsMfVNO86eqagn12Swlm7p3qaVOE2Q3lyl+i9M8n45S0cFeph1mSt3Sl9zQKrNHbzLbUsS46Ion1XXxwqMgZ8jYjj728qcZkxXqYkK1axrgtvQuGSxJWiC28TSHGJuLD3/98DDPzB9tcWfeGt80Ss6ubnBbWVyHq1jwxrjsCLpnWysdUqf61Ba/uMxvYOxSiNCbC9k477ozKpbzu9NctulUnhOGHJJxfMCxpvpWRwbepu+5RplWGGKK/jR+OYsXxswq/EurJw8YMKIRD55VaDZ5IYt6dTZUFma6IF8hNPkBMEbK7Y0M41hQ0UC3RGvWE6VTkk2cFVX7T5TXldWB0Jp0SuLDadTI0WfXc5EkYXoglsEXPO5ypDWQZIGjZlabjeNhM2gj6DJI3AAxu7UaaH8/gRhr/sOVbpQKk/7+iIaoG0jZuincIVbmllWd4dsghknwiboAcAsu8mTUD5i8ZDvl0p7BbIQ55JS+QKigKza4vqI6rFY5IB1xkc09y3gju4ArIH9s8pf6PNKylQd9TnGXZkAzmM9ZbLCz1QZHkBjUtvPGYJOW7vrhIP7LagHmaIbtHs8ibGxwcr/6PEBDBisvtgEAzNIMtZTqlMpAtQ9jVDfW4nPdBV7wRG+yJs7VJU77bKlzKNICS4Av89LealYF3bKxtEy1Fxk7YUzdo3navhRxFHsmSaubAFn6Go4PNyRtlIcsC15zpKrsHaj1SmEe4qh58JPrfw0tRGR2vsZxyuMDVTAVdBRO55tmsso0j5vo+mR+0beuFSgM6tnio5DNfJj+u1Fz+1mmc/plRWrk0+ljuvG4M9c1JLXVz5I+Mkeq8I466p0a7SApWZyFjjnBma8XLWmK0VwqYUyWjDMteRaxBEvxPwFAT91QClH7cSKSrGLefa+aK6ZEmzpwy4pR8KvbqLD35hk+hAG2jovJFSYUFOr3BWRkzkLyHSnGeV/JstXt3LNFZv+9oOBv10x/EIhHfbfHW5UOd/hA4tfNm47j3nWHcYLlMunCLywJ1w0HIMvb1qWki/yzU3YOHXw/QVXZvRK6ZUX0HWlZuxwDSIvQtSocjwx6Jvg2zAglCFAdhfPAdR9rsobbZSX8KNOix5QzF2D3z1aapFAc+/mhninNRM9MZIjGjvv5sxyv3nNgrAIJNqGi70SZNoI+cdrSeX8kFJtXqurBPzDuXhnCUI1ZaEXXfbadyFzn+A0mfkAhj2DvvrfsBexuAHwhx2yzEbMxqnkvmsW8+xV8ohN5jZnC124YhE1Y1da1wMMI3d7fQbQR/ppHse2MZWN/MEYZecCrYQk/iru/eRxO+gDgF+ZHar+ApaDmbcfro2DZtlc05x7Bq72a8HJ0pcwHiPOOxV/6KjLoI0vBx+DBXZK5p1yzvswqRHyvhvg8AVjUP0UvzRxnq+rz0+uUFt1Gk6dYbQNEFRlHY2z8mpvVJchbWm0oqXV1SuH/7lUkOledA/O+e5U94whgR5LaDL2i2epuGIFWwA00fbw4th6QxeCOMC6RHIHVjJDNNVbRYxh9M2cSZ7lM4A9m95SCyIbw/k+lVkgRIBPd14+5tf3CX8BK+4CjkUf5oIszArmJQG7z/uCr6odVFszcSpJQKOnsYXuNnWwJgiXKCA4KbrtDTrstmOJ/ahtGHUzehtGlK4kLmLf5iPZSU4RuO9wwIE5ydDLc+NSlSri8xjoili6m51dQVHfDiTk6A4OPq0GP3FfZughUuulom777Hwg1snV/ESiy2GQHi2tKibfGgsspF5jvgbph91lmkECVrYZem4Fi3jbMPn+UggFDfiectKCvW/KmQqNp0SrhAjGlKudF8ZN70FWZyaqAdcyRcECePKeak/T9umA3F6haEHbC4N4TxIp4yAkFcow/XxryLuaTwJXJRqgGRk/wots4WyTv2aiVEK66FZMFnqkbDLC3n4jjEZKKjImbRnXEzkV78lnBpnYMecbIhKX0f3kyiPc+X/TuD+ghgytb3V6haTP0NXNs+T5WZMh8ypDPObZ1TLei/JlcsUHS1jBVXcNpN2s2hUjzOyK+KuOuWv9ZPBhfxys89kMEmMG7JiF7LLxWblqRgnycu+vXtBnxUz2hd9XkszxbIlnDjoT8AYhtFoMJbjok9b9B9+TkZL/NUFOtQGVtiLBZ+C1RwTt5MRPnp5uzx/NzH9mbzFCweXSEhRGvOA4S8ItxfENZeYO4MOOCh8UuEurwODBAS8bu8dL6TIccTL/aOiBr0U1uzLHEwiI/9miuwfifk5ktgztTDKpzPCkHyUt2QBRLR2LLgTW2JEceq8TgnbRfc9LjWpF543OOZH+adPqP//e2m945pF5UQ7OOGC9pioLGPTEh5OR2NPw/0D85rkLYLTvD4KpqsnQKXJRBWRGuyS8suffTED91dGXykHsGTuOBazuJuxSRGXeT0q3TtXNxDdnxJUo5d2VUZEbrgb+xJg5QjiYjWHNPj3zQ43gqLQW9oc1e1CQ5Qcv4o//lf0BnXGc1TIxFD7yAWnjojwsogQM5ZKUe9QC/mib+BwGZM6/ZUOXR73h3jDqUUYrFSfE27K4xLHZjMXkv7znmvfR4Ja1xSUiLG32kohIasPV3ynZIMMi/h/iaEcmgtfU87ReSgCO9d767laOcqk4VqwF0wTZcVFdalIt+w6YaH/w+bwNyF/46CKXeJaxLsx98J47qTEK1C4mKRW3I+9feyW2drq6Pje+iTeP2AJRP9Ue9uHdBidGufRFRJmJS7/piuHjl98IiHMzIzSglVS/vddg1Dbj8nwX/prGvhLs+18vzhx6Fdi7nrm2s4syu99uPQq99LKZ0uWNpPkuwqXqu9BGtLGnh0GCgdCTQy/1P3fJUHTvgzMm1qnXsdDh2RQ04yZBJa8enVVnzx9aBzW6wJylslhACiclfIWrE6iRZ/oQqBMBy9qh2aWCVHmVxKUZlC+6gzb6ZfGap2RYEJlB3rOm59vBnodmWjExurl3Y5E7FsPHCgHGFmM9PznzDMF1K4xKs0ZOqUtqrYvacVRXRAy+QbCr+85yOWc6/DXshDcw2+Hq3qoBFMHmtFy14zaBk1DpZBzU81Dq+9E/rwEfVS5/1a+MUjiGoxv33HvmKn7mjSa6zerBKa9HeE+g/aaf9wyF1N2nwNfb1qew52/k6MAt5TzJ/AZWS4FmYnq8RnLeMtEgwdqST0fpLHIAKxrHfZABZesD/pdZLZRjIWBEu2uptmgkWkvqglGw0At8j84JMBk2mEPrvLmCaIhJjDZy0ZZ7srM42CA2xP77rfOaP1ITPwV9DYapFDytEA/F+jNwq2hDCr7t8+TcSSfA8sWXPFCoaIcsazmOLg3le2Xm/Zmzan8MJ5tMveIZX6m9kCqi0QCCnohBedY2Ncs74TroyMKElp3HnsnlHhYJx4v+jTvDzx+S5SXW+Vsta5LPDJGCGi220K6sP4IZVIWVa+5ihltiK6BMES2E+lKstMBReRuGEmsK8tDTWRAOd/216fDudpeskaqg+Pr2Bttqjv9eNn+D14yOiKaMlfcMYITNdVkEgddCUgc/2pjWcpV009heZH4C3VNfZesH5dU9pxBBt17qTD0xP18S4kcSyO4dimgwsjsvYmTf31VrFrZ82uSRrNqaKgTBpWAGvLXC1NlR6d77D5l1eg3NjIUbFrV80z0wkeJWBmCD2TdcJIN46ZgHQgQbBH3ZB/4sTBDbCskv5pg8GZRXKO0z5g91D4XSql5t6AQsbkUKlpPvk36baznAO5c+PZ9oRmTl2MBzj555IXEVhMuJUmrjTRAuYTb6W7k0VQ53dlLCczvs+5rS8r5v+zxX41YDliXeWTg7XOdArAaatOqD4g993hLE2kf51nV9+UHJ5PdMHeuui6tfXDnrIm9gXAtQM1bwt7bhtblQr/lI2X1ftu/Mj4mTxLqRQ3P4FRo0kF4B/OTETOEVw1eN3G5DMSmwoBkrE6/YaffMdoKq9cDH2tI7Iq9iYzbDnGRxBOLa4BhIkfbViuZ/2YexeVyEz/D4YavKNuEmRSBzCnmDl9MgOWyByUu/jMQqXoGbG7d/OroDOxhIC0SE9wq2qqhILdG5PvN4l/FAUun/ED2J80rN8LtrC71S37PuKmhdKNl/O1SXzJP7SuUfbejiOkNDp5CqqC5y1aWSwcYwVT6OltXoCxvPAiRWe0CkWgBcHySA6mK3mQBjVWeAcHQt4el+KphxccyPTxO3eID8giE4WLQZnMqNabPZfPzk9kz9Q2wfRX13ZYwA33I3C8Q6n/LiG74z+/pST7mWXC5fnZ1zvvrkFvSwEYB5nep8yMBshCiDxIPGGEmWHKPUXN+nEHHZ6qyJyZ8HHavnzUv/tF0RfL2mQtZ1lt9Xfwe7LqOAWs4fZ728YDRGBulgqfwImchdYX9C3VUT6u9JH146iA44w44BXrH6Fz0X+L9Qm7R0Pw7xkZGLHnVRlFxZSCNmEmMWQ7zFWD0usXBD2LFhuX8ziW63Czbk2d+6kXfEIaqZmYL7fz/MI3Z0ylnH9ZN56X2vy71Dx6HN3I2rj2595NgUVkB8eNjYs+a3in6SQz2bfD0ipZtQ0at+/pNgzbdYeI6NJ2OzPnmOGJJw/B5EpjPSBDNHYOymXLt7wUgNkRbxC/FlGU8KaMaUTaYHEgtBkYCHo28CsRkM7nl1OhThA533+w4XiyQxWZk7+rkT3JUqb83+Sowra9CVSlViDW5GEON8UMOq8YYS7THahESemi4YjR212ZvviDhsOExDZQa6nA0YA1UhsPX2l8ronpf47FL+wjcRr+ibvtoWILoupGWA+l4EhZjB2ZH1u99Jw3g7Mu7ySGA2jo+fUw/kVJ+ElfbElfopc0quULC3znRPTvw7GehO2kcGokb8UjZNfI42hUDSNURl3ttk4es94Zng+g8jSd8NdrkKFKJpmyGt+7fAyZEXpf58MqXV9lNGRofOByTTucsAFCYv+5//f57oAx+w+wL0k2k5kMUb2pp8Y84MLhQJTfCH2PBFdWK9mE8lu/Ab+Quage72MBnVA0OIPN7x4vr5QbUWe5qCJYsIjamtdlhwY6wLBEmDBBXawRqUpicPj5RpK6zQoajnuKSuCd32GgfX6jteDJefVs6Ud0GDuyh5PSSc/gM4gEoX1AGFFIeJqA3QC5mtmyWY8Ap+neZfSDIEBv8EjqvpXCI3KyGeVu365K0Q+NzrBT3b2JRFSFEsz1J3o5HoK0YRAMV/HxE5Rk/5SOBsqilskTZov/BIAa9RIV+Tfn2uf+UGR9ClIbxzU8G4Yof8HaSqxXzTRzwbXCbCE39PjK6ZiduzWwSd2ceP19pzH8aH1qukjWdqSjxrLlpD09/UIj2ILIIs0IXfB2z+dVLKFJjTKk+seI+SWfj42VjJpBPiMaX6eL0HIbEFeT/fcWLmLXU5t7/3uRRDrtxB4FCMjHnw6pAd34l0p/AcEbeTgMW0Kzq6Z7u5YIQC6u10vEOp9pfsdliCRXjuZbVD69LDB889aLZSYSwuKMD3vKfIcSncrraoRAWUmQoNTZ60Psj0DPMZxHFXocQeDv4ZB2RIIlTvb5iyGRWGe1HpfGbS4RIRYKsqLlxgfcwI8AyUWcdyIEAHZI+CL6lMRoaLfShwjR3yxlbsjcF1BS77LoAZ9KVrP4ZOS0Crt3ywbL/3mjkww70J7sBA6X2pYib/HOJeMFrGrvwQhkCluUhtOjBhqdHS+pCF1XybdAb8vdUEGiKu4oFjgZGFL3omx0rpyO1BY3solEA3dpGQ1JvmlI4uim4oyseNYG5ayu476i6EwpGEXIbSEDxs8gFRl8x1+NFW7Yg+d9IwWQBhUkf57sYxNEGD8DPf9etXQSRuzwf6ZJ8B8EXSY/aL5Ychqjf20xEuv+84j6rquWByJ3TYeL9tG9mX/xa81e/qMRne02CbU2IEsD2WVhIM4PCx46v8L4MZ6dinX1qgkGELJ5C2enhrOYEA/ezViTEthnCsZvGEedsOE8OeM8TA2N8ATV/yv2kKuiJdv1rX7QtiH+myVnh+wFqF8Bo2OWBefwr4lDEmldC6hK3P7EuW0r+0rni2zLvCmrOvwEGcu8Tnf2V39TS3UO0g2tEOHGEfd/poeKKCyP4uRhCGTueLw37AVa4RA0VBLCAyPcGcU9SOVwfG1CS2+h6kzvpH6p9Xez2hwCGhz+d4A6BtKpVmlofKx8rEtP3z9TAWMHsErKCTEM1HaDt+LorthZ/uY9ZqZWTHzDjW5i/gmJjCpeVexdgVqa08oSb/YErC3Rf+h/6v5LrJGqK84py+SypwhHOIYu0uy/k9j0saxfuNTB8z9GmpZRPNiXykW97CBQLyffU8KysQkvjl5Xj79aT2EEkAEuWQCnkZQXB6C7ohL18QeQxKLII+V4igHfUUjsNEXdP+V77SOxvHoiynNE2J/bruo9Y7D50aSnUecYywD3ocsqM2qarPLJFjbntb5iJx6S0bLoEMku6qc/2hBT+3yMynSuM25/ii4gkN+Do+JhjV+2EGCP7pmicXc7oyVgx8uIsng+Q0MXICCP94Hhr2SG8U9NuD6VR9NJ0Z8ogg0VkBkIGtj00EpxEu6/QFVxXU2a3v9zTqzU9O+h1rXMrYZkFqhA4YpyvTqmIdSCGIBI8vcaw4r2bvSwM3iuA6OwLAa/83ty2f8lKPcgsx6lfwrbyd39rxDtvaHCOLFDiETTahNkDHmhZAo0NfzgrEb5yqSOdhx1NLrrEp/5H/Iy+CdB7T5qYCEu1k7CIvKOZFn9MT5eIOHF7Nn3kT/umauaWEJNY6QZyv8h7DtvpKuM5iji52eIQZPfPBv8J3CHtuz4H9PHV2OjMddECqaUuSAuu94DaH86d+oomFcgfh1aNMlYDZ0wRzsKa8rr0ehnfOZGxlxfLvVdkVonpx1wPnHJMeXPJrOqa3EAS/osfk9Vac0SMCcX0ZChDap7a8n1d+GjRvEzla+LWHRr6OhA/SyWgsQ5oloj9J91/iM6IzSFxinmUooTIQPyWzQOdibFVLea3hOAXVWfsqQrsWO9yNpmvvjn9HfUyKk5qLw7ZtpI+/wKAOmlLQLtJxQmbM7qYnYfonlG7YHpzrm1rp3H+jVuGrYuhIkvNlaFldkBJNXps3+SfFI84mpEhGiO3skiVqIN1WtqMknZUz8DVaQ8jAbVzS+IptpUpaC6hKQmyQGyVcwvDnigj3MGwJmSJddPRhHfoCmjqQrsyyR6CXLQmuW5aEjpud81eSqoE9U9A43lrYvUNGAqRc8lai3NykEmPIg2KFQ7cTtSAgBWlWJetoUkNN2lmw++MCKqNKDC1FgyqjRHarQiVAr8bapEY2yieOj5tg6fvo8ArjJE4EmDRNAdL12tcr6vULPXUoqmheN5jbVDk5IFtl8vWW+b3q8AV3fzUv4SLlJYvJK0POlBOs1bZpmXbIxN8fS7kB6N9BW8DPKt6dpWcEFO7FVSPdyQmCKqW5agtQLCblyzzWJGz+V50V1JwHvgrELDqYHs3M0m6P60QhWU42Ww0gO6Pot3CRAqasxVGhd2zIidoVTPK0itshrxf2CCsFN2CqRswDJpO/VI8WhEgHWKWcH2Z3UDQZDppeD1VJF4i/Mjo+K5JKpwCzQzy7OtBCUQYYFkZFNw845JqUeYBUPhVr2t55YmoFk5A3jCibVps4A84FmCBKxRYIf2rMCLi4N9Ukiu6vUChmtA3fku6Kes45IkDwigziK4/N5mNeue/lyOZMs52KRi/1TJQJpinp9kVcp6XveT9I3moV5DkpBcpoLTdo6mS08+b8QniBAkmVlN14WHZg9RW367BZE8iTUw1A9xo001ysrXjfpxAe1YfX7LjhviIcrt+NOrquZ7sXu9XNFZqAMGaiA1O67+YWPpVV1eYcxw+mBMPHrpmNRKTpLY7ZD7MmQgu0kIngUrzsprWQLHkfq3oMifarkCOkJ3/Hl6yMsHjQ8/9WjLajnE2if2VwXShvYE3hi27Aw4y9gf2N71WqFc1c3iC/hgJORT2qGYVcBJAtHdFOjdjTODl9KOUJHFzIxa4YEVzVDPjBSIx7F3PEq9qIaIf5iK7p8ikCid3micjPMxAWqGIuNIU1O59pEi0Y1OWZn4L/RGwp/rvo1G/v7KQVJ8q4DkQ2AjBE7AeRfxrvQnlYpT/EykccqFKdKnLENrihILdLXpvehRluryGb4QxvAs0FmcHEQzqgX880EnvBtPRDQF/v4DNlKnpGR4UGVZq/gxopczIAbg+zzuYQ8g7kj4HKwYNjmmVlPUwb4kq+hMEKLGmFanB9866leb9/NYEc4SlGR93CMVWnKtPFKq9Z+3mBvgy0m15nqEME7CjyzN7BTcIw01tUtMBKduVnuHZRzYYyjj4JFTzVMeqjjhMKZ4KrbDIXOkRtCb0WAeGBqAiHPhJb5xLVajlxPiMdkA4BqWEq1PYMa1yWYq0IIQUwM23HXjxErkh/qUB+5qRKoXvZiBfukdbkhcqnJNnhqaHWZt/KP4o/z7Q62ZH8VcSaWKm/Z7NjraBNjWcmyei3ovnPyGDf+jrJ7zzskJjZwlcquuy0gsCna89RdxU5rrzP60x++xEwLIiNUg+EudHbWmcZRDA2RZYWhx1rVElMS1ztvjhIp4tHUjiNEVza809XTJKOoOq229MOcWontUwXRgcnrHrmK6CJyYjcGE8kg5zjL+MOaV/cGQn3R+BNDJpHwbqdnO0rCNGGGN76+3yxjJUeFCEqGvyHCIp7Hc4M+PLff8ACa2gdfrve8AAWeztn0UZkc0rwGqvJkbFVw3aeqfoH84etIYamegqfnRE2m/HZfrkI3douSKcHe/k89Avovu7aItykYERaJXWILsii9YcNdT1fDIJPbm0GzZM29TAcox/HoL/ujlZaB0qUA+N46twKuEoSvg+bhkv0tgAwBGLwPwy6AIrEBqKUn/9ADOmX9js77W6QG5hqHpZCnL1sceqNAweN2qjMdi3TIz2DXriKF0Sp63cq1o1TdBAYRx3IOK6DkVw289CGgJcC0ZNA19YhwXslg2sWaGlm6aJi39m6mxCLVBRheRqpiDGZkeiooaFZOEQi7jXRvpwJeP9qgJeZghwUMYpOf+Qknvj9llpcgmETauBs9jt2NsJIqK2NbY3710+gsfwuJ9bUpjuLgUM4s2U3UcX05pIMX7UDGM6y8Ke0fhzlSxCzi5NK0y077ZncOdysTw9ZqQNJfglykcBZ9MbtD2BhYL4kk6Td3LA9vl0LShIG9jJzFnq5iHyxf7UZQmjn+tqTW6HpphUhjmlmXkWOzz8XLra0dPNhb4CpeBqNyN3vexLbscVNztiEwQu3tTauwzSjBWX9QDC1E29SZpO+WfiR6vavSBnFtkvhGIOk6xzbMavHCkQLMvnvteSpReKohAEWT9txJMI1nh78CJ/TbIS6zNIPGoiX3uAFq0DCzfL7xVaO6IM3U3o/4zu3HJYcxTJIhPZR02dNwM5kbtJLUIx8v7M1K15v9iftKmb6hmeZggt1AfLwbTnjQrYRFXT660yTbwchjMsX2ZOMj+UFzlM5A1ogHapOdZ4nUsMyVHXHn92msKerkc/XKym2clz4lGmE3STk/4C1mbGnHyPTA61QGQGB9MYbUrdeM9xy6rWfqvnVTYjdAMkfOPM5DS3HegqkZPUXtpD3EhlJshZN/hlZc2bYW4z2GDpbvQyl70JlctTqJTg9IlmYR76mbi0ND40Mf1ZevIbPp57lctDNRXL1+ArhcSe0aqeVBLhzrA5VDd0GKY7MdDComfmfT6OsQ5ztRGZ5rgFYXE1Wpa1rWxzitIcqczf9EJ8R7+nzAomR5gaZYdt/wR4AusOgyyDNyaF9Wfr+c890IzHJIUyVcgCAdDb1Dg6/zExsYuGzf4kN6JSc0AFUsATAl99pXIByCXsciMrl5aQMXJ49pUPUZUREnHFdDuBx8QWBb3Dq90PrbKcaHk0vZkmaObRZ6KRXAFIKU3WatZMSB77m/YM0i1fMfcLnev6I5v50Pmlvw+VM/sn94G6CPY01Y/EWSgKzG7WhmqzyOCJ2ZmA1pGaqU5RlNNV2JT3uKfWd5KXhzgxXYCxvs93VO43KQFyzA2Vk07NRQ1SKRIR1/tqweR2qR8zjlPmdJClX8IBwCwsZDvhnoMqfAo9ngewFEEVFFP8xitFgyxUClKcEoBG/l6tSGyK90UjxFyirYWz1arCqsGPks2XptaZriUGO3uf7u8lrqyPDsJ/xHPAeY/fcE1Y7z561E9RP5kZ4HnKz81PZVN+MSx1+YHcxf/eAICgx09ZOx4cWRc0xiC7ELYdJ04rT1czp62bFZNb0p065CnIv99/6ClUNz16jnzUKYh+KNESVqvAk2qmGaWfItkaxilSEfKtItLISXzKtQfusK1ssbUMz1ziL1lwp/3OSHqkLeoztN78RgbekIz94GGlyB+MUZKfVZIm6NrBrNGRpV5oNTyV204ttUfaQgTmK7L+cIu9KY4kIiW7eIjA32ivrwizYkTZLVPGiPu5WmiyMrj9EQ1DBuJ7E0W/oVAJD0PP8PIyzyllWeVC9Ht6NI+k/4Q//5K5kCRXKAbKcyocGjNT6jDvufKBYdYrzbWRj59TH8SWc/v+14TuronbORtoPWJo+hl3atP7yVvO0B60rh1WZPjTLoZ/ENVsbe/IAzVT2arVZVItt/GuqyMLyswpzjTKH1iiV2Qaz970aaS3aJ1oIrHspfSvXsFf0vSeQfqhWACZPB+u77OVahTMJYVo4hjtvg/UzDtLmPZWIGaZFHZgIjjhHG6ijJSfiyETdyQKKXZeOuvtkTkAZAQgBmXH5KbYwjOC4dX569UCO8fdi7hNcFOaoCvmLwOVbPk41pBgJGxYKdCYNO8G+ndzwlewlLvWtJYRLXhikiiwTAtJ8LCX9XxOI59if2uMvIg33p9Dgk8N/JUE++vFREK2q0gFkhyxkqCAE7hduI6MckoZeos1iea6ZjEtrnc5UgkgynPKcutulyzwMaYPTlEWe/mF/OfbQdqSvAQOgp5E0Kj45Ch5SIzUTS0mz/IOBHpmqb0uyvtIH2mCI+t5c/XikdOUWNag+4lVJejfYRaesq5/5JeUdhi0mDriq9Y4edrgsMgedNeeJ2TAqxwIj2wbW+HXkaHf/FgSY3YD0ZhWaA8Ttp9vJFIU/pgPmV2YTvE+Ou1V/qiuDPrVa3lG8in1HswEoAbKAYlRTt5H51tqa4OQl5W3uUvuFbYMfsD/m3yXwthS6YH6QknUYT3ZEGtPxq2o52Hs7rTew7Ly0uwAjRXdhgtRuMMlZCAwheW6g3qRjGEabUf0qInjbqJfUFNDh08QTU4fjPGVwSZBh2NMmXgPo4ChjCOorqptrzzSckfpdJVDsALnWjlB+3j0Fgyx262Y+PR51NkYTibtn3o+LxX7KZ5D9tSidco0gEqsMrBGvMnba6dkSv9Mzr59XWbZkBSdOrszXq4tIHQcbeJ9HqDQNURrFespikSOtOHoIrvxYBQwexEAw35/kCc8vpurOjjsj4OI3ymy+dv/ClOB9plbU0IINzml0TnTE2j1G/Y0dpabBh3jarHLM2R50grU5P50lokU5ijD2ZBv3xqKvubJAzvc2j/5f6vC/T3ihsIdqJ6GtNssh0iP1bfzgBQnuHlRCmHYJVnXzarHj0gcgDwlZy/BTYlcnKmI938gzcG2olcwptir0Nzq07G/QO2gojRtfatCdt2F8yyBCI4ueU8HspEH9hwBcWf9Ihgb10gGLBywfBBqhsu6f+fBX5f8RUc5cyR4rY5cNuohLdd5M0PRRROoECuyhvAFkorwm/vmypHTauJ8V0eTi+a434K0i+PoFSbLploYvsL3m4dHt7ToZnhuYqbLy17SD/IWzB6yR3kIVEUl7SJSdqQ26uSKdr7oOvoI/sWPzyQ5YQoYoq39NVcen2KF0d0mjXs92/1qSivlkjjQ10MZ1gyuVMSKWWTnTodtd6jz6k+m9ADO93uQblJTf5p2DATinmSIFZ7trq7rsCk4HjjJ4Ap5YH/VCPbZyWrCArc6uaamizbVdEMzHB1MAMzeBzavkAUjfvN9T4ld8UueerMWHY8kkzjfv1aQxcoF7F9kS+uTNmE9TK/N7psVbs+LgHNq6fWW/Q5evdgF5fQzcE1XiaqciktTS51ucFD9nm1FpAyi3pxP/9pU8TNAvWyWIAha90jXWNvnhYrMOJdM1IxQ0mz6A/LGH6lxq9MeCR+aX0Yw/ZJR5fIg7qreKzzau3jyTbKz4YsEyhVkGltuA3HAd7oVvXOk5GmzZlQff371rerft5CtpLFr8ve3fcBZYC+V2b1n2Nfhgq74sO1Zt1OkaAr0ZWMNqrm7Zmef5+e3mDy3xf4Xvs/dd8NmwDmOb1sH2J5ZNFuCwEgg4WPuSY0Qk+CJOueW2jMsrPTb+NJhEaN6pTJmC5tgO34CmBHGnAQInebbjqUoc0cqjydwETZasoK5WRzxqLD5m2wtI46ubzEWz/u7dK79tCspwV8b9xcHwpDtJHjT2XKcKg6yxOIJtfSZ1xr/kdDWXoVsHE6xBMtTYciS6e2Z50xsmeWRJexgVJePbIrXowxkbcEbWKrQa2A/DJH/yxJ+7mhe1a9svvTSgX0ZVIDbsNH4w+GpXvSoF/CmmJyROqbPFVjCefzplN/POmIleIMjeRoxFOFS2bRfGaYZabsBcQF/WWf1LSKV38a2zMnwd7EfYuZMv7WhB3z4bUFXKI6BMuc5i0feaB+Wc1Q378aGRPhpp/9sDtfchXjXuoXqMMaGNc1zxV1L+aC5oKn15vQU/7XUSWDPp5ZOiD00xY3nQ54jtpjgvvIN8l5KBIAYdMsYy+3b6mwZpVgNCmk/3ELcWUt7SO3M3oI0xKIur4ms1zOCAPpMYJQH8uoDM2GBb+76uRBCF+f0Nxi0H4QV8ylLFiS+jf32zhXObtP6+U7k+zAU3XB+xQ9ZSkLxecB8rMLv42lHIPd4dOHeh1k+yrI1KV44jGGXuZ8bRKdtYUkoNZRkvGHadLxoy1BlpZXcG0zbqW3GZaJPJ35qPdNaEZgkYk5M5YbWT2+8iwsFyDKQjrR+iiaDLovUcDTYrtSeBRjECMUkER5O11fiocs7k11UdJkhP4hPQ6Ptn7bSAE7Stip4X955Me4r4pXhwFoMEfzSrGH7YoYgv1cYa6+D1c314A3OY0pIjUBOFKpcj1a4wm8MTpzVjNwFLtgctfO/hWzybbTqEQZzg34aYUFx72yeYuUxvIsgjMd+FZQ8ZUejyjM3HtQyCUtK9bAytq0Y43kdDcCrL95xTvrunO/qc/9E3G5CLXxMW40ftf1zr3U5iMdDAcj9WOzAOLStc6Aw4NN9YaSjdfQ2TIysKgUpUK18qu+BNRan/Hawd13A1GXlZ+tjSJH301xL8rTFpVfljdu0SxSfsK257U8Mbq/uEYODoNKpX4GNjt6D3lLQ4nw+Ig2LUqFIVbUJNXZuKpSM2VsvvgvhjvEKAZz0NCKNUUsuvvMK0Ss8/Ppr/Ko3GDGbTZAN682w3YOhVj9jBTeEOTkB6N0SGQ5LEKV3YJRB64jXP0Eonwk1ZbstfLor+bopLCXJVg+iwCay8FhPKd62b1ya3Ssi+tBTvjKVIO02z/NDTO44xigivyjQUQf3/phDX5/PmWRVHbGajVU7JhjZH5zqXSVFSD6w0+vk8CHeJ3Mgj3wFp3HawwlKVv82PHvjZFAKmUbFQtbiZBDCW0IStU4zhm/59l6qOZEDXrO+mwax5ZFWAE2lGZKwwgokEO01Pm/V5eACAkgSc2E6pnKFZLRwJMR/jRVvYna3BPdslgCB+06ZR82+swrNQs2xYViV3xxjEaYY/SZjSg1nmhTsZ1ZTqh2Tv7KyP7rPu96E0s+8EbSlHbKI9fG7PfIMs9jmLdE0BtfSw2BgeZtiLqhBjZZKXsQaWPuItCTgldbiFqWU8UmN/v434SrpREKvO/zy/SGls3ifbAGABbkRBavrsiG2ajGEREuEK+D7aXZ2TflA2CnmfPb/Eayu3w+NLiU1xbsuzne1Js0CAhAu5VBmaBBFAiwYfOLRNCTr9IQn/ZpCoYAK3DKWlrlxEKMzGh72YdhGwo2K3eHcdGW2sJiAGhlcqOu3UmbwL32A/VicDl/mcMVHO9jjkjREU5FHgNnrpt2tzuofxKBec0kNw+UstnZHt48NklRAfazwj5nY+TV/GDNSdO6MJsS+FhKDCatdIc7bpAXSF8lrc3I/V0+PkQIS74nGXgqtMMK46qLvggW3G/PIUBJa9jxY9xtfdfpqVLpy1KaAUwPK9MFT4+Pqr7PNkRLNRJKwq74Sp+94Qt26NqHc65+snEB3YtfTLQjT6YgL9YxcRrBeHOxeIuanxoUZoDJbVDs8kyMZUiOuHAaIm03RwN83MaUh6y0PtWx+BWiBbNjjSNiPBo5g2YO78r+Ka1QBnc9UMPWKfnperFX2/FiItw1weLkdqL5lQp+JOX0ZTOMZvTo3VGd5KFe8gwpwe3vhGL1mAjirW1PAlJd3G4aLWYmzMidfg7LGGAzXvvh2UC6SnmWwDevAPh5rrgLnUdjosFzG7onvrPJDzKrt0Vu8WiAWE0SITS0rZlqwIovXm3oOAoBR4uEXpglkiIwbKjzsNi0XnO4j2fU9c1kltJvkLtVUufTdz8IqXGZIneg8qgdS1MFBdEpL3b/1d6mj4szx8DSFxIlMIohmZNCLB0+LndsW2x41NicAaQr9EHrZTLY/F1gYA6mHgoxqt5vwm9vwWSp24MR1wQ5ynutWCl3pSAF6mUrhXNHTVb0IXjT/8HLdd6BnBm7Tn035vVX6J3gSwGO/pHIRRCIdVs2gN1eCrQYe9nFBNn75WICL65FfNI994etC0ftLVi3MvOBaS5FE3256RBn11bib2bQDGdsGfOCd+P+QlTNpit0mVGyPDqOh2SQWVvg7ba5UX8sCH0vRYrW421tflR0HUYZOYwnmlEj/cmXX/8/2gNve89tanOEYwxQ5UNKjM5f38ogr7pkcyBrphwE7GiDTq9kBdqno1XdigQWTd2E+po+m26ciW3YzS9+yYjxAmG4W8+WrW4SSiWW6rvqOo6dtb8hp+ZdVjmXLfQwOlQ1CaGs5c+RPCz3hDpFu6REXbZGGt0mc95TfYxu3Rx2OnY0ul6pBjph1gzcsNa+7fbP7Y329VKVc9nk8MGvQ+JFXdiVguMb4It6pZKIyuX6Zn3pM6T8/nNrFBkykHIcGdehf1VYvaixHZ8lk+SdzI+D3yLKG4bfO1wXK6I4v/5RpdE6FOqZ4NxsbhZsp/BpPdAUk7MVyrD+fIW8AJeNff39AXy5sKXoHS4AZUkQntSNnFsxS5Os1hsfZ5qLV+3jtAjUXGGk/4vY32nHVe/SujDZ8yOyva5ObFXtF7JZym5yeyooQ7LoX5cPYGIvTDlMdhvtEuC8rGuVVBpHLoTaeyNKntvyp5xCFefSeCcRhjLNkdBbQtClCcrxAqVo00j9CuuzlI1qkbWRixLZnHQRAlzMb9UcqNuO51IK48QFsIlIeuWQbJc04PWqkacTZW6TXKhLKY+rN3g1zgiMNBf6zxDyAjJxTEoeldTepSuTQgf30urDeM7epZa+5VAXuBI1cGCUXvLSuo9xcpPTNAeVmeSD4zbKnUlS/WAVNwATqsidDV2vjkkN38IIYXTEYkQsmQMnAXh3x1betwmoaDGHrw//5baf5PAzi2NcH7OC2VZrfKzckhpPKidBD4YroxyW3Y3WljJSWk8ST/AmzaTI76+MbupyWQQQDtj//36jTraU+g9KPGxUxf0cYxZNHFYfbEMULtYC4PDoH1NlDc1BEo+5UTDl7/tqyJxb60QxOwia8FoBmIliQ3dYrZXsTrUNF80i40hlgs++FHeTzAcmxUKci4cIsw6oO68MncCiolJju3YRzNQv0lZykCFbgAit2/SLvXPzIzYcGb5h97SaTnH8Qfy1Ojbu3BrqDMIa0wSsND9tEdrydFJ+7qi9ni8v3Zn2bIa5bjF2FN7RnWyMQeeOVgwwdVTCJTsuyKIZu7JzfXNkPRMgSe/ZiwjRMQiTqL2h1LF0q9ngKISRSMjXSpmJpS8nu3gUGcsFyjAdMdWBpbdXWiMsLga9bJ27dXuqYGJ/srLqdWwUXMss+LWQvnsKc6EIQSZ05I8TqoUmUB4L9uemvN6acz+4NcAV3GQjV1W7tca2b63zMvLokU6ImmDWJloM9jE9SjI77H+FvnlpO9b+Ggq6QFx0QMyoJk16UylFINiXq0UZhXMXJw9Pzo6aUJl+IoXHEngKBS63ihAuREOvzAFLCl/UlQmT5xtTjUohCBwC8Q8FcsfK5D1jn2odofimeLyb0viLB2n/7PAV1UjpRk15KMfN2LyOIkI+GfObyvjpl0w8UN3hXvpH1DDdAfo2VM4BOm1vCg156W2vWuasSwYBTJlSAnAVxBhDn8QCmQwZvIIACNWMdRKrlUMpvC5d/U2dKE2VvkHS4i0pcuR7x1A0xQ5v1Eq1AqXi8XOHZ4TEa+qzFESE2rvRv/GX4LQy5gYKAu1+MC+325eZbh0rb1WB9t+eDrw7SSLS19yLTUTJtGg0PxEPcj6B4qSlRZtzpnTLgLE7SNhIf+ks2BecsDxCKA5w2g9xdYlD8Sr7JFQVTAINfhtQwcDtYqSiiORsvNTs03Dl+fXk5FK4ZpR0GhXUGerM2tQ8Ic2+fJUhIWUO9LhhmvX8utqebe9Mvr6vjWPlsnQLTCmC9iIrO90tQoxQZDvzRz18Ej31hi9eYe3GPr2CjNUQzh6/Q3mCh5HvN2JfaRzgOc6lJgIefhTAfxnJOGNYNtikwqS+uG+lxRSSpYKXtfWQHJZyxpSb9LKzgnQVuXEW3EB7iVn0U7YJmypUJK2e94eK/GXqZ+KPmPoRNe4CCm7duIDz84TJvgrv2dZ7CUYUD7nVaH2WYyZT7PRjdcOkws+JA6tQ8VYCrblOC4uWcit5AdEvgVaW1SRYl4BEI0HXl0CQD+RhW9LeS2AHl3HmjMtf5xkloHBJuVkAly0OatRi0zU67e/1Txjph+bHH0S7A/LQD46R0LjDm289LXVi3WiV898ijIGm0XGp5xSXs8FeGm1rBNwY+u58m7l6tgsR0D5pa7Z8eNo7ehs58H7cXRuoEvcQhwZllkJosoDDHOGutDmeCbFNyWfm4AbcPyUPL1wzor/vwVBzqwhv5IrTc+pcVzEZabz2JusboU/k8txCthFWAnlrH2KEfA1/EExDbacZYUMuPgLb7DjjQEAF3hECPHZjKewRHTjE3assT34EfWiyudMt4BQ6nf1/dUevZ7WB5m08XYCZoIUbCZv/l129XkJwfQBkjRaZ7dwZkvXV5aojs84vUBEi0LEwxWyJUSJag2dE+Rs8tLUnvuvzr8b5/QmElroQpGZlcjyXbJ7WFGJWHj3DCvsbyNso62oFXAlIFqTO3uWIAG79b+h3NooYQ995UnAUSfPfz+9ylyu0HaDnPmHmNCyPxFtcs9//7npxTo0wE0w2WJVDkHBnXWZODIhSeJLOEfpxIaIYU3pcVthswz6IP3vlCKmO2ivnwIuh5rNqHUPd25NyGMdrRXhodvxGJf/kl66D22Oydhb3QQKeGQCyFtp5g7MgwZJlQRIFsjoG6ZtJ/JizyylWAMutDnJg+vXIl9JLfNAbSAqOlJBQDy93V9dd/JE0HLoPDARiLJCqZRop1fTdktkv6Js8MaqiX30kJtGvbUXKrN0IjKad+CYtLW3TTWkU0+gUE0B46Fj6KNwtEjSDjoTSOIR1Mz9dInFTll3Uzp7wAWF2l1A5zLg6OzddEFr+LM1t01E8EfMM4pZna2Nst8Y33VSvKrSt2AGHiGm46Is/Es1sQpVak79pYvqhRp/DrUMYBVsiS/p/cZ2STING4gguPtfDy0KOri1q2fIYQdJPBQkctrK789KqRVJicn03tmKnqGfJYI76FYuUsVJ5HzODJKkDBGhGMg3mOZgCqX6wpPdNeFXnZcEblod/9cG+T0sUWP5kI2RjpSh2CmsawZo0YtitE3qFNfo3sVZKSm7BCZ+iVnJyjZmOm+NWjbkG95pG208lvMSpem9ecInLOnVsPR6dAhgp+psZC8EdHlgpVv40/msL8bfj4MPCpUam/cYGJHFzS7zsr+0YeI8jy26yDVhay+h4YAh2yXau9UfT1PCTsIMDYj5h3Ao6Nv5JtFV+ghxi9wQjViD4W0XshEtmdBs8b3b0IdrEKC9cDBFZDBH3YeUdm1z20gPJDTdydhV8tB5+PBcyZNciAq1KHaf7c/oSneZRL/wC9eJpHh5SZKeAxP4yGofAhEWrxYAHRzVnhmkDsaocc74Ib7g2CiT3OmfZERVNqgtav1p8TsiuC/YB4/NEz55yuLStvgUVqV0KsF9r0zoIacehdeCwn5DDIiXDoErOKzsBi0qSk37wQICX8K0PxKiZChKEo3wDw5IfQ+0Fe1MFIrKusPfX0Pm3uJQMkmX3PdxqJkbPW+tngvjH2k/tBp8eUkAcS2MBuJ6KzqXbHLW3aSrbJ3hgHHwInJzuSdk/ZMMWPXzWyc83w5ohgie/+On2AapP+CwnhwnqFWccDEtmoQ6fH43lZ7L/abAef9ovhvmiK8mrXcSXX661y0O+bDftQEZroFn5Q+Rf/Ti/qeouslJNCuGHNLpqk6/qoNIcqqXidkc0CoAhw1rU/8KSXiGVHgeYMJAg5lmfLQgi8pfAP9BViMahgt1RydedHkxagEgT+Lmmq0MQiPU1sgtEUYzSZ2AmlV2Li4k38ZGMeDN4DdEPU48SQcTnLwEStn8diEtkEPUoJXYQuLPbtcEXNJcVdr2VcuE1ZeEF8D0y8PPE0nEyi5MwbxR6ROv8KHwGVknTtLlNNRpnFHzOymR0KiiS/Iovmmuiglp3frgG+BOy9Y0KmnMTk1Z/4O6lgXfpkiADO4GcfGFra9rdtumHx8AIEMgyCnIbVNB+wmnPXkItWNDja9nFWiV9xeCtV8ogmd3nfCHbI0necI/ZelZuZAyTVASBH+1N1nNb4ULzWHmH2+c7I5mLjBp57YifsoAKeGe9+XRBOzn7D8obrJnMPAloWpUoikZ/0ZCirELEJHoHwGzpc+QIrtyhdUP6NFQGwWcU0SY6LtKVloLtEW+kVujnEcM0wGzr22H9+X3bfYWPqWP1Nk69Pb89tTF0WRNz5IabLpk6s3bBFynqMb/+EBHQ+735Iuvj428yw3z8qimKTTwAMDbzVzweyAngs4kQX/iHwJ5zr5Im60dkulFiicrl7i//p8/Exz3kdrPDyPZk6tEDfhbnR40dcobRXxKgWl6vuF4bcpMMqwZItTKmteMBBMZj4ulgLHCWY3FMIW1PmvQAQ3seyUKdVqIgKQi1Rt9CBjLB59TyZGa9chzYJkzYn4EaUbFGRVgCNU20LOJUJGmyOeDlcQ53NJI9IAqzVSXmAGXGBMHs+xCVuUpO7k8/IqnnPdeWhN8F+qd+ZUWr4CZQRQOEZ8QWwpTUSuj4C+7km7ImwdB786b93VY7tYyxb6N6LEgbl9DV41Li+G6qKAOJvSg8sW8WJpdOPNOLXYQ2hGdPc0MA/393szumxrJTAS4YAj6Zo4/BXwKqbUR9FzcK3d+Km03GlgNVkIhOdIgb3kSlMvuQB7x3ZxRqLipQFV9/jScUsxlXS0scCPTyuQrWZM7vItOFOTyIPq1QBR8MgfpOAoecoheg5QfWCF7wOEoU5ZLAhGVgq1GXvP5/vJ/yUbv30EaxXuBr73tONLuKvoIhO7zBwwphxyeiBIm+dLf+kOiF3qvhmVuFCTyYa4uBkvLzr1Uly1uwBpZstI/zmQNe/GUZzEF8DB0YvfavibnfzrQAhvRiMIZM7N5KpEynwPfV9HqOeu0wyWx30YvqXyTlQgzspZ9dyk8Br0Jk7GNvpRkDbTh6FshhQt4FfYPfx3yzVfxtJtzDslEdsbBpixmpMmcL8KFM05r8jC+UeUgGPFTu55kz8gErUc9rHON6jScpqVriYos3Qi/c6MaW9giIbvQR8zrfDTV5x/Lvcb4PS+/rCsu9waYy3FcPAEgFuQGsvCB3R6qFWYImsTcDFgn0jFzk0hReWG9DSga1q+w4l6VpFZ7R5Pcc40bxiM5vLdbgnMqpYOqiiOeC1usLXH71D3WtQfEsTmM3/kS9FJY7w6Doddi5ZaszIe8+bi+qOPA9XjcOCn54nSuSIiRbER2lOUu/H1YDABRsEjoOc9a8Ll0TAVUrYwrnFHxRdKM+YSD8n4DzeCZP/vHEpSCuAIikS70DG+sm2R7taVVa9sV4jGqIhip5I2BEtWWMAu/hw4dVmtZ/sTbu0kCfNQ2aXKoWg5yCbQ3rK/AwOIfyC3f1U0e/j51lY893PzL0d3qjC0Jqg3psozytqSoBn6rIuoDtNWU6S+2DzT/U14wIhT8s4E98nW16s9IcLEQXI2izQuYbbvmOtSaTb0OzFmKRS5WiqeZJKxXPbMI3G7/P5mADvKP5dTE6lK7arwN9us9cobLQmhLXbQR3eEYc0JTrtsSDcPtqfUXZfwXDyfxJRCXYsWr9EBY4tvo5YaJoy7vv1t3wlnSAldqh0qnIwq7L4Du9j+USUyhoNCJ2QmCMZmDLy9GGI7/y+1VDLKus9YsA5MdNBZbJx0b3HFnjQfLWapso/PaKqw1VhC1jdecxS7NNzC6UqLKKCZ0xum2KFeGlInmiBkurjueLNxJ2jeTnvCGpykk+HAB1/5f+6pAA8xxRxBt4rPcwG9vFMiYBCE7KlbvQOD6EGgJpp7XweAPP+N52W39AkRBKQcV8yqvVJND9T1pziJhYnyMOzAxit1B1fgYU0tHma1Bd172qWw6V8/R4zwzJ8KM7MOX2dLVFu9XNfOO5mdKprlkN2luvAz1JXRJZwIQAfKDx+HRykbGeCkQQRXGV6nBupSMu/2ov7RjJ3hajDHus+vcnXlZeub6xWT0ik0RcIP3ZEQWz1gg072V/r7Jcu9E2f4AW7EBmDPIq7BfMEbhAkSpHVt8puzM0f5DHS32Go48HDadoog3QPKmxD/Q9v64OKOM57bPHOMeV1YcEgz5n8UZHMB+V7jpAivS1DMasAiQBm8GQGF5lsc88lw+xeaRq+KigRd/N4RiVf5frNyFTmA9au/envB5mCaDexZ5LSsQ+BWDq9o2o3W6AwNanMxsvBfDhheWNbcUe3zxeHnyIXdpr2pLb1m37qwMqY0k3pzUsDdOH5zZRNLmswDg1M/+5hBG9Pf3OuBzYobAD4qeY3V+hEhysSkHG5Ez2LAvWIwnUE2PhWVhC9fTCvuZQRw8z+7blvEYrHEzS3XNSz1+g5aWhSjmWLXeklQS4GlfAZbUn2YNz9dqL8HZh7XIXPnlxHEq6v7tFuMZjNDaXGKfUdMSJQL8mJLo1wB3E/I/CM3CxZSbvxiSncvQn7h3dwq0LryyMO3+UglF/Q2Kl6xepVr4pLFQjaCA7dHOTFER4wCtbS9zuicazdERYvEu9kWCzRrCExsDV+Z34lBfHwZc0hSD2wTFecJhhG+tRvjGSbjJZUDvw7mPLWZoZEKyWUFHNzoz757f81xLqo8SDDj805+/2BgxLROdHb7C1PFm0MzOtV3CertKRMTrwzp5hRBBGQrbTQBTFVSEkZREev2cRLQqhnozq1cZ75RXXoalpbmFI5gc+BWiwC/k/82PFlL8xYJdeACPOSwD2Y9rrhGNSPhmYxjjhmLR0Q/1x8htnOXHKMa1rnGYCSinFNg9JKx6sh49qKK0dV4R/8qRGpNbeiIRQDee1arHWph+ws/cevYH3iFv3T/hdw7lJPW6fGgGF6qhwQPQMWRPJSsOaelPBycUZt8PD5fA8sFbH8R1dyoRNe5A4zSn97g+khWKI3i0BdHXbW193nPi+E6cZtxow3Ts4GSZBr8lUQV7NjlDRUXxrq6Tlu9oA2chCPuBbh0JfFK/KPTP0PRlr0k5rseVpqLAYT7LhgTM6HR9ViU2X/1zoz8R2rmAY2ap0pWOX8UJX6Lzi5vligwra06kFM5bGsZt4vqR7WgbgybECLH8s7rAPmObQKu+7pXm5ynlvAPtSUEN1dcLspZjej82wFhHiVz5zkt1VXMZbLTLGjuFVXd9kWrHy9NPg+TcpyRl50Zi/fFKUq0Gu7WLMe7OrEDNh0LVcjfPlAmuF+R8gZ21YDkg3QFlOLP1mM1m2l0n8LRkEsEBZSUhUx9M3Ov9o7vdpRyoKB1oVlYg6AY712RUYKgnV6ivTnh8pFGt6/b81gM1Qs+GUXBFoq4PK24eFE5CFDcF6KqQF2QcI0Kk6Ic3Rv6dfRaf2kfRW4rr4tmjWpj6BPfioOPEZk6dQp9SYJFHC7ZScXhehE7dRfp8xE7nLJIRy7dn1ReX/z2/NhQHJFcIWrWomp98zIiPd5NMoD8kG3kr/4wGbzRcrbu3aAxdZKreGiWFJaM+7YTPXZ9hnar7zhPBelci45caZwiGqRJsnvyv5Esaqx6NdCqi/vuBYiKqDKRDAZnWlN7cZ4SbF4O9NwvT3t2kq5poTPMsZHQwvQeYFfJgQqbSgyY4LztNiJNRD8sVE6ZMMeIpmJEXer09hxaCQtTfwcLa2jlel+p6tXIjau5sp7RNadxj2AK+AGow9T82T896k9T0ILbhvmWwkm3bFKx1UdQf8G1y68cfCPI6z+aTRUErX0+xgI8dYa7KHX7lTuy9UFcw/P14FxBpgT2jgm1P2K+R4Hyv2lUmtu9LDc4Iz5SjWg8DyHH/u7dSjDnVM+XGC6yctYqzIaFM3UGolVsS5Px50zuhcpYhrnfmoSYZdwPyq2MGY+sm4YukHTTHxOm9ZKJcino40Vub8720hMsoCWTUv/zP0QmjLdQxqDz+wO1iDu9aOsd7w14FY7ojrgIpZMs48MB4xEJwazmA/g5tI0DsE7851qVWtndzdriQ/iqdfHgRqQkQHOg57LpBokReDKql5O4enSZxoPeYhjtc6hzGYHDhYKic/3aj/4coafqgK4KBeJTuj8pxWiIyz72wuQYVilyi65M80O+mYR2vntqDqBrPo+p/wKBVIKVTnMjVueUGg45SlFOHTx3RRMre+Dxuj3L9Qx1ljG47YC6aYBGrrJ0sNqRz9cdGWPBGupGPEEunMU8EvmccmtwsCxlBRXP2fuMVZ1O8DgUrbNZ3HDQtjaszPPiSJ0Q4vPzKZrzrdTtMGjNsJ4cl2pbic4zw5uA5BR4fk6mJoit2t7MnG3+eeKkkxGkxBs1lceiKNbU2ppBQrpTD+o2UIJIMLdlhf45hnGXK6EtGCzLPUSRch7EAQORAfuLOCnwmhCFt/Ccj0yEdBBA/baBJMZs3HOg8pWtfOriZ4gGF+bHsnZLfL3bAVD78pkDf0Eesj9BBjOzjDNBZYfWZACeAA+lSRCYUseOk+BzRkK1P8wa1WdF5Cdyk+I2NjYy+/bJBUkVnrM08nxLE/JmWQvl+uoebOrFHw3/17Jw+DIi2qAUJ5IMI50W853jwbzgdJ7AC+nQnB5FDQTgdLXLt/+nRSMQGdA6r5aPItm0+ERTYc5o2hVxQoaO7rMuTxCzLeX4XFY/Mmj3ELiDpuXPjmn1mYCWFuhlLegJvUYULTn8nmMChwl58Yu4ks30ZdHIF8k3G7bHOaoNSF80UN31FdcbtXsm1/1rDNpL7ayxx7bj7VCKPD0k05oZTvF7WXQj1CycHjSyANTB8e/L1aNbuJthIIIvmtj0XH7cEGpxywvMM0I4d+Eu7Yhi6PquAZ8WODrJVGaFV6dE85aGGq+xiMQPGpRn6kevjGuvRxPa6TfptxfY0MJtn7mlD49sWXB9xm5brZr/twOglLxFUnIyCigSQZZ+3LsOeDQk73zIEyRptgZtCPpl4MJUDXAOq+fzriDDFRyuwonjvFhSFZkznMjjgPCpgt0CgP8MjwJO040v4lLKeWgdN4aFR5pZFA7RchP9m6/kzHpFysj+BPnXlQeSMc7gZevRsOt8/JaGWYMY0JKTGCfipVTvqG1sBiBYkFxgyE98rHkYDOFIoCsPKNWx55NxmDIUF83PJvKljJkU5Ll8mSkFtB6YUBOQU/FPEAdt+wqBuQwy12unxr4VtehxTYFB05UVmfPB8iAeLBad+TkHT1vUtD/oi7CZRU56JRbYYYNxx6hoYUJyXzR5fKHjr9MQZsc+nmin0BPWr20CD1h6+VAidcC3+oeQk5KYGD+5PkONiV1sOCmBoRlbXnpVvREIcC39NVGNQhW1blVFV44shNfZJs/02YXjKzugZ6HDTzN/f4WcyL0XXLajDpneWBFVq88NeCA7E46EdVKVHAojfC2T+HkEE+DASrLWvzjFmu36oJp5v7oQxOtPGm9rAkQmuXW3zsobylxPYndoeUgOrb0Rt+60w7ueBRrSSYGbyA4azMZ5b5vi5lf2qhWFelN0p7SqjHu9KkjsuXz+3haasCkI3yzfWDZU0weVOz8UqZZ8ioIWjerA15eV+zOY5Vk1mrqDZqt7JvKsFntR18GeUcg/kuMxnNHRpi2dMbN7dsqYnyLKdoUgZUVvNOOM2aJKKenvJ3SMLh/uCzhUKk8zLV6Z44P2pQw34qkmj22WQBcnFQ03WRMHkyJPfXRUYR7OoUimBIkcz3HrdCBrrq1kiG/W3JPBoVLR0nYDrgw5pMUeVXlOLHNAI27KhM48ohKRnBRT53DWTez55PEB/WPgdLsIe7ezKgLDtiXvt2ElJ8gwNGzMwn0BA4G64WOLDOOLKWWFugCKkLcGWS46f3J9tRtQABGnYp7EkqaLB+8SSBv8mjloRNLf9vAZSVFg5p8At99HsNZRGAzHB108Ix2B9ajZSXJNEIPZCQfTl/dZ5iX4u3sQrvlwnvIEEqGXY0gyoHZWjJBTRwPtI7Ip6wQbQRIxa51ayDd544dnY0Xo6UCKCcvxmPdWUQCorqqCtdr/gDuPTaVWL26T4dcNEmDvgWQ1JuiyKVeT2dFBAQsi2TqMcpCTZazOudERqiz9SpPiy2QLYOg+pEsL2IO03pTUSi2iH18sIhmWzVxl/1roV6w7PcWNvLoG5tXG3asNW43ywDkwHVIqWQq7X9EyfL26uO1u+UEw7vR8LvHGHYclc7jCc9XtRS6r6eFD5l+zD4UvBOIb8HfnsDeo0sAqrm7gpz2WhW1HxKb2QZCwgK/s8Z7IZ7z/pICBngt5RsAjyhHHleFogo9JkyTRjsft4l24s0yDh9te8k+3cYN+mdN7Oacw6x4F/ssIMi47FrE5iRNfFk0nHdF/wqoex11nYqqwnN9ApA8Sa+upaA54lxW/xpUoH77P9mM64ViE1IdJxS9FxNGuvcOmoXg6ORyVjit10ZV8e3rXhrBoVHLx4oL5qmIKADkaT6zbB1tv3f+7NNhXVYc0yseBD6e7qFO6lGVyGLoD68+oSQ08zJoG2MAmsJ3TVtol11HjdwuYrf0/KClGWM9DDeL6HZHd9u1GbtAXhjVfjj2uRI5A5+l/CvBKcovgzQ3fkpPuowiAlRi5rhqpjlpfrpa5In+ZdpprBroJSaJPdzr+SI+C9XacjQjLK0lYA5n0DABRUzRS4WaMQcZ5AtmZqyyEmzw+4XjfRw1xADtXLepYTlZDay7oA5kU28K252+acu8YUpNKd2jR5fIjbWZczdOUe90XKGdwNaXgzgylpk48j+G7aELf8iiD+576n0IaCp0JQgXb1+O1FAtitMXTgAEKm3iBoskG2rXQbeYWYMxJDsYDOepxYTGqCIkTHHeQlSA0cj4g81PkHHilwacTaD2TmIkPjm7PuHw7e3M9l+PgXcq9D1378KWgbtD7uVM+QUtwqy1Xrmme+kFiyfGISD2HTBpA6EC49k9HNWGucPtf7TJy/tREEZzQJiViMC38SyjdAiK0VI6eAeP0TVOVDR3lu7f4vLk2urtCTNAaLLrar1y9VrJH/b3r2jQ4AmIDav+m1/ArAztHGOKjp8CBw00cf/tEfI6iD/nCvJkaQCDy+YjEOr0ilkT7paK5G6OgoSLVegCOMHa6iWFKEDBBHBcS9sfCrKvPnvwf4LBjQHcessKf8++1u/DiCqITJH1ENdPXomHrTAlFLxny79P13GafpgiQH7TUTguifkhBuAhi44C1VWKbPiLZYnwh3Lx8Q3EwXUFcGD/xCV90JGmB1qegNjkJjstZ1Gx5Q13cX/C3SPPg20wsfur6iiiBaXRDm4sRf53JhYx84iXC3BDWfc0wJ4h8g+tql53C+6G6EysSnIoDgvzcDGqN8mAiZSP6kQzoUEpBdbP7w/aguYu45CA9F9sct4OSSFHzwxjnJIJ+Uc0siOVnmUroGsdXJstqF3rY8PDNdGTwbRMdskU4aWO5KeNC5YwQx1JUZAEKqaEpubZu6B3EiIEgl9cygk+XOT9LXt4/otwGJezwnohTVeGCXijYqxIujlo4T9OmsFA6GnQTS2eXUBedKYZikiLTlob4bAZIxk+5fGKPUud2JLPhxMsAQDOhjCrFhul90Nie81qnmWLvIjm+H0KSVrSBZHGEC0PuabsmNZ6PSVMsRebe2YKPFdepaWdyQ5BouT6NdHaQK6/4nkvkcgkznIn6secutqn67WyvlFpIP7haSoAlAFKDgEFKSani1FKgGZmJcBPMBQ2guzRRwf/i4vC/FNWnwMcU39sSEskyLwUWk6CiWELnHc86bFONuW5TtFVMBssu/P4uhB7hBnynCNRqGp4fyDcvvXtacz3tjmEwbezw0y/2Y8BRXybCdFCKR0iH7cADvkc/r3x6jBa50InPzXX8isBhAOdPZNsRCgnynYS1p0Dhp7rUG8CG37O6yliKF129tkx5gvSP9Pvvhc+2ybMvTDi8I5kRwEA8DMqERiow78ydei0DWjNe12u8epwalLLPsP0Zmr1K4e5hxUUaDsXtV6i1kMefI2Cxu4oEsNSW/bzcGO8SJffafFj2JboGYc2+a8EkIIKEX0VkxqhmEoHxeVWhQeOiH/KOIAgqLSwhm0O6VLTyI9laS7iYIvRJPsbGgWDI7UB8POdRZQagAg36GcvnnfenSKrQrFFq3WNOiWjF8VtXx5G4ZMcXcIhVRTrK1jlrzyZkxUl75pdIeyN/H6RsSkAOHmai6CU6KYDfZvLxofqmG3HXF/PLgroZ2OVP8gpEnDdRPKZQX1U19dvMnUBMDgmY7d29BVcKU1aSuhfB2K47ttGXSZKL7IH9f1KDofRgVRucst/g61H32iTbU6q7OgPDPhEk3FpFHEiT5JvSzWrK8eHFX3bwTw9YDS7FuaCfGFcKp8Sr4q65qHTbXQMAroN2JKYIC0NPwcsp+pyJlPmh2UQyLK10YkgMi5aPFkSTCaNZFiDxJcRxXIS6BtZd2em4muY3w0UDGKqrR+hV67Zp0bs37duhfMcELCEdSz8y+nx1vuAjq1dTfkulm3dBFyaTWRyaiLtYvGOhINCmUmBlGqHkH28LJv66fgY3owc4EBCbiIrt3Dznou2x5Z8J/3BAc6l7WJ+s/aoohxCCanLP0maXDjZZvywi5wrqigjzK6591CfiaNibm49cRPmxvuGzTiUm9AYggUwJem7A47QETCAz6V9dimkC7UXhz8E69HpRQ6q4BdGrX8QzoEVMac5eS1iKT2CgJ3udB2xAADrJhvEuoByOpKJFDCNOJ943NlcFabjamHbcFfV/hiBLHfxWDbA92tsix7sOFd9dXAB7DhJ5H9yH0dvO1Ew5GogkNAtgj/pVYPqJcSyZ6pUaLYqAClIgDj0MstWqXjKEr5M79hA9QyfK8DoJx1EnA1pt+xp54Gj8S/eDC02Z+cBYXV2QhzkYePCf0yOHt8SBt9+KtZljJ0H3TSlC/yT2fXKjGucSvz1w/rqxP1s2Mc0C+ktaVqUGsug6w65CiJAC6m5cw2JmP1BbIVEOqRSuVD2NGIQIgE4jdJ3luT9eJVekImV18gqESgt+wvku+P7dZJs9kOAe0VRQ4BSShUQZX08tO9aKhsBF5ZEEWA2b6GvdMe0D4wIZBN1UUlPP4WnkHG2+dvy0rx65anbH/dmYVr0RZ9dJ/3eI78Gur0OsLpUKUoC8ffvnWi2OsX4F1He9IVrc6oGVP/4NNPaZ8ql3JbE/GbbM/k1XULNe7A45odYC39nmKkOyCFsGcaVP1YUqwoYD4wP7Aox77nv6sLIi6pKlPlRI8r+fVj8ohBMRiyzx242rOC9mIDheHvtazA20jemFMar8X/t+hktB4NbOow4YlB+ps7Q+SowVHng/r8z012+UEaME1xMnESVeWqNkId+SRLNhgpO8TuyBepCj/fv9bjetKLVAng6AmIduw8glXbPYj6LnWjpGmo2OrbY4AhTTJj+GdCE8U1oflstrOeGEKp2uaoolf38vYlta0QYSalVA0NAjakTTZVrIPYEC7iYNBLuOSqG6T23YWMxYTQXxqd0pzXK6gXQMrWZxZ0NDQtIXhoCSj1d5sffbjjaq6/UK/0+r9ZJmwFbzLDO5peuO0/O8XJZFB7JTDPx8ufk2FMzNyYKycAZ1RySjFNNhJITPs9fYbuA3ti9MeKb7bdyHSpupmkkH/tu6g5eaD46iHP1ifSe9+TPFpxgDknyhNxLX25+w+u8X8kqF6VNe46k226goa8y1EFoxafFO7aVe332bsiaE+oab7e9LFQt/5vdBG6XuSAD++SAKDm8UY/7uszVySb5PHjYWfN9JyXol/AcW3+m8JWcnWfKBExStAJlmpYnr14Uuh2QddCZq+pcoOIHSLMOOjwH8jJhqk4LqV9rQfcPRoUvL372QMoJ+g3VrL5czvzNAzAKxI73ECGM8GwIeZ2tCY5bJLJ0TVEG/+Jay62DgFUbEpoPTd7FoC6Q9+2FA6uIG2FnI6TH3lofamdnm0qv44Y2bRB1NL4eEq2SY3pT/DclMM6KbqOMTklH2QS07+MZldxfVMEw2CXQP2W5FGDQuJ1FB7k5FVOUUIRtKHwUF/BMaKJMo5PxO8wrPub8gnrDL/XjG9QXaTmOk2/ck+/OlALXEn8KBxznLTRNUoHTHdFENZPL7lD+abOwXO8MzRP+23PaQZNSVBnz1H83rnxKXvJZo70e3mYAMrdHnRWys3j5+lxE/OrIDb7ZQX5kySMTg2jWKx5fGteUJjtX1g7aii4hKyjv5tIbjjH7DFyFX4RSDVc/qirsTFITZYoZj3lVKXLHD2zvj85i96SEOTf0qFcaGck4smMTcfg749ivr3E6CzSVxO/uX5FUxHr/V/7N63dp+mgkU2jHD/5vYlAJOjufS4jLGMcZ3FjHyK4I3KmGsS4BnNT2P6pQk+PBme3YgXGpgYKsUNz9CzVJCswAuw5HsCeJd+T3HOpGPT5jTxOuA+cluIPWt5A+iHYIN6bnU2Zdn4CCVUnT+e5Yf81J2jlwvt/f8O4Kq3HDlfkAt5efvC698LBubY3sOd0NjvPIYsX7arXbY/ewgLWECHU42CSCu/oX+6ci/Q5cjywSWyG3KZ3jkZFqX1EXwZ0qnGMWOu8G6tSR+wQJEB8ksXsJj4urfTw1ZwjINTguZTj4ANHFINKKNDpAlqj36CK3JYbvmxP3CBhNm2eWgiLDp3q0iKNUZohZ+R+z6kB/lXvikMdU9DXmPG5u4Jb3386S14KsBA1mB6w9V3AdY2SRg0cC4ltZZHXzfDlRJUhvXC8nwEljSjDbQoPGT44yfh99puPgBMYJxhhuuOV8t6TPBhWMzzWUfYhKAYKM6FAOZJZ/PjN2wXeyhplYWjRfUoEAHGPgu4nRtJvglXP4g/qa8tpOXjjku++CgP9O3C0ytxPBFeeUSvNCn1Huj0KbHKfBFL34IUo/WStjIqreQLsWtx/XzLybl2b72Tmzh19j3nR5WkH1FII3A0jbxJrYh/ygNbwuetdAUp/VvZAW1nklw2XBKRkQJICaCdZARY/A60cGb4C4lERm/vlHpAyN01kQFOkBWz6tWr6RdxQ9oQw/ZeTvsw+jIbEiVcdifne1OBoPUwaj/CPRf3ZDy0YMICnDq+ZMTPtk1g0W7e8vqWYJqQUTBlcGsyDzWvlE4aqx9C7fYMvh/7ZLU0iKgj4unpLsAXzQE4zYW4XkUdmq/TLHNzjGRROfVCOI/8/E9ToiO468/rG4h/4irY4Qdyansv1jhatYCJK2mfKZRp4nsBy9M425ALv/1YaCaKG1l64hrbShVvd6A+gQn9JR++5Vqlk0sODNtLeGF6z4GiYQvKXsSvCFaDRoQo5dtkBFhlTRoEtyzSvQTlv14X7fTmGeC0u2kNQyBNSk1Hl8UfmQkk3rCUhKUWjnPxbBxO8THBoH9yI+7bJs91yfSC5DSNDvN85Wjd2aydQ4ZS+nwBS61XymlEOvQO3kbD20I272Pc3zsAp/2KX38HH7aoq9isZxrzQFZO67PesbfomTDzxg0cBLYaNadZhrxQvbj52kh1kkI4qzullW1o7w+9OaW+xoT5NdwZ8BU81HnaZqW4TVrEIQDPupiZAYnmWyE5oO1I/J8o9wqwMJX3sUA2PYQQHWMQiNodo2HzdJ4NC+uWcvTtSwcfiUnasAm5IH+PGv/RPEGxSomJgqeK1+pcfrVHpxm2yY25PE+Q8xzQDdtKzoCwe9ITbDYLaNrd/ryn9FLtpjtPsKo+M2HOaNNSlTm0s5FhuhE1KF8Gf/11RtTh2H1WfmNvxrAPAh7ztOFC31ELivZY4S9ofiAaBw7gYzIRyUDD3STJsc4]]></content>
      <tags>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu5489]EntropyIncreaser与动态图]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu5489-EntropyIncreaser%E4%B8%8E%E5%8A%A8%E6%80%81%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[此处题面前言这个题其实没有多难，静下来慢慢写还是十分可做的，不失为一道 $\text{LCT}$ 练手好题。正文首先看到 $1$ 操作连边，第一反应应该就是 $\text{Link/Cut Tree}$ 了，然而怎么维护割边割点数量呢？我们分开讨论。割边考虑对于一个环，环上所有边一定不会是割边；而对于一条链，链上所有边一定是割边。我们可以直接维护每条边是不是割边，初始时所有边都是割边，当某次加边操作产生了环，则环上所有边都不会成为割边了。具体来讲，边转点后所有边权值均为 $1$ ，当某次 $\text{Link}$ 的两结点已经连通，则将两结点间的链上的边全部赋值为 $0$ ，同时维护和即可。割点割点不像割边那样好处理了。考虑静态的情况，静态割点有一个比较套路的方法是用圆方树，我们可以尝试动态地维护一棵圆方树：每次连边产生环就将环上所有点连到一个方点上来。考虑这样做的复杂度：假设环的长度是 $L$ ，每次会用 $O(L\log n)$ 的复杂度删去一个长为 $O(L)$ 的环，均摊复杂度为 $O(n\log n)$ 。最后于是使用两棵 $\text{LCT}$ 分别维护割边和割点即可。参考代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232#include &lt;cstdio&gt;#define N 200010#define lc(x) ch[x][0]#define rc(x) ch[x][1]inline void swap(int&amp;a,int&amp;b) &#123; int tmp(a); a=b,b=tmp;&#125;namespace Summer &#123; int ch[N][2],fa[N],rev[N],val[N],sumv[N],mark[N]; inline void reverse(int x) &#123; if(x) &#123; swap(lc(x),rc(x)); rev[x]^=1; &#125; &#125; inline void NaCly_Fish_Orz(int x) &#123; if(x) &#123; val[x]=sumv[x]=0; mark[x]=1; &#125; &#125; inline void up(int x) &#123; sumv[x]=sumv[lc(x)]+sumv[rc(x)]+val[x]; &#125; inline void down(int x) &#123; if(rev[x]) &#123; reverse(lc(x)); reverse(rc(x)); rev[x]=0; &#125; if(mark[x]) &#123; NaCly_Fish_Orz(lc(x)); NaCly_Fish_Orz(rc(x)); mark[x]=0; &#125; &#125; inline int nrt(int x) &#123; return x==lc(fa[x])||x==rc(fa[x]); &#125; void psa(int x) &#123; if(nrt(x)) psa(fa[x]); down(x); &#125; inline void rotate(int x) &#123; int y(fa[x]),z(fa[y]),k(x==rc(y)); ch[y][k]=ch[x][k^1],ch[x][k^1]=y; if(nrt(y)) ch[z][y==rc(z)]=x; if(ch[y][k]) fa[ch[y][k]]=y; fa[y]=x,fa[x]=z,up(y); &#125; inline void splay(int x) &#123; int y,z; for(psa(x);nrt(x);rotate(x)) &#123; y=fa[x],z=fa[y]; if(nrt(y)) rotate(x==rc(y)^y==rc(z)?x:y); &#125; up(x); &#125; inline void access(int x) &#123; for(int y=0;x;x=fa[y=x]) &#123; splay(x); rc(x)=y; up(x); &#125; &#125; inline void mrt(int x) &#123; access(x); splay(x); reverse(x); &#125; inline void link(int x,int y) &#123; mrt(x); fa[x]=y; &#125; inline void cut(int x,int y) &#123; mrt(x); access(y); splay(y); fa[x]=lc(y)=0; up(y); &#125;&#125;namespace Pockets &#123; int ch[N][2],fa[N],rev[N],val[N],sumv[N],st[N],num; inline void reverse(int x) &#123; if(x) &#123; swap(lc(x),rc(x)); rev[x]^=1; &#125; &#125; inline void up(int x) &#123; sumv[x]=sumv[lc(x)]+sumv[rc(x)]+val[x]; &#125; inline void down(int x) &#123; if(rev[x]) &#123; reverse(lc(x)); reverse(rc(x)); rev[x]=0; &#125; &#125; inline int nrt(int x) &#123; return x==lc(fa[x])||x==rc(fa[x]); &#125; void psa(int x) &#123; if(nrt(x)) psa(fa[x]); down(x); &#125; inline void rotate(int x) &#123; int y(fa[x]),z(fa[y]),k(x==rc(y)); ch[y][k]=ch[x][k^1],ch[x][k^1]=y; if(nrt(y)) ch[z][y==rc(z)]=x; if(ch[y][k]) fa[ch[y][k]]=y; fa[y]=x,fa[x]=z,up(y); &#125; inline void splay(int x) &#123; int y,z; for(psa(x);nrt(x);rotate(x)) &#123; y=fa[x],z=fa[y]; if(nrt(y)) rotate(x==rc(y)^y==rc(z)?x:y); &#125; up(x); &#125; inline void access(int x) &#123; for(int y=0;x;x=fa[y=x]) &#123; splay(x); rc(x)=y; up(x); &#125; &#125; inline void mrt(int x) &#123; access(x); splay(x); reverse(x); &#125; inline void link(int x,int y) &#123; mrt(x); fa[x]=y; &#125; inline void cut(int x,int y) &#123; mrt(x); access(y); splay(y); fa[x]=lc(y)=0; up(y); &#125; void print(int now) &#123; if(now) &#123; down(now); print(lc(now)); st[++num]=now; print(rc(now)); &#125; &#125;&#125;int n,q,opt,u,v,last,tot,ans,SummerPockets;int fa[N];inline int find(int x) &#123; return x==fa[x]?x:fa[x]=find(fa[x]);&#125;inline void getEdge(int u,int v) &#123; int x=find(u),y=find(v); if(x!=y) &#123; ans=-1; return; &#125; Summer::mrt(u); Summer::access(v); Summer::splay(v); ans=Summer::sumv[v];&#125;inline void getPoint(int u,int v) &#123; int x=find(u),y=find(v); if(x!=y) &#123; ans=-1; return; &#125; Pockets::mrt(u); Pockets::access(v); Pockets::splay(v); ans=Pockets::sumv[v];&#125;inline void link(int u,int v) &#123; int x=find(u),y=find(v); if(x==y) &#123; Summer::mrt(u); Summer::access(v); Summer::splay(v); Summer::NaCly_Fish_Orz(v); getPoint(u,v); if(ans&gt;2) &#123; ++SummerPockets; Pockets::mrt(u); Pockets::access(v); Pockets::splay(v); Pockets::num=0; Pockets::print(v); for(int i=1;i&lt;Pockets::num;++i) Pockets::cut(Pockets::st[i],Pockets::st[i+1]); for(int i=1;i&lt;=Pockets::num;++i) Pockets::link(Pockets::st[i],SummerPockets); &#125; &#125; else &#123; ++tot; fa[y]=x; Summer::val[tot]=1; Summer::link(u,tot); Summer::link(tot,v); Pockets::link(u,v); &#125;&#125;int main() &#123; scanf("%d%d",&amp;n,&amp;q); tot=SummerPockets=n; for(int i=1;i&lt;=n;++i) fa[i]=i,Pockets::val[i]=1; while(q--) &#123; scanf("%d%d%d",&amp;opt,&amp;u,&amp;v); u^=last,v^=last; switch(opt) &#123; case 1: &#123; link(u,v); break; &#125; case 2: &#123; getEdge(u,v); if(ans!=-1) last=ans; printf("%d\n",ans); break; &#125; default: &#123; getPoint(u,v); if(ans!=-1) last=ans; printf("%d\n",ans); break; &#125; &#125; &#125; return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>Link/Cut Tree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu2617]DynamicRankings]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu2617-DynamicRankings%2F</url>
    <content type="text"><![CDATA[此处题面前言在题解区看见了一个用分块写这个题的，但是在数据加强到 $10^5$ 后貌似已经过不去了（或许卡卡常还有救），难道分块真的就比不过这些树套树整体二分？不不不，分块的潜力远远不止这些！分块无快读无 $\text{O2}$ 评测记录正文之前那篇分块题解的做法是二分答案，然后块内二分检验，这样做的时间复杂度是 $O(n\sqrt n\log n\log V)$ 的，其中 $V$ 是值域。然而二分跟分块就很不搭，我们考虑一个不需要二分也能求第 $k$ 小的方法。先离散化，对序列分块，考虑维护块内每个数的出现次数，再将值域分块，维护每个块内每个值域块中数的出现次数。然后做前缀和，这样我们就能 $O(1)$ 查询一段块中每个数的出现次数以及每个值域块中数的出现次数。这部分的预处理是 $O(n\sqrt n)$ 的。查询时考虑将散块中每个数及值域块中数的出现次数先记录下来，这部分是 $O(\sqrt n)$ 的，然后跳值域块，超过 $k$ 了就跳块内的数，直到找到正好超过 $k$ 的位置，这样可以 $O(\sqrt n)$ 查询第 $k$ 小。修改时只要考虑对预处理的信息的影响即可，由于我们预处理的是前缀和，所以每次修改至多修改 $O(\sqrt n)$ 个块。这样我们就得到了一个 $O(n\sqrt n)$ 的优秀算法，可以通过此题。最后这个做法是另一个题的 $trick$ ，有兴趣的可以去试一下：望月悲叹的最初分块。最后给出代码，仅供参考：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136#include &lt;cstdio&gt;#include &lt;cmath&gt;#include &lt;algorithm&gt;using std::sort;using std::unique;using std::lower_bound;#define N 100010inline int min(int a,int b) &#123; return a&lt;b?a:b;&#125;struct node&#123;int opt,l,r,k;&#125;q[N];int n,m,a[N],b[N&lt;&lt;1],tot,l,r,k;char opt;int L[320],R[320];int siz,szv,num,numsz;int bl[N],blv[N&lt;&lt;1];int sumc[320][N&lt;&lt;1];int sums[320][450];inline void modify(int x,int y) &#123; for(int i=bl[x];i&lt;=num;++i) &#123; --sumc[i][a[x]]; --sums[i][blv[a[x]]]; ++sumc[i][y]; ++sums[i][blv[y]]; &#125; a[x]=y;&#125;int tmpa[N&lt;&lt;1],tmpc[450];inline int query(int l,int r,int k) &#123; int ans; if(bl[l]==bl[r]) &#123; int vl,vr,tmp(0); for(int i=l;i&lt;=r;++i) ++tmpa[a[i]],++tmpc[blv[a[i]]]; for(int i=1;i&lt;=numsz;++i) &#123; tmp+=tmpc[i]; if(tmp&gt;=k) &#123; tmp-=tmpc[i]; vl=(i-1)*szv+1; vr=i*szv; break; &#125; &#125; for(int i=vl;i&lt;=vr;++i) &#123; tmp+=tmpa[i]; if(tmp&gt;=k) &#123; ans=b[i]; break; &#125; &#125; for(int i=l;i&lt;=r;++i) tmpa[a[i]]=0,tmpc[blv[a[i]]]=0; &#125; else &#123; int vl,vr,tmp(0); for(int i=l;i&lt;=R[bl[l]];++i) ++tmpa[a[i]],++tmpc[blv[a[i]]]; for(int i=L[bl[r]];i&lt;=r;++i) ++tmpa[a[i]],++tmpc[blv[a[i]]]; for(int i=1;i&lt;=numsz;++i) &#123; tmp+=tmpc[i]+sums[bl[r]-1][i]-sums[bl[l]][i]; if(tmp&gt;=k) &#123; tmp-=tmpc[i]+sums[bl[r]-1][i]-sums[bl[l]][i]; vl=(i-1)*szv+1; vr=i*szv; break; &#125; &#125; for(int i=vl;i&lt;=vr;++i) &#123; tmp+=tmpa[i]+sumc[bl[r]-1][i]-sumc[bl[l]][i]; if(tmp&gt;=k) &#123; ans=b[i]; break; &#125; &#125; for(int i=l;i&lt;=R[bl[l]];++i) tmpa[a[i]]=0,tmpc[blv[a[i]]]=0; for(int i=L[bl[r]];i&lt;=r;++i) tmpa[a[i]]=0,tmpc[blv[a[i]]]=0; &#125; return ans;&#125;int main() &#123; scanf("%d%d",&amp;n,&amp;m); for(int i=1;i&lt;=n;++i) &#123; scanf("%d",a+i); b[++tot]=a[i]; &#125; for(int i=1;i&lt;=m;++i) &#123; scanf("\n%c%d%d",&amp;opt,&amp;l,&amp;r); if(opt=='Q') &#123; scanf("%d",&amp;k); q[i]=(node)&#123;1,l,r,k&#125;; &#125; else &#123; q[i]=(node)&#123;2,l,r,0&#125;; b[++tot]=r; &#125; &#125; sort(b+1,b+tot+1); tot=unique(b+1,b+tot+1)-b-1; for(int i=1;i&lt;=n;++i) a[i]=lower_bound(b+1,b+tot+1,a[i])-b; siz=ceil(sqrt(n)); szv=ceil(sqrt(tot)); for(int i=1;i&lt;=n;++i) bl[i]=(i-1)/siz+1; for(int i=1;i&lt;=tot;++i) blv[i]=(i-1)/szv+1; num=bl[n],numsz=blv[tot]; for(int i=1;i&lt;=num;++i) &#123; L[i]=R[i-1]+1; R[i]=min(L[i]+siz-1,n); for(int j=1;j&lt;=tot;++j) sumc[i][j]=sumc[i-1][j]; for(int j=1;j&lt;=numsz;++j) sums[i][j]=sums[i-1][j]; for(int j=L[i];j&lt;=R[i];++j) &#123; ++sumc[i][a[j]]; ++sums[i][blv[a[j]]]; &#125; &#125; for(int i=1;i&lt;=m;++i) &#123; if(q[i].opt==1) printf("%d\n",query(q[i].l,q[i].r,q[i].k)); else modify(q[i].l,lower_bound(b+1,b+tot+1,q[i].r)-b); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>分块</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【讲课】8.6字符串]]></title>
    <url>%2F%E3%80%90%E8%AE%B2%E8%AF%BE%E3%80%918-6%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[菊开讲课，必属精品！T1题意有一个长度为 $n$ 的字符串，已知第 $i$ 种字符刚好有 $a_i$ 个，求 $kmp$ 数组之和最小是多少。$n,字符种数\leqslant10^5$题解将出现次数最少的字符放 $1$ 个在最前面，然后放其它字符，最后放剩下的字符特判只有 $1$ 种字符的情况T2题意定义两个字符串相同为它们的最小字符表示法相同给定 $S,T$ ，求 $T$ 在 $S$ 中的出现次数$总串长\leqslant10^6$题解以每个字符上一次出现的位置为值做 $kmp$T3题意求有多少个长度为 $n$ 的字符串， $kmp$ 数组 $next[n]=0$ ，并输出满足条件的字典序第 $k$ 大的 $01$ 串。$n\leqslant64$ , $T\leqslant1000$题解设 $f_i$ 表示长度为 $i$ 的，没有前缀等于后缀的字符串数量。暂咕T4题意有多少个长度为 $k$ 的，最小循环表示法唯一且最小表示法就是本身的串的个数。$k\leqslant10^6$题解枚举循环节，莫比乌斯反演容斥T5题意如果两个长度为 $n$ 的字符串 $S,T$ 满足对于任意一对整数 $(i,j)$ ，如果 $S[i,j]$ 为回文串， $T[i,j]$ 也为回文串，我们称 $S,T$ 为回文等价，给出 $S$ ，求有多少 $T$ 满足与 $S$ 回文等价。$|S|,|T|\leqslant10^6$题解做 $Manacher$ 时将字符相同的位置用并查集连起来T6题意给你一个长度为 $n$ 的字符串，求一个最大的 $k$ ，使得存在一个字符串序列 $a_1,a_2,\ldots,a_k$ ，其中 $a_i$ 在 $a_{i+1}$ 中出现两次，且 $a_i$ 为给出的串的子串$n\leqslant10^5$题解暂咕T7题意给一个字符串，求一个最大长度 $L\leqslant\frac n2$ ，使得前 $L$ 个字符与后 $L$ 个字符循环同构。$n\leqslant10^6$题解暂咕T8题意给一个长度为 $n$ 的字符串 $s$ ，有 $q$ 次询问，每次询问给出两个区间，求第一个区间中字典序最小的子串使得该子串的字典序大于第二个区间的串。$n\leqslant10^5$ , $q\leqslant2\times10^5$题解建 $\text{SAM}$ ，二分 + 倍增 + 线段树查询T9题意给你长度为 $n$ 的字符串 $T$ ，你可以用 $T$ 中的子串去拼另一个字符串，能拼出字符串 $S$ 的方案中我们选择步数最少的作为拼出 $S$ 的方案，求长度为 $m$ 的能拼出的字符串中，方案步数最大是多少。$n\leqslant10^5$ , $m\leqslant10^{18}$题解二分 + 矩阵乘法]]></content>
      <tags>
        <tag>讲课</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【考试】8.5模拟考试]]></title>
    <url>%2F%E3%80%90%E8%80%83%E8%AF%95%E3%80%918-5%E6%A8%A1%E6%8B%9F%E8%80%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[校内资料，请输入密码访问 (*╹▽╹*) Incorrect Password! No content to display! ]]></content>
      <tags>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【讲课】8.4计数]]></title>
    <url>%2F%E3%80%90%E8%AE%B2%E8%AF%BE%E3%80%918-4%E8%AE%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[菊开讲课，必属精品！T1题意小 $\text{A}$ 会投 $a$ 次硬币，小 $\text{B}$ 会投 $b$ 次硬币，求有多少种情况，小 $\text{A}$ 投出的硬币正面向上的次数严格大于小 $\text{B}$ 投出的硬币正面向上的次数，答案保留最后 $k$ 位$1\leqslant a,b\leqslant10^{15}$ , $b\leqslant a\leqslant b+10000$ , $1\leqslant k\leqslant9$题解设 $x$ 为小 $\text{A}$ 投出的向上的次数，设 $y$ 为小 $\text{B}$ 投出的向下的次数。有 $x+y&gt;b$ ，枚举 $x+y$答案即是 $\sum_{i=b+1}^{a+b}{\binom{a+b}{i}}$T2题意求 $n$ 个点 $m$ 条边的无向连通图的个数，点有标号$n\leqslant30$ , $m\leqslant100$题解设 $f_{i,j}$ 表示 $i$ 个点 $j$ 条边的无向连通图，枚举与 $1$ 相连的连通块转移$f_{i,j}=\binom{\frac{i(i-1)}{2}}{j}-\sum_{x=1}^{i}{\sum_{k=0}^{j}{f_{x,k}\times\binom{\frac{(i-x)(i-x-1)}{2}}{j-k}\times\binom{n-1}{x-1}}}$T3题意给定一个 $n$ 个点的图，初始时没有边每次随机选择两个不相同的点连接起来求期望要多少次才能使整个图连通$n\leqslant30$题解考虑到 $30$ 的拆分数只有 $5600$ 左右，可以直接将图的连通情况作为状态，然后 $O(n^2)$ 转移T4题意给出一个 $n$ 个点 $m$ 条边的无向图，每条边的权值不固定，为 $[0,1]$ 内的随机变量，无重边无自环，求最小生成树上最大边的期望边权$n\leqslant10$ , $m\leqslant\frac{n(n-1)}{2}$题解设 $f_{s,i}$ 表示连通块 $s$ 里连了 $i$ 条边的方案数设 $g_{s,i}$ 表示在点集 $s$ 里连了 $i$ 条边且不连通的方案数暂咕[SHOI2017] 分手是祝愿题面题目链接Zeit und Raum trennen dich und mich.时空将你我分开。$\text{B}$ 君在玩一个游戏，这个游戏由 $n$ 个灯和 $n$ 个开关组成，给定这 $n$ 个灯的初始状态，下标为 $1\sim n$ 的正整数。每个灯有两个状态亮或灭，我们用 $1$ 来表示这个灯是亮的，用 $0$ 表示这个灯是灭的，游戏的目标是使所有灯都灭掉。但是当操作第 $i$ 个开关时，所有编号为 $i$ 的约数（包括 $1$ 和 $i$ ）的灯的状态都会被改变，即从亮变成灭，或者是从灭变成亮。$\text{B}$ 君发现这个游戏很难，于是想到了这样的一个策略，每次等概率随机操作一个开关，直到所有灯都灭掉。这个策略需要的操作次数很多， $\text{B}$ 君想到这样的一个优化。如果当前局面，可以通过操作小于等于 $k$ 个开关使所有灯都灭掉，那么他将不再随机，直接选择操作次数最小的操作方法（这个策略显然小于等于 $k$ 步）操作这些开关。$\text{B}$ 君想知道按照这个策略（也就是先随机操作，最后小于等于 $k$ 步，使用操作次数最小的操作方法）的操作次数的期望。这个期望可能很大，但是 $\text{B}$ 君发现这个期望乘以 $n!$ 一定是整数，所以他只需要知道这个整数对 $100003$ 取模之后的结果。$n\leqslant100000$题解设 $f_i$ 为从还剩 $i$ 个位置到还剩 $i-1$ 个位置的期望步数暂咕T6题意在一个直角坐标系上依次插入 $n$ 个点，每次插入之后输出当前有多少个三角形严格覆盖原点。（强制在线）$n\leqslant100000$题解考虑一个不合法的方案，对一个极角最小的点，另两个点一定在原点到该点连线的半平面内用平衡树维护即可T7题意“奋战三星期，举重五百斤”，一大群鸽子来到了 $\text{CJ}$ 的健身房，发现房间里有一排共 $n$ 个铁饼。有 $Q$ 次操作，你需要支持三种操作：1 x y 将第 $x$ 个铁饼的重量设置为 $y$2 L R 翻转第 $L$ 至第 $R$ 个铁饼3 L R W 询问仅使用 $L$ 到 $R$ 之间的铁饼能否拼出一个重量为 $W$ 的杠铃鸽子们还在健身房的天花板上发现了一个数字 $k$ 。机智的它们立刻发现，在任意时刻出现过的不同的铁饼数目是不会超过 $k$ 的。$n,Q,W\leqslant100000$ , $k\leqslant10$题解[HAOI2008]硬币购物暂咕T8题意给你一个长度为 $n$ 的序列 $A$ ，如果 $n$ 不是非降，你必须删掉一个数，直到非降为止，求不同方案数，对 $1000000007$ 取模。$n\leqslant2000$题解设 $f_i$ 表示删到长度为 $i$ 的非降序列的方案数（包含不合法）预处理 $g_i$ 为长度为 $i$ 的非降序列的个数$f_i=g_i\times(n-i)!$从小到大容斥掉不合法的方案T9题意给你一个长度为 $2n$ 的序列 $a$ ，其中有些位置上的元素是 $-1$ ，保证 $1\sim 2n$ 最多只出现一次，定义一个长度为 $n$ 的数组 $b$ ， $b_i=\min(a_{2i-1},a_{2i})$ ，求有多少种不同的 $b$ 数组。$n\leqslant300$题解把 $a$ 分成 $n$ 个二元组，则每个二元组只有 $3$ 种情况$f_{i,j,k}$ 表示从大往小考虑到第 $i$ 个数，有 $j$ 个 $(-1,x)$ ，有 $k$ 个 $(-1,y)$ 。（ $y$ 为已经填进去的）暂咕T10题意给定一个长度为 $n$ 的正整数序列 $a$求有多少个长度为 $n$ 的正整数序列 $x$ 满足对于任意 $1\leqslant i\leqslant n$ , $1\leqslant x_i\leqslant D$对于任意 $1\leqslant i&lt;j\leqslant n$ , $\max(a_i,a_j)&lt;|x_i-x_j|$$n\leqslant50$ , $a_i\leqslant40$题解按 $a_i$ 排序依次插入设 $f_{i,j,s}$ 表示插入到第 $i$ 个，还有 $j$ 个缝隙，压紧后长度为 $s$ 的方案数枚举第 $i$ 个是放在两端还是合并两个已有段转移T11题意给定一个长度为 $n$ 的整数序列 $S$求有多少个长度为 $n$ 的正整数序列 $T$使得将 $S$ 和 $T$ 排序后， $S$ 的每一位都不小于 $T$ 的每一位$n\leqslant1000$题解对 $S$ 和 $T$ 排序设 $f_i$ 表示有多少个 $T$ 的前 $i$ 位满足条件枚举第一个不满足条件的位置，用总方案减去不满足的转移]]></content>
      <tags>
        <tag>讲课</tag>
        <tag>计数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【考试】8.3模拟考试]]></title>
    <url>%2F%E3%80%90%E8%80%83%E8%AF%95%E3%80%918-3%E6%A8%A1%E6%8B%9F%E8%80%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[校内资料，请输入密码访问 (*╹▽╹*) Incorrect Password! No content to display! ]]></content>
      <tags>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【讲课】8.2网络流]]></title>
    <url>%2F%E3%80%90%E8%AE%B2%E8%AF%BE%E3%80%918-2%E7%BD%91%E7%BB%9C%E6%B5%81%2F</url>
    <content type="text"><![CDATA[菊开讲课，必属精品！[bzoj1280] $\text{Emmy}$卖猪pigs题面题目链接$\text{Emmy}$ 在一个养猪场工作。这个养猪场有 $m$ 个锁着的猪圈，但 $\text{Emmy}$ 并没有钥匙。有 $n$ 个顾客会到养猪场来买猪，一个接着一个。每一位顾客都会有一些猪圈的钥匙，他们会将这些猪圈打开并买走固定数目的猪。所有顾客有的钥匙和他们需要买猪的数量在事先都告诉了 $\text{Emmy}$，于是 $\text{Emmy}$ 要订一个计划，使得卖出去的猪最多。买卖的过程是这样的：一个顾客前来，并打开所有他可以打开的猪圈。然后 $\text{Emmy}$ 从这些猪圈里牵出固定数目的猪卖给顾客（最多只能和顾客需要数相等），并可以重新安排这些开着的猪圈中的猪。每个猪圈可以存放任意数目的猪。写一个程序，使得 $\text{Emmy}$ 能够卖出去尽可能多的猪。$n\leqslant100$ , $m\leqslant1000$题解暂咕[bzoj2406] 矩阵题面题目链接给定一个整数矩阵 $A[n\times m]$ ，求一个矩阵 $B[n\times m]$ 满足 $\forall1\leqslant i\leqslant n,1\leqslant j\leqslant m,B_{ij}\in[L,R]$ ，且使下式值最小：\large max= \begin{cases} \mathop{max}\limits_{1\leqslant j\leqslant m} \{|\sum_{i=1}^{n}{(A_{ij}-B_{ij})}|\}\\ \mathop{max}\limits_{1\leqslant i\leqslant n} \{|\sum_{j=1}^{m}{(A_{ij}-B_{ij})}|\} \end{cases}$n,m\leqslant 200$题解暂咕[TJOI2015] 组合数学题面题目链接为了提高智商， $\text{ZJY}$ 开始学习组合数学。某一天她解决了这样一个问题：给一个 $n\times m$ 的网格图，其中某些格子有财宝。每次从左上角出发，只能往右或下走。问至少要走几次才可能把财宝全捡完。但是她还不知足，想到了这个问题的一个变形：假设每个格子中有好多块财宝，而每一次经过一个格子至多只能捡走一块财宝，其它条件不变，至少要走几次才可能把财宝全捡完？这次她不会做了，你能帮帮她吗？$n,m\leqslant1000$题解最长链等于最少反链覆盖每个点向不能到达它的点连边，跑最长路[bzoj1189] 紧急疏散evacuate题面题目链接发生了火警，所有人员需要紧急疏散！假设每个房间是一个 $n\times m$ 的矩形区域。每个格子可以是空地、墙或者门，人们可以从门撤出房间。已知门一定在房间的边界上，并且边界上不会有空地。最初，每块空地上都有一个人，在疏散的时候，每一秒钟每个人都可以向上下左右四个方向移动一格，当然他也可以站着不动。疏散开始后，每块空地上就没有人数限制了（也就是说每块空地可以同时站无数个人）。但是，由于门很窄，每一秒钟只能有一个人移动到门的位置，一旦移动到门的位置，就表示他已经安全撤离了。现在的问题是：如果希望所有的人安全撤离，最短需要多少时间？或者告知根本不可能。$3\leqslant n,m\leqslant20$题解对时间建分层图[POI2010] Bridges题面题目链接$\text{YYD}$ 为了减肥，他来到了瘦海，这是一个巨大的海，海中有 $n$ 个小岛，小岛之间有 $m$ 座桥连接，两个小岛之间不会有两座桥，并且从一个小岛可以到另外任意一个小岛。现在 $\text{YYD}$ 想骑单车从小岛 $1$ 出发，骑过每一座桥，到达每一个小岛，然后回到小岛 $1$ 。霸中同学为了让 $\text{YYD}$ 减肥成功，召唤了大风，由于是海上，风变得十分大，经过每一座桥都有不可避免的风阻碍 $\text{YYD}$ ， $\text{YYD}$ 十分 $ddt$ ，于是用泡芙贿赂了你，希望你能帮他找出一条承受的最大风力最小的路线。$2\leqslant n\leqslant1000$ , $1\leqslant m\leqslant2000$题解二分答案，网络流检验先随机定向，检查每个点的度数对于一个点入度减出度为正的，源点向其连边，否则该点向汇点连边边权为度数差的绝对值[bzoj4213] 贪吃蛇题面题目链接最近 $\text{lwher}$ 迷上了贪吃蛇游戏，在玩了几天却从未占满全地图的情况下，他不得不承认自己是一个弱菜，只能改去开发一款更弱的贪吃蛇游戏。在开发的过程中， $\text{lwher}$ 脑洞大开，搞了一个多条蛇的模式。但由于这种模式太难操作，于是他只好改变游戏的玩法，稍微变化一下游戏目标。新的游戏是这样的：一些蛇覆盖了一个网格。每个格子要么是一个障碍物，要么是蛇的一部分。每条蛇占据了一条折线（拐角处只能水平和竖直连接），且至少占据两个格子。蛇与蛇之间不能重叠，蛇也不会与自己重叠。每条蛇还必须满足以下两个条件中的一个：两个端点所在的格子在网格的边界。蛇构成一个环，即两个端点相邻（垂直或水平，不能斜着），至少要占据 $4$ 个格子（否则没法形成环）。给定一个网格，在满足前面所述的条件下覆盖所有空地，并使得端点在网格边界（即不构成环）的蛇尽量少。（如果一条蛇既构成环，又是端点在边界，那么不计入答案）例如，以下网格：可以由下面三种方案覆盖。还有其它的方案，但是没法仅用一条不构成环的蛇就覆盖整个网格。$n,m\leqslant12$题解黑白染色，边界的点下界为 $1$ ，上界为 $2$内部的点上下界皆为 $2$ ，障碍不连边[CEOI2008] order题面题目链接有 $n$ 个工作， $m$ 种机器，每种机器你可以租或者买过来。每个工作包括若干道工序，每道工序需要某种机器来完成，你可以通过购买或租用机器来完成。现在给出这些参数，求最大利润。$1\leqslant n,m\leqslant1200$题解源点向工作连收益工作向机器连租的价格机器向汇点连买的价格用总收益减去最小割[bzoj3774] 最优选择题面题目链接小 $\text{N}$ 手上有一个 $n\times m$ 的方格图，控制某一个点要付出 $A_{ij}$ 的代价，然后某个点如果被控制了，或者它周围的所有点（上下左右）都被控制了，那么它就算是被选择了的。一个点如果被选择了，那么可以得到 $B_{ij}$ 的回报。现在请你帮小 $\text{N}$ 选一个最优的方案，使得回报减代价尽可能大。$n,m\leqslant 50$题解暂咕T9题意$p\times q$ 的网格，每个位置有 $r$ 种选择，编号为 $1\sim r$ ，每种选择都有对应收益（可能为负）限制每个点分别和它上下左右相邻的 $4$ 个点的选择编号之和不能超过 $d$最大化总收益$p,q,r\leqslant40$题解暂咕]]></content>
      <tags>
        <tag>讲课</tag>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu3383]线性筛素数]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu3383-%E7%BA%BF%E6%80%A7%E7%AD%9B%E7%B4%A0%E6%95%B0%2F</url>
    <content type="text"><![CDATA[此处题面前言首先说一下，这个科技是我在 $\text{Min_25}$ 的博客里看见的，那篇博客是 $2017$ 年的了，去翻了下提交记录发现论文哥也用了这个科技，所以也并不是什么新东西。有兴趣的也可以去阅读一下那篇博客。然后，虽然这个题是线性筛素数，但是这篇题解并不是讲筛法的，而是一些奇技淫巧。若是想学习素数筛法的可以跳过这篇题解了。正文相信各位都知道一个 $O(\sqrt n)$ 判断素数的方法，也就是枚举 $2\sim\lfloor\sqrt n\rfloor$ 检查每个数是否是 $n$ 的约数。具体代码如下：123456bool check(int x) &#123; if(x==0||x==1) return false; for(int i=2;i*i&lt;=x;++i) if(x%i==0) return false; return true;&#125;这个题我们只要对于每个询问都这样判断一次即可，复杂度上界 $O(M\sqrt N)$ 。如果我的数据是 $10^6$ 个 $9840769$ ，并且你的程序没有记忆化，这个程序需要 $\text{7.7s}$ 左右的时间才能出解。我们考虑怎样优化。我们判断约数的时候需要取模，而众所周知 $\text{C++}$ 的取模是很慢的，如果能加快取模的效率，就能对运行速度有很大优化。$\text{Min_25}$ 在他的博客里讲到了这样一种优化方法：考虑到判断约数时我们只需要得知取模结果是否为 $0$ ，并不需要知道实际结果。若 $m$ 为奇数， $m’$ 为 $m$ 模 $2^{64}$ 下的逆元，且有 $n\in\left[0,2^{64}\right)$ ，则：n\equiv0\pmod{m}\ \Leftrightarrow\ (n\cdot m')\%2^{64}\leqslant\lfloor\frac{2^{64}}{m}\rfloor对于一个模数 $m$ 我们预处理出 $m’$ 和 $\lfloor\frac{2^{64}}{m}\rfloor$ ，然后我们就可以把判断 $n\%m$ 是否为 $0$ 转化为一次乘法和一次比较大小。使用这个方法，刚刚跑 $\text{7.7s}$ 的程序只需要 $\text{1.9s}$ 即可出解， $4$ 倍的效率优化！最后这个技巧不仅可以用于判断素数，也可以用于质因数分解，杜教筛、洲阁筛、 $\text{Min_25}$ 筛的预处理。但使用场合还是较少，不过效率优化还是十分明显的！]]></content>
      <tags>
        <tag>题解</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【更新中】浅谈模意义下形式幂级数的几种操作]]></title>
    <url>%2F%E3%80%90%E6%9B%B4%E6%96%B0%E4%B8%AD%E3%80%91%E6%B5%85%E8%B0%88%E6%A8%A1%E6%84%8F%E4%B9%89%E4%B8%8B%E5%BD%A2%E5%BC%8F%E5%B9%82%E7%BA%A7%E6%95%B0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[前言近几年信息学竞赛中出现了一类利用 生成函数 进行计数的题目，这类题目往往需要一顿推导之后得出一个或几个容易计算的生成函数与代表答案的生成函数间的关系。由于这类题目往往需要将结果对一个大质数取模，因此我们可以用模意义下形式幂级数的一些操作来进行这些生成函数之间的运算。本文将从简单的离散傅里叶变换开始，逐步带你了解这一类基于离散卷积的形式幂级数操作。你需要知道的几点多项式由数或字母或两者的乘积组成的代数式叫单项式（单个数或字母也为单项式）单项式中的常数因子为单项式的系数单项式中所有字母的指数之和为单项式的次数由若干个单项式相加组成的代数式叫多项式多项式各项中次数最大的单项式的次数为多项式的次数形式幂级数定义域为 $\mathbb Z^+$ 或其有限子集的函数叫数列（也就是一些有序的数）将数列的每一项求和得到的函数叫级数，一般所讲的级数大多指无穷级数，即数列有无穷项形如 $\sum_{i=0}^{\infty}{a_i(x-x_0)^i}$ 的级数叫幂级数（ $x_0$ 为常数）其中 $a_i$ 为幂级数的系数（可以类比多项式的各项系数）若存在一个非负实数 $r$ 使得幂级数在 $ | x - x_0 | &lt; r $ 时趋近于一个确定的值（收敛），在 $ | x - x_0 | &gt; r $ 时不趋于任何值（发散），则称 $ r $ 为幂级数的收敛半径，否则称该幂级数的收敛半径为 $ +\infty $将一个数列的各项作为幂级数的系数，所得到的幂级数不一定是收敛的（收敛半径可能为 $0$ ）。但我们淡化其收敛与发散的性质，认为它是收敛的，则可以得到一个形式上类似幂级数的东西（也就是长得像幂级数），我们将其称为形式幂级数若一个形式幂级数从某一项开始，后面项的系数全部为 $0$ ，则我们称其为形式多项式离散卷积令 $f(x)$ 和 $g(x)$ 为定义在 $\mathbb R$ 上的两个可积函数，则称 $\int_{-\infty}^{\infty}{f(\tau)g(x-\tau)d\tau}$ 关于 $x$ 的函数为 $f(x)$ 与 $g(x)$ 的卷积与卷积类似，我们称数列 $c_n=\sum_{i=-\infty}^{\infty}{a_ib_{n-i}}$ 为数列 $a_n$ 与数列 $b_n$ 的离散卷积形式幂级数与幂级数一样可以进行运算，其加减运算即是将对应位的系数相加减，而其乘法运算结果定义为两个形式幂级数系数的离散卷积构成的形式幂级数形式幂级数存在乘法逆元当且仅当 $a_0\ne0$ ，且若存在，则逆元唯一后面的形式幂级数运算若无特殊说明，全部在 $\pmod{x^{n+1}}$ 意义下进行，也即为形式多项式记号与约定我们记以数列 $\{f_n\}$ 为系数的形式幂级数为 $F(x)$ 。我们记 $[x^n]F(x)$ 为 $F(x)$ 的 $n$ 次项系数。我们记 $f_ig_i$ 为 $f_i\times g_i$ ，而 $F(x)G(x)$ 为 $F(x)$ 与 $G(x)$ 的离散卷积。多项式乘法快速傅里叶变换我们知道，两个形式幂级数做乘法即为它们系数的离散卷积。假设我们已知 $F(x)$ 和 $G(x)$ 的系数，我们要求得 $H(x)=F(x)G(x)$根据定义：h_n=\sum_{i=0}^{n}{f_ig_{n-i}}\Rightarrow H(x)=\sum_{i=0}^{\infty}{\sum_{j=0}^{i}{f_jg_{i-j}x^i}}很显然，我们求出 $H(x)$ 一项的时间复杂度是 $\Theta(n)$ 的，求出 $n$ 项的时间复杂度是 $\Theta(n^2)$ 的，这肯定是不能接受的。我们来考虑怎样更快速地求得 $H(x)$ 。上面的运算是基于用系数来表示多项式的，事实上，由于 $n+1$ 个点可以唯一确定一个 $n$ 次多项式，我们可以改用 $n+1$ 个点来描述我们的多项式。并且由于我们并不关心形式幂级数的 $x$ 的取值，我们可以任意选取实数甚至虚数作为 $x$ 的值。这样做的好处是什么呢？我们发现，两个点值表达式相乘只需要将对应点的值相乘即可，也就是说，两个点值表达式做乘法运算是 $\Theta(n)$ 的！如果我们可以快速地将系数表达式转化成点值表达式，并快速地将点值表达式转化回来，就可以快速地完成多项式乘法。那么具体如何来做呢？我们先介绍一类神奇的数——单位根 $\omega$ 。单位根$n$ 次单位根是 $n$ 次幂为 $1$ 的复数。也即， $n$ 次单位根 $\omega_n$ 满足 $\omega_n^n=1$ 。由欧拉公式有 $\omega_n^k=\cos(k\times\frac{2\pi}{n})+i\sin(k\times\frac{2\pi}{n})$ 。在后文中，我们假设 $n$ 为 $2$ 的正整数次幂：于是单位根有这几个性质$\omega_n^{k+\frac n2}=-\omega_n^k$$\omega_{2n}^{2k}=\omega_n^k$$\omega_n^0=\omega_n^n=1$我们来简单证明一下这几个性质：$\omega_n^{k+\frac n2}=-\omega_n^k$\begin{align*} \omega_n^{k+\frac n2}&=\cos((k+\frac n2)\frac{2\pi}{n})+i\sin((k+\frac n2)\frac{2\pi}{n}) \\ &=\cos(k\times\frac{2\pi}{n}+\pi)+i\sin(k\times\frac{2\pi}{n}+\pi) \\ &=-(\cos(k\times\frac{2\pi}{n})+i\sin(k\times\frac{2\pi}{n})) \\ &=-\omega_n^k \end{align*}$\omega_{2n}^{2k}=\omega_n^k$\begin{align*} \omega_{2n}^{2k}&=\cos(2k\times\frac{2\pi}{2n})+i\sin(2k\times\frac{2\pi}{2n}) \\ &=\cos(k\times\frac{2\pi}{n})+i\sin(k\times\frac{2\pi}{n}) \\ &=\omega_n^k \end{align*}有了这两个性质，我们就能使用膜法了！快速傅里叶变换我们考虑将 $\omega_n$ 的 $0\sim n-1$ 次幂作为 $x$ 代入多项式 $F(x)$ 并求出点值。也即求出原多项式的离散傅里叶变换（DFT）我们先将 $F(x)$ 的各项按次数奇偶性分类：\begin{align*} F(x)&=\sum_{i=0}^{n-1}{f_ix^i} \\ &=\sum_{i=0}^{\frac n2-1}{f_{2i}x^{2i}}+\sum_{i=0}^{\frac n2-1}{f_{2i+1}x^{2i+1}} \\ \end{align*}令 $F_1(x)=\sum_{i=0}^{\frac n2-1}{f_{2i}x^{2i}}$ ， $F_2(x)=\sum_{i=0}^{\frac n2-1}{f_{2i+1}x^{2i+1}}$ ，则有 $F(x)=F_1(x^2)+xF_2(x^2)$ 。将 $\omega_n^k$ 代入 $x$ ：F(\omega_n^k)=F_1(\omega_n^{2k})+\omega_n^kF_2(\omega_n^{2k})再将 $\omega_n^{k+\frac n2}$ 代入 $x$ ：\begin{align*} F(\omega_n^{k+\frac n2})&=F_1(\omega_n^{2k+n})+\omega_n^{k+\frac n2}F_2(\omega_n^{2k+n}) \\ &=F_1(\omega_n^{2k}\times\omega_n^n)+(\omega_n^k\times\omega_{2n}^n)F_2(\omega_n^{2k}\times\omega_n^n) \\ &=F_1(\omega_n^{2k})-\omega_n^kF_2(\omega_n^{2k}) \end{align*}发现了吗？这是膜法！这两个式子间只有第二部分的符号有区别，也就是说，我们计算第一个式子的同时可以直接得到第二个式子的值！将这种奇偶分类求一半的操作递归下去，我们就得到了一个可以在 $\Theta(n\log n)$ 的时间复杂度内将多项式从系数表达式转化为以单位根各次幂为自变量的点值表达式的算法。快速傅里叶逆变换接下来我们再来考虑将这样的点值表达式转化回系数表达式的方法。也即离散傅里叶逆变换（IDFT）我们令 $\{y_0,y_1,y_2,\cdots,y_{n-1}\}$ 为 $\{f_0,f_1,f_2,\cdots,f_{n-1}\}$ 的离散傅里叶变换假设存在 $\{c_0,c_1,c_1,\cdots,c_{n-1}\}$ 满足 $c_k=\sum_{i=0}^{n-1}{y_i(\omega_n^{-k})^i}$也即 $Y(x)$ 在 $\omega_n^{-k}$ 处的点值，则有：\begin{align*} c_k&=\sum_{i=0}^{n-1}{y_i(\omega_n^{-k})^i} \\ &=\sum_{i=0}^{n-1}{(\sum_{j=0}^{n-1}{f_j(\omega_n^i)^j})(\omega_n^{-k})^i} \\ &=\sum_{i=0}^{n-1}{\sum_{j=0}^{n-1}{f_j(\omega_n^j)^i}(\omega_n^{-k})^i} \\ &=\sum_{i=0}^{n-1}{\sum_{j=0}^{n-1}{f_j(\omega_{n}^{j-k})^i}} \\ &=\sum_{j=0}^{n-1}{f_j\sum_{i=0}^{n-1}{(\omega_n^{j-k})^i}} \end{align*}令 $S(x)=\sum_{i=0}^{n-1}{x^i}$ ，将 $\omega_n^k(k\ne0)$ 代入：\because \begin{cases}\begin{align*} S(\omega_n^k)&=\sum_{i=0}^{n-1}{(\omega_n^k)^i} \\ \omega_n^kS(\omega_n^k)&=\sum_{i=1}^{n}{(\omega_n^k)^i} \\ \end{align*}\end{cases} \Rightarrow\omega_n^kS(\omega_n^k)-S(\omega_n^k)=(\omega_n^k)^n-1 \\ \therefore S(\omega_n^k)=\frac{(\omega_n^k)^n-1}{\omega_n^k-1}=0而当 $k=0$ 时显然 $S(\omega_n^0)=n$ 。接着来看之前的式子：c_k=\sum_{j=0}^{n-1}{f_j\sum_{i=0}^{n-1}{(\omega_n^{j-k})^i}}式子里面的 $\Sigma$ 当 $j\ne k$ 时值为 $0$ ，而 $j=k$ 时值为 $n$ 。因此有 $c_k=nf_k\Rightarrow f_k=\frac{c_k}{n}$于是只要对原多项式的离散傅里叶变换，以 $\omega_n^{-k}$ 为单位根做一次快速傅里叶变换，再将结果除以 $n$ 即可转化回原多项式。代码实现根据上面的理论可以很容易地写出快速傅里叶变换（FFT）的递归实现，但是一般使用时由于递归实现的常数过大，我们一般使用的是迭代实现的快速傅里叶变换。【例题】[Luogu3803] 多项式乘法 评测记录123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &lt;cstdio&gt;#include &lt;cmath&gt;#define N 2100010const double pi(acos(-1));struct comp &#123; double re,im; inline comp operator+(const comp&amp;x)const&#123; return(comp)&#123;re+x.re,im+x.im&#125;; &#125; inline comp operator-(const comp&amp;x)const&#123; return(comp)&#123;re-x.re,im-x.im&#125;; &#125; inline comp operator*(const comp&amp;x)const&#123; return(comp)&#123;re*x.re-im*x.im,re*x.im+im*x.re&#125;; &#125;&#125;a[N],b[N];inline void swap(comp&amp;a,comp&amp;b) &#123; comp tmp=a; a=b,b=tmp;&#125;int lmt,l,r[N];inline void getRev(int n) &#123; lmt=1,l=0; while(lmt&lt;=n) lmt&lt;&lt;=1,++l; for(int i=1;i&lt;lmt;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1));&#125;inline void DFT(comp*a) &#123; comp wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=(comp)&#123;cos(pi/i),sin(pi/i)&#125;; for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=(comp)&#123;1,0&#125;; for(int k=0;k&lt;i;++k,w=w*wt) &#123; x=a[j+k],y=w*a[i+j+k]; a[j+k]=x+y,a[i+j+k]=x-y; &#125; &#125; &#125;&#125;inline void IDFT(comp*a) &#123; comp wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=(comp)&#123;cos(pi/i),-sin(pi/i)&#125;; for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=(comp)&#123;1,0&#125;; for(int k=0;k&lt;i;++k,w=w*wt) &#123; x=a[j+k],y=w*a[i+j+k]; a[j+k]=x+y,a[i+j+k]=x-y; &#125; &#125; &#125; for(int i=0;i&lt;lmt;++i) a[i].re/=lmt,a[i].im/=lmt;&#125;int n,m;int main() &#123; scanf("%d%d",&amp;n,&amp;m); for(int i=0;i&lt;=n;++i) scanf("%lf",&amp;a[i].re); for(int i=0;i&lt;=m;++i) scanf("%lf",&amp;b[i].re); getRev(n+m+2); DFT(a); DFT(b); for(int i=0;i&lt;lmt;++i) a[i]=a[i]*b[i]; IDFT(a); for(int i=0;i&lt;=n+m;++i) printf("%.0lf ",a[i].re+0.1); return 0;&#125;优化三次变两次用刚刚所讲的内容做多项式乘法，需要使用三次 $\text{FFT}$ ：两次 $\text{DFT}$ 和一次 $\text{IDFT}$ 。事实上有一个优化可以优化到只做一次 $\text{DFT}$ 和一次 $\text{IDFT}$ 。我们把 $G(x)$ 的系数放到 $F(x)$ 的虚部里，然后对 $F(x)$ 进行 $\text{DFT}$ ，将 $F(x)$ 平方后进行 $\text{IDFT}$ ，将虚部的系数除以 $2$ 即是答案。考虑为什么这样是对的：对于 $a$ 和 $b$ ，有 $(a+bi)^2=a^2-b^2+(2abi)$ ，因此虚部系数即为答案两倍。【例题】[Luogu3803] 多项式乘法 评测记录123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &lt;cstdio&gt;#include &lt;cmath&gt;#define N 2100010const double pi(acos(-1));struct comp &#123; double re,im; inline comp operator+(const comp&amp;x)const&#123; return(comp)&#123;re+x.re,im+x.im&#125;; &#125; inline comp operator-(const comp&amp;x)const&#123; return(comp)&#123;re-x.re,im-x.im&#125;; &#125; inline comp operator*(const comp&amp;x)const&#123; return(comp)&#123;re*x.re-im*x.im,re*x.im+im*x.re&#125;; &#125;&#125;a[N];inline void swap(comp&amp;a,comp&amp;b) &#123; comp tmp=a; a=b,b=tmp;&#125;int lmt,l,r[N];inline void getRev(int n) &#123; lmt=1,l=0; while(lmt&lt;=n) lmt&lt;&lt;=1,++l; for(int i=1;i&lt;lmt;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1));&#125;inline void DFT(comp*a) &#123; comp wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=(comp)&#123;cos(pi/i),sin(pi/i)&#125;; for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=(comp)&#123;1,0&#125;; for(int k=0;k&lt;i;++k,w=w*wt) &#123; x=a[j+k],y=w*a[i+j+k]; a[j+k]=x+y,a[i+j+k]=x-y; &#125; &#125; &#125;&#125;inline void IDFT(comp*a) &#123; comp wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=(comp)&#123;cos(pi/i),-sin(pi/i)&#125;; for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=(comp)&#123;1,0&#125;; for(int k=0;k&lt;i;++k,w=w*wt) &#123; x=a[j+k],y=w*a[i+j+k]; a[j+k]=x+y,a[i+j+k]=x-y; &#125; &#125; &#125; for(int i=0;i&lt;lmt;++i) a[i].re/=lmt,a[i].im/=lmt;&#125;int n,m;int main() &#123; scanf("%d%d",&amp;n,&amp;m); for(int i=0;i&lt;=n;++i) scanf("%lf",&amp;a[i].re); for(int i=0;i&lt;=m;++i) scanf("%lf",&amp;a[i].im); getRev(n+m+2); DFT(a); for(int i=0;i&lt;lmt;++i) a[i]=a[i]*a[i]; IDFT(a); for(int i=0;i&lt;=n+m;++i) printf("%.0lf ",a[i].im/2+0.1); return 0;&#125;MTT暂咕快速数论变换如果是在模意义下做运算，我们还有一种算法可以胜任，那就是快速数论变换（NTT）考虑到做快速傅里叶变换时我们将单位根代入求出点值，如果模意义下有与单位根性质类似的数，是否可以代替单位根完成一样的工作呢？答案是肯定的，这一类数是——原根 $g$ 。原根我们先给出阶的定义：若 $a\perp p$ 且 $p&gt;1$ ， $a$ 模 $p$ 的阶为满足 $a^n\equiv1\pmod{p}$ 的最小的 $n$ ，记为 $\delta_p(a)$ 。若 $p$ 为正整数， $a$ 是整数，且 $\delta_p(a)=\varphi(p)$ ，则 $a$ 为模 $p$ 的一个原根。（ $\varphi(n)$ 为小于等于 $n$ 的数中与 $n$ 互质的数的个数）原根有一些很有意思的性质：若模 $p$ 存在原根，则其一定有 $\varphi(\varphi(p))$ 个原根。若 $p$ 为质数， $g$ 为 $p$ 的一个原根，则 $g^i\pmod{p}$ 对于不同的 $i\in[1,p)$ 值都不同同时原根在模意义下与单位根有相同的性质，因此我们可以使用原根代替单位根在模意义下做快速数论变换。代码实现类似快速傅里叶变换，只把里面的单位根相应地换成原根，并注意取模即可。【例题】[Luogu3803] 多项式乘法 评测记录12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879#include &lt;cstdio&gt;#define MOD 998244353#define N 2100010typedef long long i64;inline void swap(int&amp;a,int&amp;b) &#123; int tmp(a); a=b,b=tmp;&#125;inline int pow(int a,int b) &#123; int ans(1); while(b) &#123; ans=b&amp;1?(i64)ans*a%MOD:ans; a=(i64)a*a%MOD; b&gt;&gt;=1; &#125; return ans;&#125;int lmt,l,r[N];inline void getRev(int n) &#123; lmt=1,l=0; while(lmt&lt;=n) lmt&lt;&lt;=1,++l; for(int i=1;i&lt;lmt;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1));&#125;inline void DFT(int*a) &#123; int wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=pow(3,(MOD-1)/(i&lt;&lt;1)); for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=1; for(int k=0;k&lt;i;++k,w=(i64)w*wt%MOD) &#123; x=a[j+k],y=(i64)w*a[i+j+k]%MOD; a[j+k]=(x+y)%MOD,a[i+j+k]=(x-y+MOD)%MOD; &#125; &#125; &#125;&#125;inline void IDFT(int*a) &#123; int wt,w,x,y; for(int i=0;i&lt;lmt;++i) if(i&lt;r[i]) swap(a[i],a[r[i]]); for(int i=1;i&lt;lmt;i&lt;&lt;=1) &#123; wt=pow(332748118,(MOD-1)/(i&lt;&lt;1)); for(int j=0,step=i&lt;&lt;1;j&lt;lmt;j+=step) &#123; w=1; for(int k=0;k&lt;i;++k,w=(i64)w*wt%MOD) &#123; x=a[j+k],y=(i64)w*a[i+j+k]%MOD; a[j+k]=(x+y)%MOD,a[i+j+k]=(x-y+MOD)%MOD; &#125; &#125; &#125; int bk(pow(lmt,MOD-2)); for(int i=0;i&lt;lmt;++i) a[i]=(i64)a[i]*bk%MOD;&#125;int n,m,a[N],b[N];int main() &#123; scanf("%d%d",&amp;n,&amp;m); for(int i=0;i&lt;=n;++i) scanf("%d",a+i); for(int i=0;i&lt;=m;++i) scanf("%d",b+i); getRev(n+m+2); DFT(a); DFT(b); for(int i=0;i&lt;lmt;++i) a[i]=(i64)a[i]*b[i]%MOD; IDFT(a); for(int i=0;i&lt;=n+m;++i) printf("%d ",a[i]); return 0;&#125;预处理原根我们来考虑一个优化：在 $\text{NTT}$ 的过程中我们多次使用了原根的各次幂，如果我们能将原根的各次幂预处理出来，而不是每次使用都计算一遍，就能有很大的常数优化！在多项式乘法中我们只做了 $3$ 次 $\text{NTT}$ ，所以看上去常数优化并不明显。但是在后面的内容中，随着 $\text{NTT}$ 次数的增多，预处理原根的优化效果将愈发明显。【例题】[Luogu3803] 多项式乘法 评测记录：$1.83s\rightarrow1.3s$123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#include &lt;cstdio&gt;#include &lt;algorithm&gt;using std::reverse;#define MOD 998244353#define N 2100010typedef long long i64;typedef unsigned long long u64;inline int pow(int a,int b) &#123; int ans(1); while(b) &#123; ans=b&amp;1?(i64)ans*a%MOD:ans; a=(i64)a*a%MOD; b&gt;&gt;=1; &#125; return ans;&#125;int lmt(1),r[N],w[N];inline int getLen(int n) &#123; return 1&lt;&lt;(32-__builtin_clz(n));&#125;inline void init(int n) &#123; int l(0); while(lmt&lt;=n) lmt&lt;&lt;=1,++l; for(int i=1;i&lt;lmt;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1)); int wn(pow(3,(MOD-1)&gt;&gt;l)); w[lmt&gt;&gt;1]=1; for(int i=(lmt&gt;&gt;1)+1;i&lt;lmt;++i) w[i]=(i64)w[i-1]*wn%MOD; for(int i=(lmt&gt;&gt;1)-1;i;--i) w[i]=w[i&lt;&lt;1]; lmt=l;&#125;inline void DFT(int*a,int l) &#123; static u64 tmp[N]; int u(lmt-__builtin_ctz(l)),t; for(int i=0;i&lt;l;++i) tmp[r[i]&gt;&gt;u]=a[i]; for(int i=1;i&lt;l;i&lt;&lt;=1) for(int j=0,step=i&lt;&lt;1;j&lt;l;j+=step) for(int k=0;k&lt;i;++k) &#123; t=tmp[i+j+k]*w[i+k]%MOD; tmp[i+j+k]=tmp[j+k]+MOD-t; tmp[j+k]+=t; &#125; for(int i=0;i&lt;l;++i) a[i]=tmp[i]%MOD;&#125;inline void IDFT(int*a,int l) &#123; reverse(a+1,a+l); DFT(a,l); int bk(MOD-(MOD-1)/l); for(int i=0;i&lt;l;++i) a[i]=(i64)a[i]*bk%MOD;&#125;int n,m,a[N],b[N],l;int main() &#123; scanf("%d%d",&amp;n,&amp;m); init(n+m+2); for(int i=0;i&lt;=n;++i) scanf("%d",a+i); for(int i=0;i&lt;=m;++i) scanf("%d",b+i); l=getLen(n+m+2); DFT(a,l); DFT(b,l); for(int i=0;i&lt;l;++i) a[i]=(i64)a[i]*b[i]%MOD; IDFT(a,l); for(int i=0;i&lt;=n+m;++i) printf("%d ",a[i]); return 0;&#125;多项式求逆我们已经知道，当 $f_0\ne0$ 时 $F(x)$ 存在唯一乘法逆元。接下来我们就探讨一下如何求得一个多项式的乘法逆元。考虑已知多项式 $F(x)$ ，要求出一个多项式 $G(x)$ 满足 $F(x)G(x)\equiv1\pmod{x^{n+1}}$如果 $F(x)$ 只有常数项，答案显然是常数项的乘法逆元，我们考虑]]></content>
      <tags>
        <tag>资料</tag>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu5373]多项式复合函数]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu5373-%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%A4%8D%E5%90%88%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[此处题面前言这是这道题复杂度比较正确的一个常数奇大无比的算法，源自 $\text{R.P.BRENT}$ 和 $\text{H.T.KUNG}$ 在 $1978$ 年发表的论文（也就是题面里说的那个全嘤文pdf），我在 $\text{5月15日}$ 蒯到手之后肝了一个晚上，在神犇 rqy 的帮助下成功地写出了66分点名被卡做法awsl，后来研究别人代码的时候发现了 预处理原根 这种神奇操作，于是总算成功AC。正文这种做法基于对外层函数的泰勒展开，我们把内层函数 $G$ 的前 $m$ 项拆出来，记作 $G_m$ ，把剩下的记作 $G_r$ 。(这个 $m$ 到底取多少我们分析复杂度的时候再确定)然后进行泰勒展开：F(G)=F(G_m+G_r)=F(G_m)+F'(G_m)G_r+\frac12F''(G_m)G_r^2+\cdots由于我们只需要求 $F(G)$ 前 $n+1$ 项的值，所以我们只需要知道这个展开式前 $\lceil\frac nm\rceil$ 项的值即可，即：令 $l=\lceil\frac nm\rceil$ ，有F(G(x))\equiv F(G_m(x))+F'(G_m(x))G_r(x)+\cdots+\frac1{l!}F^{(l)}(G_m(x))G_r^l(x)\pmod{x^{n+1}}因此我们只要计算出 $F(G_m(x))$ 的各阶导和 $G_r(x)$ 的各次幂，就可以累加得到 $F(G(x))$ 了。$G_r(x)$ 只需要从 $G(x)$ 中截出来即可，那么如何计算 $F(G_m(x))$ 呢？考虑外层函数最高次项次数为 $2$ 的幂的情况，即：令 $F(x)=f_0+\cdots+f_jx^j$ 且 $j$ 为 $2$ 的正整数次幂，有F(G)=F_1(G)+G^{\frac j2}\cdot F_2(G)这里 $F_1$ 和 $F_2$ 都是最高次项次数为 $\frac j2$ 的多项式，这样一来我们就能递归地计算 $F(G_m(x))$ 了。考虑这一步的时间复杂度：我们令 $M(n)$ 为完成两个 $n$ 次多项式的乘法的时间，即： $M(n)=O(n\log n)$我们设 $T(j)$ 为计算 $G^{\frac j2}$ 和 $F(G)$ 的时间，则有T(j)\leqslant2T(\frac j2)+O(M(\min(jm,n)))我们令 $r$ 为满足 $n\cdot2^k\leqslant jm$ 的最大的 $k$ ，则有T(j)=O(M(n)+2M(n)+\cdots+2^rM(n))+2^{r+1}T(\frac{j}{2^{r+1}})T(j)\leqslant O(\frac{jmM(n)}{n})+(\frac{2jm}{n})T(\frac{j}{2^{r+1}})又因为 $n\cdot2^{r+1}&gt;jm$ ，有T(\frac{j}{2^{r+1}})=O(M(\frac{jm}{2^{r+1}})+2M(\frac{jm}{2^{r+2}})+\cdots)=O(M(n)+2M(\lceil\frac n2\rceil)+4M(\lceil\frac n4\rceil)+\cdots)=O(\log nM(n))因此，我们有 $T(j)=O(\frac{jm\log n}{n}M(n))$ ，所以求解 $F(G_m(x))$ 的时间复杂度为 $O(mn\log^2n)$ 。我们再来考虑对 $F(G_m(x))$ 求导：令 $H(x)=F(G(x))$根据复合函数求导法则，我们有 $H’(x)=F’(G(x))\cdot G’(x)$ ，因此 $F’(G_m(x))=H’(x)\cdot(G_m’(x))^{-1}$ ，由此我们可以计算出泰勒展开式中某一项之后与之前的结果累加得到 $H(x)$ ，同时计算出下一项中 $F(G_m(x))$ 的对应阶导。每计算一次导数的时间复杂度是 $O(n\log n)$ 的，因此计算出所有项的时间复杂度是 $O(l\cdot n\log n)=O(\frac{n^2\log n}{m})$ 。我们已经得到了 $F(G_m(x))$ 的各阶导，而 $G_r(x)$ 的各次幂只需要挨个乘起来即可，时间复杂度也是 $O(\frac{n^2\log n}{m})$ 的。之后各项的计算和累加同样是 $O(\frac{n^2\log n}{m})$ 的，因此这个算法的总复杂度为 $O(mn\log^2n+\frac{n^2\log n}{m})$ 。我们考虑 $m$ 的取值：根据均值不等式，当 $mn\log^2n\sim\frac{n^2\log n}{m}$ 时时间复杂度最优，因此解得当 $m\sim\sqrt{\frac{n}{\log n}}$ 时有最优时间复杂度 $O((n\log n)^{1.5})$ 。最后还是附上参考代码比较好，这个东西由于常数原因必须 预处理原根 才能卡过去，而且好像也没有什么实际用处。。就当是练习码力了 2333123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206#pragma GCC optimize("Ofast,inline")#pragma GCC target("sse,sse2,sse3,ssse3,sse4,sse4.1,sse4.2,popcnt,abm,mmx,avx,avx2,tune=native")#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;cmath&gt;#include &lt;algorithm&gt;#define MOD 998244353#define G 332748118#define N 262210#define re register#define gc pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,100000,stdin),pa==pb)?EOF:*pa++typedef long long ll;static char buf[100000],*pa(buf),*pb(buf);static char pbuf[3000000],*pp(pbuf),st[15];inline int read() &#123; re int x(0);re char c(gc); while(c&lt;'0'||c&gt;'9')c=gc; while(c&gt;='0'&amp;&amp;c&lt;='9') x=x*10+c-48,c=gc; return x;&#125;inline void write(re int v) &#123; if(v==0) *pp++=48; else &#123; re int tp(0); while(v) st[++tp]=v%10+48,v/=10; while(tp) *pp++=st[tp--]; &#125; *pp++=32;&#125;inline int pow(re int a,re int b) &#123; re int ans(1); while(b) ans=b&amp;1?(ll)ans*a%MOD:ans,a=(ll)a*a%MOD,b&gt;&gt;=1; return ans;&#125;int inv[N],ifac[N];inline void pre(re int n) &#123; inv[1]=ifac[0]=1; for(re int i(2);i&lt;=n;++i) inv[i]=(ll)(MOD-MOD/i)*inv[MOD%i]%MOD; for(re int i(1);i&lt;=n;++i) ifac[i]=(ll)ifac[i-1]*inv[i]%MOD;&#125;inline int getLen(re int t) &#123; return 1&lt;&lt;(32-__builtin_clz(t));&#125;int lmt(1),r[N],w[N];inline void init(re int n) &#123; re int l(0); while(lmt&lt;=n) lmt&lt;&lt;=1,++l; for(re int i(1);i&lt;lmt;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1)); re int wn(pow(3,(MOD-1)/lmt)); w[lmt&gt;&gt;1]=1; for(re int i((lmt&gt;&gt;1)+1);i&lt;lmt;++i) w[i]=(ll)w[i-1]*wn%MOD; for(re int i((lmt&gt;&gt;1)-1);i;--i) w[i]=w[i&lt;&lt;1];&#125;inline void DFT(int*a,re int l) &#123; static unsigned long long tmp[N]; re int u(__builtin_ctz(lmt)-__builtin_ctz(l)),t; for(re int i(0);i&lt;l;++i) tmp[i]=(a[r[i]&gt;&gt;u])%MOD; for(re int i(1);i&lt;l;i&lt;&lt;=1) for(re int j(0),step(i&lt;&lt;1);j&lt;l;j+=step) for(re int k(0);k&lt;i;++k) t=(ll)w[i+k]*tmp[i+j+k]%MOD, tmp[i+j+k]=tmp[j+k]+MOD-t, tmp[j+k]+=t; for(re int i(0);i&lt;l;++i) a[i]=tmp[i]%MOD;&#125;inline void IDFT(int*a,re int l) &#123; std::reverse(a+1,a+l);DFT(a,l); re int bk(MOD-(MOD-1)/l); for(re int i(0);i&lt;l;++i) a[i]=(ll)a[i]*bk%MOD;&#125;int n,m;int a[N],b[N],c[N];void getInv(int*a,int*b,int deg) &#123; if(deg==1) b[0]=pow(a[0],MOD-2); else &#123; static int tmp[N]; getInv(a,b,(deg+1)&gt;&gt;1); re int l(getLen(deg&lt;&lt;1)); for(re int i(0);i&lt;l;++i) tmp[i]=i&lt;deg?a[i]:0; DFT(tmp,l),DFT(b,l); for(re int i(0);i&lt;l;++i) b[i]=(2ll-(ll)tmp[i]*b[i]%MOD+MOD)%MOD*b[i]%MOD; IDFT(b,l); for(re int i(deg);i&lt;l;++i) b[i]=0; &#125;&#125;inline void getDer(int*a,int*b,int deg) &#123; for(re int i(0);i+1&lt;deg;++i) b[i]=(ll)a[i+1]*(i+1)%MOD; b[deg-1]=0;&#125;void getComp(int*a,int*b,int k,int m,int&amp;n,int*c,int*d) &#123; if(k==1) &#123; for(re int i(0);i&lt;m;++i) c[i]=0,d[i]=b[i]; n=m,c[0]=a[0]; &#125; else &#123; static int t1[N],t2[N]; int nl(n),nr(n),*cl,*cr,*dl,*dr; getComp(a,b,k&gt;&gt;1,m,nl,cl=c,dl=d); getComp(a+(k&gt;&gt;1),b,(k+1)&gt;&gt;1,m,nr,cr=c+nl,dr=d+nl); n=std::min(n,nl+nr-1); re int _l(getLen(nl+nr)); for(re int i(0);i&lt;_l;++i) t1[i]=i&lt;nl?dl[i]:0; for(re int i(0);i&lt;_l;++i) t2[i]=i&lt;nr?cr[i]:0; DFT(t1,_l),DFT(t2,_l); for(re int i(0);i&lt;_l;++i) t2[i]=(ll)t1[i]*t2[i]%MOD; IDFT(t2,_l); for(re int i(0);i&lt;n;++i) c[i]=((i&lt;nl?cl[i]:0)+t2[i])%MOD; for(re int i(0);i&lt;_l;++i) t2[i]=i&lt;nr?dr[i]:0; DFT(t2,_l); for(re int i(0);i&lt;_l;++i) t2[i]=(ll)t1[i]*t2[i]%MOD; IDFT(t2,_l); for(re int i(0);i&lt;n;++i) d[i]=t2[i]; &#125;&#125;inline void getComp(int*a,int*b,int*c,int deg) &#123; static int ts[N],ps[N],c0[N],_t1[N],idM[N]; int M(std::max((int)ceil(sqrt(deg/log2(deg))*2.5),2)),_n(deg+deg/M); getComp(a,b,deg,M,_n,c0,_t1); re int _l(getLen(_n+deg)); for(re int i(_n);i&lt;_l;++i) c0[i]=0; for(re int i(0);i&lt;_l;++i) ps[i]=i==0; for(re int i(0);i&lt;_l;++i) ts[i]=M&lt;=i&amp;&amp;i&lt;deg?b[i]:0; getDer(b,_t1,M); for(re int i(M-1);i&lt;deg;++i) _t1[i]=0; /// Important!!! getInv(_t1,idM,deg); for(int i=deg;i&lt;_l;++i) idM[i]=0; DFT(ts,_l),DFT(idM,_l); for(re int t(0);t*M&lt;deg;++t) &#123; for(re int i(0);i&lt;_l;++i) _t1[i]=i&lt;deg?c0[i]:0; DFT(ps,_l),DFT(_t1,_l); for(re int i(0);i&lt;_l;++i) _t1[i]=(ll)_t1[i]*ps[i]%MOD, ps[i]=(ll)ps[i]*ts[i]%MOD; IDFT(ps,_l),IDFT(_t1,_l); for(re int i(deg);i&lt;_l;++i) ps[i]=0; for(re int i(0);i&lt;deg;++i) c[i]=((ll)_t1[i]*ifac[t]+c[i])%MOD; getDer(c0,c0,_n); for(re int i(_n-1);i&lt;_l;++i) c0[i]=0; DFT(c0,_l); for(re int i(0);i&lt;_l;++i) c0[i]=(ll)c0[i]*idM[i]%MOD; IDFT(c0,_l); for(re int i(_n-1);i&lt;_l;++i) c0[i]=0; &#125;&#125;int main() &#123; n=read(),m=read(); for(re int i(0);i&lt;=n;++i) a[i]=read(); for(re int i(0);i&lt;=m;++i) b[i]=read(); m=(n&gt;m?n:m)+1; pre(m);init(m*5); getComp(a,b,c,m); for(re int i(0);i&lt;=n;++i) write(c[i]); fwrite(pbuf,1,pp-pbuf,stdout); return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu5431]乘法逆元2]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu5431-%E4%B9%98%E6%B3%95%E9%80%86%E5%85%832%2F</url>
    <content type="text"><![CDATA[此处题面题外话其实我觉得这道题的考点是快读.jpg没有快读的后果正文\large\text{以下运算均在模 }p\text{ 意义下进行}\large\sum_{i=1}^{n}{\frac{k^i}{a_i}}=\sum_{i=1}^{n}{k^i\cdot a_i^{-1}}我们考虑先求出 $a$ 序列的前缀积，记为 $s$ ：\large s_i=\prod_{j=1}^{i}{a_j}记 $a$ 序列前缀积的逆元为 $t$ ，此时如果我们知道这个序列，我们就可以知道 $a$ 中任意一个数的逆元：\large a_i^{-1}=s_{i-1}\cdot t_i而 前缀积的逆元 就等于 逆元的前缀积 ，所以我们只要求出 $t_n$ 就可以线性递推出整个 $t$ 序列了：\large t_n=s_n^{p-2}\large t_i=a_{i+1}\cdot t_{i+1}这样我们就求得了 $a$ 序列的逆元，再用秦九韶算法就能在线性时间内算出题目的式子了。参考代码前方极差码风警告！123456789101112131415161718192021222324252627282930313233343536#include &lt;cstdio&gt;#define N 5000010#define re register#define gc pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,100000,stdin),pa==pb)?EOF:*pa++typedef long long ll;static char buf[100000],*pa(buf),*pb(buf);inline int read() &#123; re int x(0);re char c(gc); while(c&lt;'0'||c&gt;'9')c=gc; while(c&gt;='0'&amp;&amp;c&lt;='9') x=x*10+c-48,c=gc; return x;&#125;inline int pow(int a,int b,int p) &#123; int ans(1); while(b) ans=b&amp;1?(ll)ans*a%p:ans,a=(ll)a*a%p,b&gt;&gt;=1; return ans;&#125;int n,p,k,a[N],s[N]=&#123;1&#125;,inv_s[N],ans;int main() &#123; n=read(),p=read(),k=read(); for(int i=1;i&lt;=n;++i) a[i]=read(),s[i]=(ll)s[i-1]*a[i]%p; inv_s[n]=pow(s[n],p-2,p); for(int i=n-1;i;--i) inv_s[i]=(ll)inv_s[i+1]*a[i+1]%p; for(int i=n;i;--i) ans=((ll)inv_s[i]*s[i-1]%p+ans)*k%p; printf("%d",ans); return 0;&#125;5e6 的输入，千万记得快读！]]></content>
      <tags>
        <tag>题解</tag>
        <tag>逆元</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu4315]月下“毛景树”]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu4315-%E6%9C%88%E4%B8%8B%E2%80%9C%E6%AF%9B%E6%99%AF%E6%A0%91%E2%80%9D%2F</url>
    <content type="text"><![CDATA[此处题面前言这道题其实就是把 单点修改 、 区间染色 、 区间加 以及 区间最大值 这四种基本的序列操作出到了树上，很明显是用 树链剖分 + 线段树 解决，但是因为我太蒻了，树剖码到一半码不下去了，所以就全删了改码了个 Link/Cut Tree ，顺便 拿了这个题的RANK1 。边转点树剖的边转点大家都知道是把每条边的权值给深度较深的那个点，但是我们不能在 LCT 上也这么做，因为有 makeroot 操作的存在， LCT 上结点的父子关系不是确定的，所以我们采取建立 虚拟结点 的方式：1234// 第 i 条边连接 u 和 v 这两个点，权值为 wval[n+i]=maxv[n+i]=w;link(u,n+i);link(n+i,v);用 $n$ + $i$ 号结点表示第 $i$ 条边，再用它去分别连接原先的边连接的结点。需要注意的地方这种写法会产生 $2n$ 个结点， 空间千万要开够！标记上传下传的时候要分 原结点 和 虚拟结点 两种情况讨论！标记这道题我们只需要维护一个 区间染色 的标记和一个 区间加 的标记就行，我多维护了一个 siz 数组储存子树内 虚拟结点 的数量，上传时判断当前结点是不是 虚拟结点 就行。标记下传的时候要 先下传区间染色，再下传区间加 ，若是先下传了 区间加 ，后面 区间染色 的时候就会 覆盖掉最后附上此题 $AC$ 代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788#include &lt;cstdio&gt;#define N 200010#define lc(x) ch[x][0]#define rc(x) ch[x][1]#define re register#define gc pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,100000,stdin),pa==pb)?EOF:*pa++inline int max(int a,int b)&#123;return b&lt;a?a:b;&#125;inline void swap(int&amp;a,int&amp;b)&#123;int tmp(a);a=b,b=tmp;&#125;static char buf[100000],*pa(buf),*pb(buf);static char pbuf[3000000],*pp(pbuf),st[15];inline char gtc() &#123; re char c(gc); while(c!='S'&amp;&amp;c!='h'&amp;&amp;c!='o'&amp;&amp;c!='d'&amp;&amp;c!='a') c=gc; return c;&#125;inline int read() &#123; re int x(0);re char c(gc); while(c&lt;'0'||c&gt;'9')c=gc; while(c&gt;='0'&amp;&amp;c&lt;='9') x=x*10+c-48,c=gc; return x;&#125;inline void write(re int v) &#123; if(!v) *pp++=48; else &#123; re char*tp(st); while(v) *++tp=v%10+48,v/=10; while(tp!=st) *pp++=*tp--; &#125; *pp++='\n';&#125;int n,u,v,w;char opt;int ch[N][2],fa[N],rev[N],val[N],maxv[N],ass[N],addv[N],siz[N];inline void assign(int x,int y)&#123;val[x]=x&gt;n?y:0,maxv[x]=siz[x]&gt;0?y:0,addv[x]=0,ass[x]=y;&#125;inline void add(int x,int y)&#123;val[x]+=x&gt;n?y:0,maxv[x]+=siz[x]&gt;0?y:0,addv[x]+=siz[x]&gt;0?y:0;&#125;inline void up(int x)&#123;siz[x]=siz[lc(x)]+siz[rc(x)]+(x&gt;n),maxv[x]=max(val[x],max(maxv[lc(x)],maxv[rc(x)]));&#125;inline void down(int x) &#123; if(rev[x]) rev[lc(x)]^=1,rev[rc(x)]^=1,rev[x]=0,swap(lc(x),rc(x)); if(ass[x]) assign(lc(x),ass[x]),assign(rc(x),ass[x]),ass[x]=0; if(addv[x]) add(lc(x),addv[x]),add(rc(x),addv[x]),addv[x]=0;&#125;inline int nrt(int x)&#123;return x==lc(fa[x])||x==rc(fa[x]);&#125;void psa(int x)&#123;if(nrt(x))psa(fa[x]);down(x);&#125;inline void rotate(int x) &#123; int y(fa[x]),z(fa[y]),k(x==rc(y)); ch[y][k]=ch[x][k^1],ch[x][k^1]=y;if(nrt(y))ch[z][y==rc(z)]=x; if(ch[y][k])fa[ch[y][k]]=y;fa[y]=x,fa[x]=z,up(y);&#125;inline void splay(int x) &#123; int y,z; for(psa(x);nrt(x);rotate(x)) &#123;y=fa[x],z=fa[y];if(nrt(y))rotate(x==rc(y)^y==rc(z)?x:y);&#125;up(x);&#125;inline void access(int x)&#123;for(int y(0);x;x=fa[y=x])splay(x),rc(x)=y,up(x);&#125;inline void mrt(int x)&#123;access(x),splay(x),rev[x]^=1;&#125;inline void split(int x,int y)&#123;mrt(x),access(y),splay(y);&#125;inline void link(int x,int y)&#123;mrt(x),fa[x]=y;&#125;int main() &#123; n=read(); for(re int i(1);i&lt;n;++i) siz[n+i]=1; for(re int i(1);i&lt;n;++i) u=read(),v=read(),val[n+i]=maxv[n+i]=read(),link(u,n+i),link(n+i,v); opt=gtc(); while(opt!='S') &#123; u=read(),v=read(); switch(opt) &#123; case'h': access(n+u),splay(n+u),val[n+u]=v; break; case'o': split(u,v),assign(v,read()); break; case'd': split(u,v),add(v,read()); break; case'a': split(u,v),write(maxv[v]); &#125; opt=gtc(); &#125; fwrite(pbuf,1,pp-pbuf,stdout); return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>Link/Cut Tree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【置顶】学习资料]]></title>
    <url>%2F%E3%80%90%E7%BD%AE%E9%A1%B6%E3%80%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%2F</url>
    <content type="text"><![CDATA[收集的一些资料，留给自己慢慢啃。各路OJ洛谷、bzoj、POJ、UOJ、LibreOJ、51Nod、OIH、评测鸭、hihoCoder、OHO-OJ、Vijos、ZHZXOJ、ZOJ博文索引yzhang、bztMinamoto、自为风月马前卒、JasonZhan、huyufeifei、xehoth、饕餮传奇、Venus、yyb、rqy、Mrsrz、xht37、Victor、fcwww、EI、诗乃、Siyuan、zzq、zkw数据结构猫树、zkw线段树、Leafy Tree、Link-Cut Tree、树套树、后缀数组、回文自动机算法分治、动态dp、生成函数、计算几何其它OI Wiki、算法可视化、SAM可视化、题号查找器、图可视化、OEIS、MaHua在线Markdown编辑器、矩阵乘法、图床搭建、MiNa]]></content>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu3372]线段树1]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu3372-%E7%BA%BF%E6%AE%B5%E6%A0%911%2F</url>
    <content type="text"><![CDATA[此处题面去了 WC2019 的同学应该对 指令集 有些印象，没去的同学 ( 比如我 ) 可能也通过一些途径了解到了这个暴力踩标程的毒瘤 ( 据说现场踩 Ynoi五彩斑斓的世界 ) 。但是由于我太弱，实在过不了那道题 dllxl Orz ，所以我就来拿这道题练手了。一、指令集是什么？其实就是压位，常用的是压256位。也有能压512位的，但大部分情况不支持 ( 硬件 + 软件 ) 。二、它为什么快？就像压位高精会比裸高精快， bitset 比 bool数组 快一样，你把8个32位的 int 压成一个256位的玩意儿，每次操作可以看成是同时对8个 int 进行操作 ( 但其实并不是这样 ) ，所以理论上常数会是原来的 $\frac{1}{8}$ ( 但其实做不到 $\frac{1}{8}$ ) 。三、它要怎么用？请自行摸索首先你需要 immintrin.h 库，里面啥都有然后再在程序前加上 #pragma GCC target(&quot;avx,avx2&quot;) ，这样你就可以把你的 int 啊 long long 啊什么的压成 __m256i ，把 float 压成 __m256 ，还能把 double 压成 __m256d 。什么你问我具体怎么做？我不知道啊.jpg这里是连快读都没用的$O\left(n^2\right)$暴力评测记录。最后附上这道题的程序，想学学指令集的可以看看：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#pragma GCC optimize("Ofast,fast-math")#pragma GCC target("avx,avx2")#include &lt;cstdio&gt;#include &lt;immintrin.h&gt;int n,m,num,x[5],opt,p,q,k;__m256i a[25010];inline void add(int l,int r,int v) &#123; while(((l-1)&amp;3)&amp;&amp;l&lt;=r)((long long*)(a+(l&gt;&gt;2)+1))[(l&amp;3)-1]+=v,++l; if(l==r+1)return; while((r&amp;3)&amp;&amp;l&lt;=r)((long long*)(a+(r&gt;&gt;2)+1))[(r&amp;3)-1]+=v,--r; if(l==r+1)return; l=(l&gt;&gt;2)+1,r&gt;&gt;=2; __m256i s=_mm256_set_epi64x(v,v,v,v); while(l&lt;=r)a[l]=_mm256_add_epi64(a[l],s),++l;&#125;inline long long query(int l,int r) &#123; long long ans(0); while(((l-1)&amp;3)&amp;&amp;l&lt;=r)ans+=((long long*)(a+(l&gt;&gt;2)+1))[(l&amp;3)-1],++l; if(l==r+1)return ans; while((r&amp;3)&amp;&amp;l&lt;=r)ans+=((long long*)(a+(r&gt;&gt;2)+1))[(r&amp;3)-1],--r; if(l==r+1)return ans; l=(l&gt;&gt;2)+1,r&gt;&gt;=2; __m256i s=_mm256_set_epi64x(0,0,0,0); while(l&lt;=r)s=_mm256_add_epi64(a[l],s),++l; for(int i=0;i&lt;4;++i) ans+=((long long*)&amp;s)[i]; return ans;&#125;int main()&#123; scanf("%d%d",&amp;n,&amp;m);num=n&gt;&gt;2; for(int i=1;i&lt;=num;++i) &#123; for(int j=1;j&lt;=4;++j) scanf("%d",x+j); a[i]=_mm256_set_epi64x(x[4],x[3],x[2],x[1]); &#125; for(int i=1;i&lt;=(n&amp;3);++i) scanf("%d",x+i); a[++num]=_mm256_set_epi64x(x[4],x[3],x[2],x[1]); while(m--) &#123; scanf("%d%d%d",&amp;opt,&amp;p,&amp;q); if(opt==1) scanf("%d",&amp;k),add(p,q,k); else printf("%lld\n",query(p,q)); &#125; return 0;&#125;这道题要开 long long ，如果是 int 的话程序第一句的 Ofast 优化去掉也能过！]]></content>
      <tags>
        <tag>题解</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[JLOI2014]松鼠的新家]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-JLOI2014-%E6%9D%BE%E9%BC%A0%E7%9A%84%E6%96%B0%E5%AE%B6%2F</url>
    <content type="text"><![CDATA[此处题面由于树上两点路径唯一，维尼的路线也是唯一的，因此我们只要 统计维尼经过每个点的次数 即可。而树上路径又跟 LCA 什么的有关，因此这道题的做法就多种多样了。由于只有一次询问，比较容易想到的做法是 树上差分 后求 LCA 轻松搞定。再想深一点你会发现这道题简直就是 树链剖分 的板子，再加上这道题不用维护什么子树信息，所以 树链剖分 能做 Link/Cut Tree 当然也能做！需要注意的几点：这道题 LCT 得卡常，写的时候注意不要太飘；由于两条链相交的点会被重复计算，因此每次加的时候链头链尾要有一个减 1 (我是链尾)；最后一个点是不需要准备糖果的！输出答案的时候记得把标记都下放了 (我是先 makeroot 再输出) 。1234567891011121314151617181920212223242526272829303132333435363738394041424344#include &lt;cstdio&gt;#define N 300010#define lc(x) ch[x][0]#define rc(x) ch[x][1]#define re registerinline void swap(re int&amp;a,re int&amp;b)&#123;re int tmp(a);a=b,b=tmp;&#125;int ch[N][2],fa[N],rev[N],val[N],addv[N];inline void add(re int x,re int y)&#123;val[x]+=y,addv[x]+=y;&#125;inline void down(re int x) &#123; if(rev[x]) rev[lc(x)]^=1,rev[rc(x)]^=1,swap(lc(x),rc(x)),rev[x]=0; if(addv[x]) add(lc(x),addv[x]),add(rc(x),addv[x]),addv[x]=0;&#125;inline int nrt(re int x)&#123;return x==lc(fa[x])||x==rc(fa[x]);&#125;void psa(int x)&#123;if(nrt(x))psa(fa[x]);down(x);&#125;inline void rotate(re int x) &#123; re int y(fa[x]),z(fa[y]),k(x==rc(y)); ch[y][k]=ch[x][!k],ch[x][!k]=y;if(nrt(y))ch[z][y==rc(z)]=x; if(ch[y][k])fa[ch[y][k]]=y;fa[y]=x,fa[x]=z;&#125;inline void splay(re int x) &#123; re int y,z; for(psa(x);nrt(x);rotate(x)) &#123;y=fa[x],z=fa[y];if(nrt(y))rotate(x==rc(y)^y==rc(z)?x:y);&#125;&#125;inline void access(re int x)&#123;for(re int y(0);x;x=fa[y=x])splay(x),rc(x)=y;&#125;inline void mrt(re int x)&#123;access(x),splay(x),rev[x]^=1;&#125;inline void link(re int x,re int y)&#123;mrt(x),fa[x]=y;&#125;int n,a[N],x,y;int main() &#123; scanf("%d",&amp;n); for(re int i(1);i&lt;=n;++i) scanf("%d",a+i); for(re int i(1);i&lt;n;++i) scanf("%d%d",&amp;x,&amp;y),link(x,y); for(re int i(1);i&lt;n;++i) --val[a[i+1]],mrt(a[i]),access(a[i+1]),splay(a[i+1]),add(a[i+1],1); for(re int i(1);i&lt;=n;++i) mrt(i),printf("%d\n",val[i]); return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>Link/Cut Tree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[SDOI2011]染色]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-SDOI2011-%E6%9F%93%E8%89%B2%2F</url>
    <content type="text"><![CDATA[此处题面这道题的做法其实已经很明显了， 树链剖分 + 线段树 ，只是看到区间赋值心血来潮想用 珂朵莉树 水，结果就过了╮(╯▽╰)╭操作 1 就是 区间推平 ( assign ) ，操作 2 可以像找 最近公共祖先 ( LCA ) 一样一边往上方跳一边统计，由于珂朵莉树的结点存储的是一段值相同的连续区间，我们只需要记录上一次访问的结点的值与当前结点的值比较，若不同则更新并计数。值得注意的 $3$ 点：由于我们是统计链上的连续段，所以我们应从深度大的结点往小的枚举。由于我们是从链的两端分别往上跳，所以我们需要分别记录两边上次访问的结点的值。最后处于同一条链上时，需要考虑两端的值相同的情况。最后放上 $AC$ 代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127#include &lt;cstdio&gt;#include &lt;set&gt;using std::set;#define N 100010struct node &#123; int l,r,v; node(int L,int R=-1,int V=0):l(L),r(R),v(V)&#123;&#125; inline int operator&lt;(const node&amp;x)const&#123;return l&lt;x.l;&#125;&#125;;set&lt;node&gt;s;typedef set&lt;node&gt;::iterator IT;inline IT split(int pos) &#123; IT it(--s.upper_bound(node(pos))); if(it-&gt;l==pos) return it; int L(it-&gt;l),R(it-&gt;r),V(it-&gt;v); s.erase(it),s.insert(node(L,pos-1,V)); return s.insert(node(pos,R,V)).first;&#125;inline void assign(int l,int r,int v) &#123; IT itr(split(r+1)),itl(split(l)); s.erase(itl,itr);s.insert(node(l,r,v));&#125;int n,m,a[N],x,y,z;char opt;int e,bg[N],nx[N&lt;&lt;1],to[N&lt;&lt;1];inline void link(int u,int v)&#123;to[++e]=v,nx[e]=bg[u],bg[u]=e;&#125;int fa[N],dep[N],siz[N],ws[N];void dfs1(int now,int f) &#123; fa[now]=f,dep[now]=dep[f]+1,siz[now]=1; int mx(-1); for(int i=bg[now];i;i=nx[i]) if(to[i]!=f) &#123; dfs1(to[i],now); siz[now]+=siz[to[i]]; if(siz[to[i]]&gt;mx) mx=siz[to[i]],ws[now]=to[i]; &#125;&#125;int cnt,top[N],id[N],wt[N];void dfs2(int now,int tp) &#123; top[now]=tp,id[now]=++cnt,wt[cnt]=a[now]; if(!ws[now]) return; dfs2(ws[now],tp); for(int i=bg[now];i;i=nx[i]) if(to[i]!=fa[now]&amp;&amp;to[i]!=ws[now]) dfs2(to[i],to[i]);&#125;inline void change(int x,int y,int z) &#123; while(top[x]!=top[y]) &#123; if(dep[top[x]]&gt;dep[top[y]]) &#123; assign(id[top[x]],id[x],z); x=fa[top[x]]; &#125; else &#123; assign(id[top[y]],id[y],z); y=fa[top[y]]; &#125; &#125; if(dep[x]&gt;dep[y]) assign(id[y],id[x],z); else assign(id[x],id[y],z);&#125;inline int query(int x,int y) &#123; int ans(0),lasta(0),lastb(0); IT itl,itr; while(top[x]!=top[y]) &#123; if(dep[top[x]]&gt;dep[top[y]]) &#123; itr=split(id[x]+1),itl=split(id[top[x]]); for(--itr;;--itr) &#123; if(itr-&gt;v!=lasta) lasta=itr-&gt;v,++ans; if(itr==itl) break; &#125; x=fa[top[x]]; &#125; else &#123; itr=split(id[y]+1),itl=split(id[top[y]]); for(--itr;;--itr) &#123; if(itr-&gt;v!=lastb) lastb=itr-&gt;v,++ans; if(itr==itl) break; &#125; y=fa[top[y]]; &#125; &#125; if(dep[x]&gt;dep[y]) &#123; itr=split(id[x]+1),itl=split(id[y]); for(--itr;;--itr) &#123; if(itr-&gt;v!=lasta) lasta=itr-&gt;v,++ans; if(itr==itl) break; &#125; &#125; else &#123; itr=split(id[y]+1),itl=split(id[x]); for(--itr;;--itr) &#123; if(itr-&gt;v!=lastb) lastb=itr-&gt;v,++ans; if(itr==itl) break; &#125; &#125; return ans-(lasta==lastb);&#125;int main() &#123; scanf("%d%d",&amp;n,&amp;m); for(int i=1;i&lt;=n;++i) scanf("%d",a+i); for(int i=1;i&lt;n;++i) &#123; scanf("%d%d",&amp;x,&amp;y); link(x,y),link(y,x); &#125; dfs1(1,0); dfs2(1,1); for(int i=1;i&lt;=n;++i) s.insert(node(i,i,wt[i])); while(m--) &#123; scanf("\n%c%d%d",&amp;opt,&amp;x,&amp;y); if(opt=='C') &#123; scanf("%d",&amp;z); change(x,y,z); &#125; else printf("%d\n",query(x,y)); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>题解</tag>
        <tag>珂朵莉树</tag>
        <tag>树链剖分</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【题解】[Luogu1047]校门外的树]]></title>
    <url>%2F%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91-Luogu1047-%E6%A0%A1%E9%97%A8%E5%A4%96%E7%9A%84%E6%A0%91%2F</url>
    <content type="text"><![CDATA[此处题面看见一堆 dalao 题解写树状数组线段树，蒟蒻在这里安利一种毒瘤数据结构——珂朵莉树。一、介绍。珂朵莉树 (ChthollyTree) ，又名 OldDriverTree (老司机树)，简称 ODT ，是一种非常暴力的数据结构，它将一段值相同的区间以三元组 &lt; 左端点，右端点，值 &gt; 的方式存储起来，因此它的效率是建立在区间推平操作 (assign) 上的(也就是本题的砍树)。二、存储方式。珂朵莉树的存储基于平衡树(我这里为了方便用了 STL 的 set )，这里定义珂朵莉树的结点为：1234567struct node &#123; int l,r,v; node(int L,int R=-1,int V=0):l(L),r(R),v(V) &#123;&#125; bool operator&lt;(const node&amp; x)const&#123; return l&lt;x.l; &#125;&#125;;这里的 l 和 r 是区间的左右端点(闭区间)，v 是该区间的值(表示这一区间内所有元素的值都是v)，然后是构造函数和重载运算符，这里重载成比较区间左端点。最后把区间扔进平衡树就行了：12set&lt;node&gt;s;typedef set&lt;node&gt;::iterator IT;三、核心操作。珂朵莉树的操作是基于一个核心操作 split 的，传入参数 pos 后，它能返回左端点值为 pos 的结点的迭代器，如果不存在这样的结点，它就会把包含 pos 的结点 &lt; l，r，v &gt; 拆成 &lt; l , pos-1 , v &gt; 和 &lt; pos , r , v &gt; ，然后返回后面这个结点的迭代器。先上代码：123456789IT split(int pos) &#123; IT it=s.lower_bound(node(pos)); if(it!=s.end()&amp;&amp;it-&gt;l==pos) return it; --it; int L=it-&gt;l,R=it-&gt;r,V=it-&gt;v; s.erase(it); s.insert(node(L,pos-1,V)); return s.insert(node(pos,R,V)).first;&#125;一行行来看：1IT it=s.lower_bound(node(pos));lower_bound 是获取左端点大于等于 pos 的第一个结点。1if(it!=s.end()&amp;&amp;it-&gt;l==pos) return it;如果这个结点的左端点正好是 pos ，我们就直接返回它。12--it;int L=it-&gt;l,R=it-&gt;r,V=it-&gt;v;否则的话 —it 得到的就是包含 pos 的结点，我们用 L、R、V 储存它的左右端点和值。1s.erase(it);然后我们删掉这个结点。12s.insert(node(L,pos-1,V));return s.insert(node(pos,R,V)).first;最后我们插入两个新的结点，左右端点分别是 &lt; L、pos-1 &gt; 和 &lt; pos、R &gt; ，顺便返回后面这个结点的迭代器。这样我们就完成了 split 操作。四、区间推平。这是保证珂朵莉树复杂度不至于爆炸的重要操作，它能将一个区间内的值变得一样，本题的砍树就是区间赋值为 0 。先上代码：12345void assign(int l,int r,int v) &#123; IT itr=split(r+1),itl=split(l); s.erase(itl,itr); s.insert(node(l,r,v));&#125;看上去十分的暴力，事实上珂朵莉树就是这么暴力的数据结构。稍微解释一下代码：1IT itl=split(l),itr=split(r+1);itl 指向的结点左端点为 l ，itr 指向的结点左端点为 r+1 。1s.erase(itl,itr);删去平衡树中 [ itl , itr ) 的结点(左闭右开区间)。1s.insert(node(l,r,v));直接插入一个 &lt; l , r &gt; ，值为v的区间。就是这么直接暴力！Upd：由于某些未知原因（珂学规定），珂朵莉树提取区间时需要先 split 右端点！五、其他操作。1. 初始化初始化操作就是直接插入，本题所有树默认都是种上的，全部赋值为 1 就行：1s.insert(node(0,l,1));2. 区间操作区间操作的话这里就以题目的求和为例，先上代码：1234567int sum(int l,int r) &#123; int _sum=0; IT itr=split(r+1),itl=split(l); for(;itl!=itr;++itl) _sum+=(itl-&gt;v)*((itl-&gt;r)-(itl-&gt;l)+1); return _sum;&#125;同样是非常的暴力，直接取出所有区间内的结点暴力求和就行了，其他的操作如区间加法乘法什么的也是一样的，取出结点遍历一遍就行。六、本题代码。最后放上本题AC代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include&lt;cstdio&gt;#include&lt;set&gt;using namespace std;struct node &#123; int l,r,v; node(int L,int R=-1,int V=0):l(L),r(R),v(V) &#123;&#125; bool operator&lt;(const node&amp; x)const&#123; return l&lt;x.l; &#125;&#125;;int l,m,x,y,_sum;set&lt;node&gt;s;typedef set&lt;node&gt;::iterator IT;IT split(int pos) &#123; IT it=s.lower_bound(node(pos)); if(it!=s.end()&amp;&amp;it-&gt;l==pos) return it; --it; int L=it-&gt;l,R=it-&gt;r,V=it-&gt;v; s.erase(it); s.insert(node(L,pos-1,V)); return s.insert(node(pos,R,V)).first;&#125;void remove(int l,int r) &#123; IT itl=split(l),itr=split(r+1); s.erase(itl,itr); s.insert(node(l,r,0));&#125;void sum() &#123; for(IT it=s.begin();it!=s.end();++it) _sum+=it-&gt;v*(it-&gt;r-it-&gt;l+1);&#125;int main() &#123; scanf("%d%d",&amp;l,&amp;m); s.insert(node(0,l,1)); for(int i=1;i&lt;=m;++i) &#123; scanf("%d%d",&amp;x,&amp;y); remove(x,y); &#125; sum(); printf("%d",_sum);&#125;七、总结珂朵莉树的效率建立在区间推平操作 (assign) 上，它能使结点数量快速减小从而保证时间复杂度，因此珂朵莉树十分容易被卡，不到万不得已还是得乖乖用别的数据结构，不过它的代码十分简单，考场上写不出别的数据结构时也是可以交一个珂朵莉树的。]]></content>
      <tags>
        <tag>题解</tag>
        <tag>珂朵莉树</tag>
      </tags>
  </entry>
</search>
